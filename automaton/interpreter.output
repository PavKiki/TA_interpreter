Терминалы не используются в грамматике

   END
   ASSIGN


Грамматика

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | %empty

    4 stmts: stmt
    5      | stmts stmt

    6 stmt: NEWLINE
    7     | expr NEWLINE
    8     | print NEWLINE
    9     | declaration NEWLINE
   10     | '(' stmts ')'

   11 declaration: type VARIABLE DECLARE expr

   12 print: PRINT '(' expr ')'

   13 expr: const
   14     | VARIABLE
   15     | expr '+' expr
   16     | expr '-' expr
   17     | expr '*' expr
   18     | expr '/' expr
   19     | expr '<' expr
   20     | expr '>' expr
   21     | '!' expr
   22     | '(' expr ')'

   23 type: INT
   24     | CINT
   25     | VINT
   26     | MINT
   27     | CVINT
   28     | CMINT
   29     | BOOLEAN
   30     | CBOOLEAN
   31     | VBOOLEAN
   32     | MBOOLEAN
   33     | CVBOOLEAN
   34     | CMBOOLEAN

   35 const: INTEGER
   36      | BOOL


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'!' (33) 21
'(' (40) 10 12 22
')' (41) 10 12 22
'*' (42) 17
'+' (43) 15
'-' (45) 16
'/' (47) 18
'<' (60) 19
'>' (62) 20
error (256)
END (258)
BOOL <boolPtr> (259) 36
INTEGER <intPtr> (260) 35
VARIABLE <varName> (261) 11 14
CINT <vtype> (262) 24
VINT <vtype> (263) 25
MINT <vtype> (264) 26
INT <vtype> (265) 23
CVINT <vtype> (266) 27
CMINT <vtype> (267) 28
BOOLEAN <vtype> (268) 29
CBOOLEAN <vtype> (269) 30
VBOOLEAN <vtype> (270) 31
MBOOLEAN <vtype> (271) 32
CVBOOLEAN <vtype> (272) 33
CMBOOLEAN <vtype> (273) 34
NEWLINE (274) 6 7 8 9
PRINT (275) 12
ASSIGN (276)
DECLARE (277) 11


Нетерминальные символы с правилами, в которых они появляются

$accept (32)
    налево: 0
program (33)
    налево: 1, направо: 0
function (34)
    налево: 2 3, направо: 1 2
stmts <ptr> (35)
    налево: 4 5, направо: 5 10
stmt <ptr> (36)
    налево: 6 7 8 9 10, направо: 2 4 5
declaration <varOpPtr> (37)
    налево: 11, направо: 9
print <ptr> (38)
    налево: 12, направо: 8
expr <ptr> (39)
    налево: 13 14 15 16 17 18 19 20 21 22, направо: 7
    11 12 15 16 17 18 19 20 21 22
type <vtype> (40)
    налево: 23 24 25 26 27 28 29 30 31 32 33 34, направо:
    11
const <ptr> (41)
    налево: 35 36, направо: 13


State 0

    0 $accept: . program $end
    1 program: . function
    2 function: . function stmt
    3         | . %empty

    $default  вывод с использованием правила 3 (function)

    program   переход в состояние 1
    function  переход в состояние 2


State 1

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 3


State 2

    1 program: function .  [$end]
    2 function: function . stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . print NEWLINE
    9     | . declaration NEWLINE
   10     | . '(' stmts ')'
   11 declaration: . type VARIABLE DECLARE expr
   12 print: . PRINT '(' expr ')'
   13 expr: . const
   14     | . VARIABLE
   15     | . expr '+' expr
   16     | . expr '-' expr
   17     | . expr '*' expr
   18     | . expr '/' expr
   19     | . expr '<' expr
   20     | . expr '>' expr
   21     | . '!' expr
   22     | . '(' expr ')'
   23 type: . INT
   24     | . CINT
   25     | . VINT
   26     | . MINT
   27     | . CVINT
   28     | . CMINT
   29     | . BOOLEAN
   30     | . CBOOLEAN
   31     | . VBOOLEAN
   32     | . MBOOLEAN
   33     | . CVBOOLEAN
   34     | . CMBOOLEAN
   35 const: . INTEGER
   36      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    CINT       сдвиг, и переход в состояние 7
    VINT       сдвиг, и переход в состояние 8
    MINT       сдвиг, и переход в состояние 9
    INT        сдвиг, и переход в состояние 10
    CVINT      сдвиг, и переход в состояние 11
    CMINT      сдвиг, и переход в состояние 12
    BOOLEAN    сдвиг, и переход в состояние 13
    CBOOLEAN   сдвиг, и переход в состояние 14
    VBOOLEAN   сдвиг, и переход в состояние 15
    MBOOLEAN   сдвиг, и переход в состояние 16
    CVBOOLEAN  сдвиг, и переход в состояние 17
    CMBOOLEAN  сдвиг, и переход в состояние 18
    NEWLINE    сдвиг, и переход в состояние 19
    PRINT      сдвиг, и переход в состояние 20
    '!'        сдвиг, и переход в состояние 21
    '('        сдвиг, и переход в состояние 22

    $default  вывод с использованием правила 1 (program)

    stmt         переход в состояние 23
    declaration  переход в состояние 24
    print        переход в состояние 25
    expr         переход в состояние 26
    type         переход в состояние 27
    const        переход в состояние 28


State 3

    0 $accept: program $end .

    $default  принять


State 4

   36 const: BOOL .

    $default  вывод с использованием правила 36 (const)


State 5

   35 const: INTEGER .

    $default  вывод с использованием правила 35 (const)


State 6

   14 expr: VARIABLE .

    $default  вывод с использованием правила 14 (expr)


State 7

   24 type: CINT .

    $default  вывод с использованием правила 24 (type)


State 8

   25 type: VINT .

    $default  вывод с использованием правила 25 (type)


State 9

   26 type: MINT .

    $default  вывод с использованием правила 26 (type)


State 10

   23 type: INT .

    $default  вывод с использованием правила 23 (type)


State 11

   27 type: CVINT .

    $default  вывод с использованием правила 27 (type)


State 12

   28 type: CMINT .

    $default  вывод с использованием правила 28 (type)


State 13

   29 type: BOOLEAN .

    $default  вывод с использованием правила 29 (type)


State 14

   30 type: CBOOLEAN .

    $default  вывод с использованием правила 30 (type)


State 15

   31 type: VBOOLEAN .

    $default  вывод с использованием правила 31 (type)


State 16

   32 type: MBOOLEAN .

    $default  вывод с использованием правила 32 (type)


State 17

   33 type: CVBOOLEAN .

    $default  вывод с использованием правила 33 (type)


State 18

   34 type: CMBOOLEAN .

    $default  вывод с использованием правила 34 (type)


State 19

    6 stmt: NEWLINE .

    $default  вывод с использованием правила 6 (stmt)


State 20

   12 print: PRINT . '(' expr ')'

    '('  сдвиг, и переход в состояние 29


State 21

   13 expr: . const
   14     | . VARIABLE
   15     | . expr '+' expr
   16     | . expr '-' expr
   17     | . expr '*' expr
   18     | . expr '/' expr
   19     | . expr '<' expr
   20     | . expr '>' expr
   21     | . '!' expr
   21     | '!' . expr
   22     | . '(' expr ')'
   35 const: . INTEGER
   36      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 6
    '!'       сдвиг, и переход в состояние 21
    '('       сдвиг, и переход в состояние 30

    expr   переход в состояние 31
    const  переход в состояние 28


State 22

    4 stmts: . stmt
    5      | . stmts stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . print NEWLINE
    9     | . declaration NEWLINE
   10     | . '(' stmts ')'
   10     | '(' . stmts ')'
   11 declaration: . type VARIABLE DECLARE expr
   12 print: . PRINT '(' expr ')'
   13 expr: . const
   14     | . VARIABLE
   15     | . expr '+' expr
   16     | . expr '-' expr
   17     | . expr '*' expr
   18     | . expr '/' expr
   19     | . expr '<' expr
   20     | . expr '>' expr
   21     | . '!' expr
   22     | . '(' expr ')'
   22     | '(' . expr ')'
   23 type: . INT
   24     | . CINT
   25     | . VINT
   26     | . MINT
   27     | . CVINT
   28     | . CMINT
   29     | . BOOLEAN
   30     | . CBOOLEAN
   31     | . VBOOLEAN
   32     | . MBOOLEAN
   33     | . CVBOOLEAN
   34     | . CMBOOLEAN
   35 const: . INTEGER
   36      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    CINT       сдвиг, и переход в состояние 7
    VINT       сдвиг, и переход в состояние 8
    MINT       сдвиг, и переход в состояние 9
    INT        сдвиг, и переход в состояние 10
    CVINT      сдвиг, и переход в состояние 11
    CMINT      сдвиг, и переход в состояние 12
    BOOLEAN    сдвиг, и переход в состояние 13
    CBOOLEAN   сдвиг, и переход в состояние 14
    VBOOLEAN   сдвиг, и переход в состояние 15
    MBOOLEAN   сдвиг, и переход в состояние 16
    CVBOOLEAN  сдвиг, и переход в состояние 17
    CMBOOLEAN  сдвиг, и переход в состояние 18
    NEWLINE    сдвиг, и переход в состояние 19
    PRINT      сдвиг, и переход в состояние 20
    '!'        сдвиг, и переход в состояние 21
    '('        сдвиг, и переход в состояние 22

    stmts        переход в состояние 32
    stmt         переход в состояние 33
    declaration  переход в состояние 24
    print        переход в состояние 25
    expr         переход в состояние 34
    type         переход в состояние 27
    const        переход в состояние 28


State 23

    2 function: function stmt .

    $default  вывод с использованием правила 2 (function)


State 24

    9 stmt: declaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 35


State 25

    8 stmt: print . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 36


State 26

    7 stmt: expr . NEWLINE
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr

    NEWLINE  сдвиг, и переход в состояние 37
    '<'      сдвиг, и переход в состояние 38
    '>'      сдвиг, и переход в состояние 39
    '+'      сдвиг, и переход в состояние 40
    '-'      сдвиг, и переход в состояние 41
    '*'      сдвиг, и переход в состояние 42
    '/'      сдвиг, и переход в состояние 43


State 27

   11 declaration: type . VARIABLE DECLARE expr

    VARIABLE  сдвиг, и переход в состояние 44


State 28

   13 expr: const .

    $default  вывод с использованием правила 13 (expr)


State 29

   12 print: PRINT '(' . expr ')'
   13 expr: . const
   14     | . VARIABLE
   15     | . expr '+' expr
   16     | . expr '-' expr
   17     | . expr '*' expr
   18     | . expr '/' expr
   19     | . expr '<' expr
   20     | . expr '>' expr
   21     | . '!' expr
   22     | . '(' expr ')'
   35 const: . INTEGER
   36      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 6
    '!'       сдвиг, и переход в состояние 21
    '('       сдвиг, и переход в состояние 30

    expr   переход в состояние 45
    const  переход в состояние 28


State 30

   13 expr: . const
   14     | . VARIABLE
   15     | . expr '+' expr
   16     | . expr '-' expr
   17     | . expr '*' expr
   18     | . expr '/' expr
   19     | . expr '<' expr
   20     | . expr '>' expr
   21     | . '!' expr
   22     | . '(' expr ')'
   22     | '(' . expr ')'
   35 const: . INTEGER
   36      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 6
    '!'       сдвиг, и переход в состояние 21
    '('       сдвиг, и переход в состояние 30

    expr   переход в состояние 46
    const  переход в состояние 28


State 31

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   21     | '!' expr .  [NEWLINE, '<', '>', '+', '-', '*', '/', ')']

    $default  вывод с использованием правила 21 (expr)

    Конфликт между правилом 21 и лексемой '<' разрешен выводом ('<' < '!').
    Конфликт между правилом 21 и лексемой '>' разрешен выводом ('>' < '!').
    Конфликт между правилом 21 и лексемой '+' разрешен выводом ('+' < '!').
    Конфликт между правилом 21 и лексемой '-' разрешен выводом ('-' < '!').
    Конфликт между правилом 21 и лексемой '*' разрешен выводом ('*' < '!').
    Конфликт между правилом 21 и лексемой '/' разрешен выводом ('/' < '!').


State 32

    5 stmts: stmts . stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . print NEWLINE
    9     | . declaration NEWLINE
   10     | . '(' stmts ')'
   10     | '(' stmts . ')'
   11 declaration: . type VARIABLE DECLARE expr
   12 print: . PRINT '(' expr ')'
   13 expr: . const
   14     | . VARIABLE
   15     | . expr '+' expr
   16     | . expr '-' expr
   17     | . expr '*' expr
   18     | . expr '/' expr
   19     | . expr '<' expr
   20     | . expr '>' expr
   21     | . '!' expr
   22     | . '(' expr ')'
   23 type: . INT
   24     | . CINT
   25     | . VINT
   26     | . MINT
   27     | . CVINT
   28     | . CMINT
   29     | . BOOLEAN
   30     | . CBOOLEAN
   31     | . VBOOLEAN
   32     | . MBOOLEAN
   33     | . CVBOOLEAN
   34     | . CMBOOLEAN
   35 const: . INTEGER
   36      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    CINT       сдвиг, и переход в состояние 7
    VINT       сдвиг, и переход в состояние 8
    MINT       сдвиг, и переход в состояние 9
    INT        сдвиг, и переход в состояние 10
    CVINT      сдвиг, и переход в состояние 11
    CMINT      сдвиг, и переход в состояние 12
    BOOLEAN    сдвиг, и переход в состояние 13
    CBOOLEAN   сдвиг, и переход в состояние 14
    VBOOLEAN   сдвиг, и переход в состояние 15
    MBOOLEAN   сдвиг, и переход в состояние 16
    CVBOOLEAN  сдвиг, и переход в состояние 17
    CMBOOLEAN  сдвиг, и переход в состояние 18
    NEWLINE    сдвиг, и переход в состояние 19
    PRINT      сдвиг, и переход в состояние 20
    '!'        сдвиг, и переход в состояние 21
    '('        сдвиг, и переход в состояние 22
    ')'        сдвиг, и переход в состояние 47

    stmt         переход в состояние 48
    declaration  переход в состояние 24
    print        переход в состояние 25
    expr         переход в состояние 26
    type         переход в состояние 27
    const        переход в состояние 28


State 33

    4 stmts: stmt .

    $default  вывод с использованием правила 4 (stmts)


State 34

    7 stmt: expr . NEWLINE
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   22     | '(' expr . ')'

    NEWLINE  сдвиг, и переход в состояние 37
    '<'      сдвиг, и переход в состояние 38
    '>'      сдвиг, и переход в состояние 39
    '+'      сдвиг, и переход в состояние 40
    '-'      сдвиг, и переход в состояние 41
    '*'      сдвиг, и переход в состояние 42
    '/'      сдвиг, и переход в состояние 43
    ')'      сдвиг, и переход в состояние 49


State 35

    9 stmt: declaration NEWLINE .

    $default  вывод с использованием правила 9 (stmt)


State 36

    8 stmt: print NEWLINE .

    $default  вывод с использованием правила 8 (stmt)


State 37

    7 stmt: expr NEWLINE .

    $default  вывод с использованием правила 7 (stmt)


State 38

   13 expr: . const
   14     | . VARIABLE
   15     | . expr '+' expr
   16     | . expr '-' expr
   17     | . expr '*' expr
   18     | . expr '/' expr
   19     | . expr '<' expr
   19     | expr '<' . expr
   20     | . expr '>' expr
   21     | . '!' expr
   22     | . '(' expr ')'
   35 const: . INTEGER
   36      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 6
    '!'       сдвиг, и переход в состояние 21
    '('       сдвиг, и переход в состояние 30

    expr   переход в состояние 50
    const  переход в состояние 28


State 39

   13 expr: . const
   14     | . VARIABLE
   15     | . expr '+' expr
   16     | . expr '-' expr
   17     | . expr '*' expr
   18     | . expr '/' expr
   19     | . expr '<' expr
   20     | . expr '>' expr
   20     | expr '>' . expr
   21     | . '!' expr
   22     | . '(' expr ')'
   35 const: . INTEGER
   36      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 6
    '!'       сдвиг, и переход в состояние 21
    '('       сдвиг, и переход в состояние 30

    expr   переход в состояние 51
    const  переход в состояние 28


State 40

   13 expr: . const
   14     | . VARIABLE
   15     | . expr '+' expr
   15     | expr '+' . expr
   16     | . expr '-' expr
   17     | . expr '*' expr
   18     | . expr '/' expr
   19     | . expr '<' expr
   20     | . expr '>' expr
   21     | . '!' expr
   22     | . '(' expr ')'
   35 const: . INTEGER
   36      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 6
    '!'       сдвиг, и переход в состояние 21
    '('       сдвиг, и переход в состояние 30

    expr   переход в состояние 52
    const  переход в состояние 28


State 41

   13 expr: . const
   14     | . VARIABLE
   15     | . expr '+' expr
   16     | . expr '-' expr
   16     | expr '-' . expr
   17     | . expr '*' expr
   18     | . expr '/' expr
   19     | . expr '<' expr
   20     | . expr '>' expr
   21     | . '!' expr
   22     | . '(' expr ')'
   35 const: . INTEGER
   36      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 6
    '!'       сдвиг, и переход в состояние 21
    '('       сдвиг, и переход в состояние 30

    expr   переход в состояние 53
    const  переход в состояние 28


State 42

   13 expr: . const
   14     | . VARIABLE
   15     | . expr '+' expr
   16     | . expr '-' expr
   17     | . expr '*' expr
   17     | expr '*' . expr
   18     | . expr '/' expr
   19     | . expr '<' expr
   20     | . expr '>' expr
   21     | . '!' expr
   22     | . '(' expr ')'
   35 const: . INTEGER
   36      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 6
    '!'       сдвиг, и переход в состояние 21
    '('       сдвиг, и переход в состояние 30

    expr   переход в состояние 54
    const  переход в состояние 28


State 43

   13 expr: . const
   14     | . VARIABLE
   15     | . expr '+' expr
   16     | . expr '-' expr
   17     | . expr '*' expr
   18     | . expr '/' expr
   18     | expr '/' . expr
   19     | . expr '<' expr
   20     | . expr '>' expr
   21     | . '!' expr
   22     | . '(' expr ')'
   35 const: . INTEGER
   36      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 6
    '!'       сдвиг, и переход в состояние 21
    '('       сдвиг, и переход в состояние 30

    expr   переход в состояние 55
    const  переход в состояние 28


State 44

   11 declaration: type VARIABLE . DECLARE expr

    DECLARE  сдвиг, и переход в состояние 56


State 45

   12 print: PRINT '(' expr . ')'
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr

    '<'  сдвиг, и переход в состояние 38
    '>'  сдвиг, и переход в состояние 39
    '+'  сдвиг, и переход в состояние 40
    '-'  сдвиг, и переход в состояние 41
    '*'  сдвиг, и переход в состояние 42
    '/'  сдвиг, и переход в состояние 43
    ')'  сдвиг, и переход в состояние 57


State 46

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   22     | '(' expr . ')'

    '<'  сдвиг, и переход в состояние 38
    '>'  сдвиг, и переход в состояние 39
    '+'  сдвиг, и переход в состояние 40
    '-'  сдвиг, и переход в состояние 41
    '*'  сдвиг, и переход в состояние 42
    '/'  сдвиг, и переход в состояние 43
    ')'  сдвиг, и переход в состояние 49


State 47

   10 stmt: '(' stmts ')' .

    $default  вывод с использованием правила 10 (stmt)


State 48

    5 stmts: stmts stmt .

    $default  вывод с использованием правила 5 (stmts)


State 49

   22 expr: '(' expr ')' .

    $default  вывод с использованием правила 22 (expr)


State 50

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   19     | expr '<' expr .  [NEWLINE, '<', '>', ')']
   20     | expr . '>' expr

    '+'  сдвиг, и переход в состояние 40
    '-'  сдвиг, и переход в состояние 41
    '*'  сдвиг, и переход в состояние 42
    '/'  сдвиг, и переход в состояние 43

    $default  вывод с использованием правила 19 (expr)

    Конфликт между правилом 19 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 19 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 19 и лексемой '+' разрешен сдвигом ('<' < '+').
    Конфликт между правилом 19 и лексемой '-' разрешен сдвигом ('<' < '-').
    Конфликт между правилом 19 и лексемой '*' разрешен сдвигом ('<' < '*').
    Конфликт между правилом 19 и лексемой '/' разрешен сдвигом ('<' < '/').


State 51

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr
   20     | expr '>' expr .  [NEWLINE, '<', '>', ')']

    '+'  сдвиг, и переход в состояние 40
    '-'  сдвиг, и переход в состояние 41
    '*'  сдвиг, и переход в состояние 42
    '/'  сдвиг, и переход в состояние 43

    $default  вывод с использованием правила 20 (expr)

    Конфликт между правилом 20 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 20 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 20 и лексемой '+' разрешен сдвигом ('>' < '+').
    Конфликт между правилом 20 и лексемой '-' разрешен сдвигом ('>' < '-').
    Конфликт между правилом 20 и лексемой '*' разрешен сдвигом ('>' < '*').
    Конфликт между правилом 20 и лексемой '/' разрешен сдвигом ('>' < '/').


State 52

   15 expr: expr . '+' expr
   15     | expr '+' expr .  [NEWLINE, '<', '>', '+', '-', ')']
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr

    '*'  сдвиг, и переход в состояние 42
    '/'  сдвиг, и переход в состояние 43

    $default  вывод с использованием правила 15 (expr)

    Конфликт между правилом 15 и лексемой '<' разрешен выводом ('<' < '+').
    Конфликт между правилом 15 и лексемой '>' разрешен выводом ('>' < '+').
    Конфликт между правилом 15 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 15 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 15 и лексемой '*' разрешен сдвигом ('+' < '*').
    Конфликт между правилом 15 и лексемой '/' разрешен сдвигом ('+' < '/').


State 53

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   16     | expr '-' expr .  [NEWLINE, '<', '>', '+', '-', ')']
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr

    '*'  сдвиг, и переход в состояние 42
    '/'  сдвиг, и переход в состояние 43

    $default  вывод с использованием правила 16 (expr)

    Конфликт между правилом 16 и лексемой '<' разрешен выводом ('<' < '-').
    Конфликт между правилом 16 и лексемой '>' разрешен выводом ('>' < '-').
    Конфликт между правилом 16 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 16 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 16 и лексемой '*' разрешен сдвигом ('-' < '*').
    Конфликт между правилом 16 и лексемой '/' разрешен сдвигом ('-' < '/').


State 54

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   17     | expr '*' expr .  [NEWLINE, '<', '>', '+', '-', '*', '/', ')']
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr

    $default  вывод с использованием правила 17 (expr)

    Конфликт между правилом 17 и лексемой '<' разрешен выводом ('<' < '*').
    Конфликт между правилом 17 и лексемой '>' разрешен выводом ('>' < '*').
    Конфликт между правилом 17 и лексемой '+' разрешен выводом ('+' < '*').
    Конфликт между правилом 17 и лексемой '-' разрешен выводом ('-' < '*').
    Конфликт между правилом 17 и лексемой '*' разрешен выводом (%left '*').
    Конфликт между правилом 17 и лексемой '/' разрешен выводом (%left '/').


State 55

   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   18     | expr '/' expr .  [NEWLINE, '<', '>', '+', '-', '*', '/', ')']
   19     | expr . '<' expr
   20     | expr . '>' expr

    $default  вывод с использованием правила 18 (expr)

    Конфликт между правилом 18 и лексемой '<' разрешен выводом ('<' < '/').
    Конфликт между правилом 18 и лексемой '>' разрешен выводом ('>' < '/').
    Конфликт между правилом 18 и лексемой '+' разрешен выводом ('+' < '/').
    Конфликт между правилом 18 и лексемой '-' разрешен выводом ('-' < '/').
    Конфликт между правилом 18 и лексемой '*' разрешен выводом (%left '*').
    Конфликт между правилом 18 и лексемой '/' разрешен выводом (%left '/').


State 56

   11 declaration: type VARIABLE DECLARE . expr
   13 expr: . const
   14     | . VARIABLE
   15     | . expr '+' expr
   16     | . expr '-' expr
   17     | . expr '*' expr
   18     | . expr '/' expr
   19     | . expr '<' expr
   20     | . expr '>' expr
   21     | . '!' expr
   22     | . '(' expr ')'
   35 const: . INTEGER
   36      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 6
    '!'       сдвиг, и переход в состояние 21
    '('       сдвиг, и переход в состояние 30

    expr   переход в состояние 58
    const  переход в состояние 28


State 57

   12 print: PRINT '(' expr ')' .

    $default  вывод с использованием правила 12 (print)


State 58

   11 declaration: type VARIABLE DECLARE expr .  [NEWLINE]
   15 expr: expr . '+' expr
   16     | expr . '-' expr
   17     | expr . '*' expr
   18     | expr . '/' expr
   19     | expr . '<' expr
   20     | expr . '>' expr

    '<'  сдвиг, и переход в состояние 38
    '>'  сдвиг, и переход в состояние 39
    '+'  сдвиг, и переход в состояние 40
    '-'  сдвиг, и переход в состояние 41
    '*'  сдвиг, и переход в состояние 42
    '/'  сдвиг, и переход в состояние 43

    $default  вывод с использованием правила 11 (declaration)
