Терминалы не используются в грамматике

   END
   ER


Состояние 10 конфликты: 22 вывода/вывода
Состояние 37 конфликты: 33 сдвига/вывода
Состояние 76 конфликты: 1 сдвига/вывода
Состояние 77 конфликты: 1 сдвига/вывода
Состояние 86 конфликты: 12 вывода/вывода
Состояние 131 конфликты: 4 вывода/вывода
Состояние 141 конфликты: 1 сдвига/вывода
Состояние 169 конфликты: 5 сдвига/вывода
Состояние 170 конфликты: 4 сдвига/вывода
Состояние 172 конфликты: 4 сдвига/вывода
Состояние 173 конфликты: 3 сдвига/вывода
Состояние 175 конфликты: 6 сдвига/вывода
Состояние 176 конфликты: 1 сдвига/вывода
Состояние 177 конфликты: 1 сдвига/вывода
Состояние 178 конфликты: 1 сдвига/вывода
Состояние 179 конфликты: 1 сдвига/вывода
Состояние 180 конфликты: 1 сдвига/вывода


Грамматика

    0 $accept: program $end

    1 program: func

    2 func: func stmts
    3     | func error
    4     | %empty

    5 stmts: stmt
    6      | stmts stmt
    7      | stmts error

    8 stmt: NEWLINE
    9     | expr NEWLINE
   10     | vector NEWLINE
   11     | matrix NEWLINE
   12     | print NEWLINE
   13     | vmdeclaration NEWLINE
   14     | declaration NEWLINE
   15     | assignment NEWLINE
   16     | iff NEWLINE
   17     | forr NEWLINE
   18     | function NEWLINE
   19     | callfunction NEWLINE
   20     | robotactions NEWLINE
   21     | '(' stmts ')'

   22 robotactions: robotright
   23             | robotleft

   24 robotmove: MOVE '(' expr ')'

   25 robotright: RIGHT

   26 robotleft: LEFT

   27 robotwall: WALL

   28 robotexit: ROBEX

   29 iff: IF expr NEWLINE begif stmts endif

   30 begif: B
   31      | BEGIF

   32 endif: E
   33      | ENDIF

   34 begfor: B
   35       | BEGFOR

   36 endfor: E
   37       | ENDFOR

   38 forr: FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor

   39 return_func: type VAR
   40            | return_func ',' type VAR
   41            | return_func error

   42 args_func: '[' type VAR
   43          | '[' type VAR DECLARE expr
   44          | '[' type VAR DECLARE vector
   45          | '[' type VAR DECLARE matrix
   46          | args_func ',' type VAR
   47          | args_func ',' type VAR DECLARE expr
   48          | args_func ',' type VAR DECLARE vector
   49          | args_func ',' type VAR DECLARE matrix
   50          | args_func ']'
   51          | args_func error

   52 function_head: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'

   53 function: function_head B NEWLINE stmts E

   54 callfunc_args: expr
   55              | vector
   56              | matrix
   57              | DFLT
   58              | callfunc_args ',' expr
   59              | callfunc_args ',' vector
   60              | callfunc_args ',' matrix
   61              | callfunc_args ',' DFLT
   62              | callfunc_args error

   63 callfunction: '(' return_func ')' DECLARE FVARIABLE '[' callfunc_args ']'

   64 matrix: '{' listexprs '}'
   65       | MVARIABLE '(' vector ',' '[' ']' ')'
   66       | MVARIABLE '(' '[' ']' ',' vector ')'
   67       | MVARIABLE '(' matrix ')'
   68       | MVARIABLE
   69       | matrix '*' matrix
   70       | matrix ELEMMULT matrix
   71       | matrix '\''
   72       | matrix RIGHTSHIFT
   73       | matrix LEFTSHIFT
   74       | vector '\''
   75       | matrix ELEMMULT vector
   76       | matrix ELEMMULT expr
   77       | VAR

   78 listexprs: vector ',' vector
   79          | listexprs ',' vector
   80          | listexprs error

   81 vector: '{' exprs '}'
   82       | VVARIABLE '(' vector ',' '[' ']' ')'
   83       | MVARIABLE '(' expr ',' '[' ']' ')'
   84       | MVARIABLE '(' '[' ']' ',' expr ')'
   85       | VVARIABLE
   86       | vector ELEMMULT vector
   87       | vector RIGHTSHIFT
   88       | vector LEFTSHIFT
   89       | vector ELEMMULT expr
   90       | VAR

   91 exprs: expr ',' expr
   92      | exprs ',' expr
   93      | exprs error

   94 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr
   95              | VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | MVARIABLE '(' matrix ')' ASSIGN matrix

  102 declaration: type VAR DECLARE expr
  103            | type VAR DECLARE vector
  104            | type VAR DECLARE matrix
  105            | type VAR ASSIGN

  106 assignment: VARIABLE ASSIGN expr
  107           | VVARIABLE ASSIGN vector
  108           | MVARIABLE ASSIGN matrix
  109           | VARIABLE DECLARE
  110           | VVARIABLE DECLARE
  111           | MVARIABLE DECLARE

  112 print: PRINT '(' expr ')'
  113      | PRINT '(' VVARIABLE ')'
  114      | PRINT '(' MVARIABLE ')'
  115      | PRINT '(' VAR ')'
  116      | PRINT '(' FVARIABLE ')'

  117 expr: const
  118     | robotexit
  119     | robotmove
  120     | robotwall
  121     | VARIABLE
  122     | '-' expr
  123     | expr '+' expr
  124     | expr '-' expr
  125     | expr '/' expr
  126     | expr '<' expr
  127     | expr '>' expr
  128     | '!' expr
  129     | expr CONJUNCTION expr
  130     | '(' expr ')'
  131     | VVARIABLE '(' expr ')'
  132     | MVARIABLE '(' expr ',' expr ')'
  133     | VAR

  134 type: INT
  135     | CINT
  136     | VINT
  137     | MINT
  138     | CVINT
  139     | CMINT
  140     | BOOLEAN
  141     | CBOOLEAN
  142     | VBOOLEAN
  143     | MBOOLEAN
  144     | CVBOOLEAN
  145     | CMBOOLEAN

  146 const: INTEGER
  147      | BOOL


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'!' (33) 128
'\'' (39) 71 74
'(' (40) 21 24 52 63 65 66 67 82 83 84 94 95 96 97 98 99 100 101 112
    113 114 115 116 130 131 132
')' (41) 21 24 52 63 65 66 67 82 83 84 94 95 96 97 98 99 100 101 112
    113 114 115 116 130 131 132
'*' (42) 69
'+' (43) 123
',' (44) 40 46 47 48 49 58 59 60 61 65 66 78 79 82 83 84 91 92 95 96
    97 98 99 100 132
'-' (45) 122 124
'/' (47) 125
'<' (60) 126
'>' (62) 127
'[' (91) 42 43 44 45 52 63 65 66 82 83 84 95 97 98 99 100
']' (93) 50 52 63 65 66 82 83 84 95 97 98 99 100
'{' (123) 64 81
'}' (125) 64 81
error (256) 3 7 41 51 62 80 93
END (258)
BOOL <boolPtr> (259) 147
INTEGER <intPtr> (260) 146
VARIABLE <varName> (261) 106 109 121
VVARIABLE <varName> (262) 82 85 94 95 107 110 113 131
MVARIABLE <varName> (263) 65 66 67 68 83 84 96 97 98 99 100 101 108
    111 114 132
VAR <varName> (264) 39 40 42 43 44 45 46 47 48 49 52 77 90 102 103
    104 105 115 133
FVARIABLE <varName> (265) 63 116
CINT <vtype> (266) 135
VINT <vtype> (267) 136
MINT <vtype> (268) 137
INT <vtype> (269) 134
CVINT <vtype> (270) 138
CMINT <vtype> (271) 139
BOOLEAN <vtype> (272) 140
CBOOLEAN <vtype> (273) 141
VBOOLEAN <vtype> (274) 142
MBOOLEAN <vtype> (275) 143
CVBOOLEAN <vtype> (276) 144
CMBOOLEAN <vtype> (277) 145
NEWLINE (278) 8 9 10 11 12 13 14 15 16 17 18 19 20 29 38 53
PRINT (279) 112 113 114 115 116
CONJUNCTION (280) 129
ELEMMULT (281) 70 75 76 86 89
LEFTSHIFT (282) 73 88
RIGHTSHIFT (283) 72 87
IF (284) 29
FORR (285) 38
ER (286)
DOUBLEDOT (287) 38
B (288) 30 34 53
E (289) 32 36 53
FUNC (290) 52
MOVE (291) 24
RIGHT (292) 25
LEFT (293) 26
ROBEX (294) 28
WALL (295) 27
BEGFOR (296) 35
BEGIF (297) 31
ENDIF (298) 33
ENDFOR (299) 37
DFLT (300) 57 61
ASSIGN (301) 94 95 96 97 98 99 100 101 105 106 107 108
DECLARE (302) 43 44 45 47 48 49 52 63 102 103 104 109 110 111
UMINUS (303)


Нетерминальные символы с правилами, в которых они появляются

$accept (64)
    налево: 0
program (65)
    налево: 1, направо: 0
func (66)
    налево: 2 3 4, направо: 1 2 3
stmts <ptr> (67)
    налево: 5 6 7, направо: 2 6 7 21 29 38 53
stmt <ptr> (68)
    налево: 8 9 10 11 12 13 14 15 16 17 18 19 20 21, направо:
    5 6
robotactions <ptr> (69)
    налево: 22 23, направо: 20
robotmove <ptr> (70)
    налево: 24, направо: 119
robotright <ptr> (71)
    налево: 25, направо: 22
robotleft <ptr> (72)
    налево: 26, направо: 23
robotwall <ptr> (73)
    налево: 27, направо: 120
robotexit <ptr> (74)
    налево: 28, направо: 118
iff <ptr> (75)
    налево: 29, направо: 16
begif (76)
    налево: 30 31, направо: 29
endif (77)
    налево: 32 33, направо: 29
begfor (78)
    налево: 34 35, направо: 38
endfor (79)
    налево: 36 37, направо: 38
forr <ptr> (80)
    налево: 38, направо: 17
return_func <ptr> (81)
    налево: 39 40 41, направо: 40 41 52 63
args_func <ptr> (82)
    налево: 42 43 44 45 46 47 48 49 50 51, направо: 46
    47 48 49 50 51 52
function_head <ptr> (83)
    налево: 52, направо: 53
function <ptr> (84)
    налево: 53, направо: 18
callfunc_args <ptr> (85)
    налево: 54 55 56 57 58 59 60 61 62, направо: 58 59
    60 61 62 63
callfunction <ptr> (86)
    налево: 63, направо: 19
matrix <ptr> (87)
    налево: 64 65 66 67 68 69 70 71 72 73 74 75 76 77, направо:
    11 45 49 56 60 67 69 70 71 72 73 75 76 99 100 101 104 108
listexprs <ptr> (88)
    налево: 78 79 80, направо: 64 79 80
vector <ptr> (89)
    налево: 81 82 83 84 85 86 87 88 89 90, направо: 10
    44 48 55 59 65 66 74 75 78 79 82 86 87 88 89 95 97 98 99 100 103
    107
exprs <ptr> (90)
    налево: 91 92 93, направо: 81 92 93
vmdeclaration <ptr> (91)
    налево: 94 95 96 97 98 99 100 101, направо: 13
declaration <varOpPtr> (92)
    налево: 102 103 104 105, направо: 14 38
assignment <varOpPtr> (93)
    налево: 106 107 108 109 110 111, направо: 15
print <ptr> (94)
    налево: 112 113 114 115 116, направо: 12
expr <ptr> (95)
    налево: 117 118 119 120 121 122 123 124 125 126 127 128 129
    130 131 132 133, направо: 9 24 29 38 43 47 54 58 76 83 84
    89 91 92 94 96 97 98 102 106 112 122 123 124 125 126 127 128 129
    130 131 132
type <vtype> (96)
    налево: 134 135 136 137 138 139 140 141 142 143 144 145,
    направо: 39 40 42 43 44 45 46 47 48 49 102 103 104 105
const <ptr> (97)
    налево: 146 147, направо: 117


State 0

    0 $accept: . program $end
    1 program: . func
    2 func: . func stmts
    3     | . func error
    4     | . %empty

    $default  вывод с использованием правила 4 (func)

    program  переход в состояние 1
    func     переход в состояние 2


State 1

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 3


State 2

    1 program: func .  [$end]
    2 func: func . stmts
    3     | func . error
    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8 stmt: . NEWLINE
    9     | . expr NEWLINE
   10     | . vector NEWLINE
   11     | . matrix NEWLINE
   12     | . print NEWLINE
   13     | . vmdeclaration NEWLINE
   14     | . declaration NEWLINE
   15     | . assignment NEWLINE
   16     | . iff NEWLINE
   17     | . forr NEWLINE
   18     | . function NEWLINE
   19     | . callfunction NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22 robotactions: . robotright
   23             | . robotleft
   24 robotmove: . MOVE '(' expr ')'
   25 robotright: . RIGHT
   26 robotleft: . LEFT
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   29 iff: . IF expr NEWLINE begif stmts endif
   38 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   52 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   53 function: . function_head B NEWLINE stmts E
   63 callfunction: . '(' return_func ')' DECLARE FVARIABLE '[' callfunc_args ']'
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105            | . type VAR ASSIGN
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109           | . VARIABLE DECLARE
  110           | . VVARIABLE DECLARE
  111           | . MVARIABLE DECLARE
  112 print: . PRINT '(' expr ')'
  113      | . PRINT '(' VVARIABLE ')'
  114      | . PRINT '(' MVARIABLE ')'
  115      | . PRINT '(' VAR ')'
  116      | . PRINT '(' FVARIABLE ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN
  146 const: . INTEGER
  147      | . BOOL

    error      сдвиг, и переход в состояние 4
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    VAR        сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    $end  вывод с использованием правила 1 (program)

    stmts          переход в состояние 37
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 3

    0 $accept: program $end .

    $default  принять


State 4

    3 func: func error .

    $default  вывод с использованием правила 3 (func)


State 5

  147 const: BOOL .

    $default  вывод с использованием правила 147 (const)


State 6

  146 const: INTEGER .

    $default  вывод с использованием правила 146 (const)


State 7

  106 assignment: VARIABLE . ASSIGN expr
  109           | VARIABLE . DECLARE
  121 expr: VARIABLE .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN   сдвиг, и переход в состояние 59
    DECLARE  сдвиг, и переход в состояние 60

    $default  вывод с использованием правила 121 (expr)


State 8

   82 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   85       | VVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   94 vmdeclaration: VVARIABLE . '(' expr ')' ASSIGN expr
   95              | VVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN vector
  107 assignment: VVARIABLE . ASSIGN vector
  110           | VVARIABLE . DECLARE
  131 expr: VVARIABLE . '(' expr ')'

    ASSIGN   сдвиг, и переход в состояние 61
    DECLARE  сдвиг, и переход в состояние 62
    '('      сдвиг, и переход в состояние 63

    $default  вывод с использованием правила 85 (vector)


State 9

   65 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   66       | MVARIABLE . '(' '[' ']' ',' vector ')'
   67       | MVARIABLE . '(' matrix ')'
   68       | MVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   83 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   84       | MVARIABLE . '(' '[' ']' ',' expr ')'
   96 vmdeclaration: MVARIABLE . '(' expr ',' expr ')' ASSIGN expr
   97              | MVARIABLE . '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | MVARIABLE . '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | MVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | MVARIABLE . '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | MVARIABLE . '(' matrix ')' ASSIGN matrix
  108 assignment: MVARIABLE . ASSIGN matrix
  111           | MVARIABLE . DECLARE
  132 expr: MVARIABLE . '(' expr ',' expr ')'

    ASSIGN   сдвиг, и переход в состояние 64
    DECLARE  сдвиг, и переход в состояние 65
    '('      сдвиг, и переход в состояние 66

    $default  вывод с использованием правила 68 (matrix)


State 10

   77 matrix: VAR .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   90 vector: VAR .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  133 expr: VAR .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']']

    error        вывод с использованием правила 77 (matrix)
    error        [вывод с использованием правила 90 (vector)]
    error        [вывод с использованием правила 133 (expr)]
    NEWLINE      вывод с использованием правила 77 (matrix)
    NEWLINE      [вывод с использованием правила 90 (vector)]
    NEWLINE      [вывод с использованием правила 133 (expr)]
    CONJUNCTION  вывод с использованием правила 133 (expr)
    ELEMMULT     вывод с использованием правила 77 (matrix)
    ELEMMULT     [вывод с использованием правила 90 (vector)]
    ELEMMULT     [вывод с использованием правила 133 (expr)]
    '\''         вывод с использованием правила 77 (matrix)
    '\''         [вывод с использованием правила 90 (vector)]
    '\''         [вывод с использованием правила 133 (expr)]
    LEFTSHIFT    вывод с использованием правила 77 (matrix)
    LEFTSHIFT    [вывод с использованием правила 90 (vector)]
    LEFTSHIFT    [вывод с использованием правила 133 (expr)]
    RIGHTSHIFT   вывод с использованием правила 77 (matrix)
    RIGHTSHIFT   [вывод с использованием правила 90 (vector)]
    RIGHTSHIFT   [вывод с использованием правила 133 (expr)]
    ','          вывод с использованием правила 77 (matrix)
    ','          [вывод с использованием правила 90 (vector)]
    ','          [вывод с использованием правила 133 (expr)]
    DOUBLEDOT    вывод с использованием правила 77 (matrix)
    DOUBLEDOT    [вывод с использованием правила 90 (vector)]
    DOUBLEDOT    [вывод с использованием правила 133 (expr)]
    '<'          вывод с использованием правила 133 (expr)
    '>'          вывод с использованием правила 133 (expr)
    '+'          вывод с использованием правила 133 (expr)
    '-'          вывод с использованием правила 133 (expr)
    '*'          вывод с использованием правила 77 (matrix)
    '*'          [вывод с использованием правила 90 (vector)]
    '*'          [вывод с использованием правила 133 (expr)]
    '/'          вывод с использованием правила 133 (expr)
    ')'          вывод с использованием правила 77 (matrix)
    ')'          [вывод с использованием правила 90 (vector)]
    ')'          [вывод с использованием правила 133 (expr)]
    ']'          вывод с использованием правила 77 (matrix)
    ']'          [вывод с использованием правила 90 (vector)]
    ']'          [вывод с использованием правила 133 (expr)]
    $default     вывод с использованием правила 77 (matrix)


State 11

  135 type: CINT .

    $default  вывод с использованием правила 135 (type)


State 12

  136 type: VINT .

    $default  вывод с использованием правила 136 (type)


State 13

  137 type: MINT .

    $default  вывод с использованием правила 137 (type)


State 14

  134 type: INT .

    $default  вывод с использованием правила 134 (type)


State 15

  138 type: CVINT .

    $default  вывод с использованием правила 138 (type)


State 16

  139 type: CMINT .

    $default  вывод с использованием правила 139 (type)


State 17

  140 type: BOOLEAN .

    $default  вывод с использованием правила 140 (type)


State 18

  141 type: CBOOLEAN .

    $default  вывод с использованием правила 141 (type)


State 19

  142 type: VBOOLEAN .

    $default  вывод с использованием правила 142 (type)


State 20

  143 type: MBOOLEAN .

    $default  вывод с использованием правила 143 (type)


State 21

  144 type: CVBOOLEAN .

    $default  вывод с использованием правила 144 (type)


State 22

  145 type: CMBOOLEAN .

    $default  вывод с использованием правила 145 (type)


State 23

    8 stmt: NEWLINE .

    $default  вывод с использованием правила 8 (stmt)


State 24

  112 print: PRINT . '(' expr ')'
  113      | PRINT . '(' VVARIABLE ')'
  114      | PRINT . '(' MVARIABLE ')'
  115      | PRINT . '(' VAR ')'
  116      | PRINT . '(' FVARIABLE ')'

    '('  сдвиг, и переход в состояние 67


State 25

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   29 iff: IF . expr NEWLINE begif stmts endif
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 73
    const      переход в состояние 58


State 26

   38 forr: FORR . declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105            | . type VAR ASSIGN
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    declaration  переход в состояние 74
    type         переход в состояние 57


State 27

   24 robotmove: MOVE . '(' expr ')'

    '('  сдвиг, и переход в состояние 75


State 28

   25 robotright: RIGHT .

    $default  вывод с использованием правила 25 (robotright)


State 29

   26 robotleft: LEFT .

    $default  вывод с использованием правила 26 (robotleft)


State 30

   28 robotexit: ROBEX .

    $default  вывод с использованием правила 28 (robotexit)


State 31

   27 robotwall: WALL .

    $default  вывод с использованием правила 27 (robotwall)


State 32

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  122     | '-' . expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 76
    const      переход в состояние 58


State 33

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  128     | '!' . expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 77
    const      переход в состояние 58


State 34

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8 stmt: . NEWLINE
    9     | . expr NEWLINE
   10     | . vector NEWLINE
   11     | . matrix NEWLINE
   12     | . print NEWLINE
   13     | . vmdeclaration NEWLINE
   14     | . declaration NEWLINE
   15     | . assignment NEWLINE
   16     | . iff NEWLINE
   17     | . forr NEWLINE
   18     | . function NEWLINE
   19     | . callfunction NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   21     | '(' . stmts ')'
   22 robotactions: . robotright
   23             | . robotleft
   24 robotmove: . MOVE '(' expr ')'
   25 robotright: . RIGHT
   26 robotleft: . LEFT
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   29 iff: . IF expr NEWLINE begif stmts endif
   38 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   39 return_func: . type VAR
   40            | . return_func ',' type VAR
   41            | . return_func error
   52 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   53 function: . function_head B NEWLINE stmts E
   63 callfunction: . '(' return_func ')' DECLARE FVARIABLE '[' callfunc_args ']'
   63             | '(' . return_func ')' DECLARE FVARIABLE '[' callfunc_args ']'
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105            | . type VAR ASSIGN
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109           | . VARIABLE DECLARE
  110           | . VVARIABLE DECLARE
  111           | . MVARIABLE DECLARE
  112 print: . PRINT '(' expr ')'
  113      | . PRINT '(' VVARIABLE ')'
  114      | . PRINT '(' MVARIABLE ')'
  115      | . PRINT '(' VAR ')'
  116      | . PRINT '(' FVARIABLE ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  130     | '(' . expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    VAR        сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 78
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    return_func    переход в состояние 79
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 80
    type           переход в состояние 81
    const          переход в состояние 58


State 35

   39 return_func: . type VAR
   40            | . return_func ',' type VAR
   41            | . return_func error
   52 function_head: '[' . return_func ']' DECLARE FUNC VAR '(' args_func ')'
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    return_func  переход в состояние 82
    type         переход в состояние 83


State 36

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   64 matrix: '{' . listexprs '}'
   78 listexprs: . vector ',' vector
   79          | . listexprs ',' vector
   80          | . listexprs error
   81 vector: . '{' exprs '}'
   81       | '{' . exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   91 exprs: . expr ',' expr
   92      | . exprs ',' expr
   93      | . exprs error
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 85
    VAR        сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    listexprs  переход в состояние 88
    vector     переход в состояние 89
    exprs      переход в состояние 90
    expr       переход в состояние 91
    const      переход в состояние 58


State 37

    2 func: func stmts .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, VAR, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    6 stmts: stmts . stmt
    7      | stmts . error
    8 stmt: . NEWLINE
    9     | . expr NEWLINE
   10     | . vector NEWLINE
   11     | . matrix NEWLINE
   12     | . print NEWLINE
   13     | . vmdeclaration NEWLINE
   14     | . declaration NEWLINE
   15     | . assignment NEWLINE
   16     | . iff NEWLINE
   17     | . forr NEWLINE
   18     | . function NEWLINE
   19     | . callfunction NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22 robotactions: . robotright
   23             | . robotleft
   24 robotmove: . MOVE '(' expr ')'
   25 robotright: . RIGHT
   26 robotleft: . LEFT
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   29 iff: . IF expr NEWLINE begif stmts endif
   38 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   52 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   53 function: . function_head B NEWLINE stmts E
   63 callfunction: . '(' return_func ')' DECLARE FVARIABLE '[' callfunc_args ']'
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105            | . type VAR ASSIGN
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109           | . VARIABLE DECLARE
  110           | . VVARIABLE DECLARE
  111           | . MVARIABLE DECLARE
  112 print: . PRINT '(' expr ')'
  113      | . PRINT '(' VVARIABLE ')'
  114      | . PRINT '(' MVARIABLE ')'
  115      | . PRINT '(' VAR ')'
  116      | . PRINT '(' FVARIABLE ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN
  146 const: . INTEGER
  147      | . BOOL

    error      сдвиг, и переход в состояние 92
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    VAR        сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    $end       вывод с использованием правила 2 (func)
    error      [вывод с использованием правила 2 (func)]
    BOOL       [вывод с использованием правила 2 (func)]
    INTEGER    [вывод с использованием правила 2 (func)]
    VARIABLE   [вывод с использованием правила 2 (func)]
    VVARIABLE  [вывод с использованием правила 2 (func)]
    MVARIABLE  [вывод с использованием правила 2 (func)]
    VAR        [вывод с использованием правила 2 (func)]
    CINT       [вывод с использованием правила 2 (func)]
    VINT       [вывод с использованием правила 2 (func)]
    MINT       [вывод с использованием правила 2 (func)]
    INT        [вывод с использованием правила 2 (func)]
    CVINT      [вывод с использованием правила 2 (func)]
    CMINT      [вывод с использованием правила 2 (func)]
    BOOLEAN    [вывод с использованием правила 2 (func)]
    CBOOLEAN   [вывод с использованием правила 2 (func)]
    VBOOLEAN   [вывод с использованием правила 2 (func)]
    MBOOLEAN   [вывод с использованием правила 2 (func)]
    CVBOOLEAN  [вывод с использованием правила 2 (func)]
    CMBOOLEAN  [вывод с использованием правила 2 (func)]
    NEWLINE    [вывод с использованием правила 2 (func)]
    PRINT      [вывод с использованием правила 2 (func)]
    IF         [вывод с использованием правила 2 (func)]
    FORR       [вывод с использованием правила 2 (func)]
    MOVE       [вывод с использованием правила 2 (func)]
    RIGHT      [вывод с использованием правила 2 (func)]
    LEFT       [вывод с использованием правила 2 (func)]
    ROBEX      [вывод с использованием правила 2 (func)]
    WALL       [вывод с использованием правила 2 (func)]
    '-'        [вывод с использованием правила 2 (func)]
    '!'        [вывод с использованием правила 2 (func)]
    '('        [вывод с использованием правила 2 (func)]
    '['        [вывод с использованием правила 2 (func)]
    '{'        [вывод с использованием правила 2 (func)]

    stmt           переход в состояние 93
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 38

    5 stmts: stmt .

    $default  вывод с использованием правила 5 (stmts)


State 39

   20 stmt: robotactions . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 94


State 40

  119 expr: robotmove .

    $default  вывод с использованием правила 119 (expr)


State 41

   22 robotactions: robotright .

    $default  вывод с использованием правила 22 (robotactions)


State 42

   23 robotactions: robotleft .

    $default  вывод с использованием правила 23 (robotactions)


State 43

  120 expr: robotwall .

    $default  вывод с использованием правила 120 (expr)


State 44

  118 expr: robotexit .

    $default  вывод с использованием правила 118 (expr)


State 45

   16 stmt: iff . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 95


State 46

   17 stmt: forr . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 96


State 47

   53 function: function_head . B NEWLINE stmts E

    B  сдвиг, и переход в состояние 97


State 48

   18 stmt: function . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 98


State 49

   19 stmt: callfunction . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 99


State 50

   11 stmt: matrix . NEWLINE
   69 matrix: matrix . '*' matrix
   70       | matrix . ELEMMULT matrix
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 100
    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104
    '*'         сдвиг, и переход в состояние 105


State 51

   10 stmt: vector . NEWLINE
   74 matrix: vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 106
    ELEMMULT    сдвиг, и переход в состояние 107
    '\''        сдвиг, и переход в состояние 108
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110


State 52

   13 stmt: vmdeclaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 111


State 53

   14 stmt: declaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 112


State 54

   15 stmt: assignment . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 113


State 55

   12 stmt: print . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 114


State 56

    9 stmt: expr . NEWLINE
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 115
    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121


State 57

  102 declaration: type . VAR DECLARE expr
  103            | type . VAR DECLARE vector
  104            | type . VAR DECLARE matrix
  105            | type . VAR ASSIGN

    VAR  сдвиг, и переход в состояние 122


State 58

  117 expr: const .

    $default  вывод с использованием правила 117 (expr)


State 59

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  106 assignment: VARIABLE ASSIGN . expr
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 123
    const      переход в состояние 58


State 60

  109 assignment: VARIABLE DECLARE .

    $default  вывод с использованием правила 109 (assignment)


State 61

   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  107 assignment: VVARIABLE ASSIGN . vector

    VVARIABLE  сдвиг, и переход в состояние 124
    MVARIABLE  сдвиг, и переход в состояние 125
    VAR        сдвиг, и переход в состояние 126
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 127


State 62

  110 assignment: VVARIABLE DECLARE .

    $default  вывод с использованием правила 110 (assignment)


State 63

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | VVARIABLE '(' . vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   94 vmdeclaration: VVARIABLE '(' . expr ')' ASSIGN expr
   95              | VVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN vector
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  131     | VVARIABLE '(' . expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 85
    VAR        сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 128
    expr       переход в состояние 129
    const      переход в состояние 58


State 64

   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  108 assignment: MVARIABLE ASSIGN . matrix

    VVARIABLE  сдвиг, и переход в состояние 124
    MVARIABLE  сдвиг, и переход в состояние 130
    VAR        сдвиг, и переход в состояние 131
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 132
    vector  переход в состояние 133


State 65

  111 assignment: MVARIABLE DECLARE .

    $default  вывод с использованием правила 111 (assignment)


State 66

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   65       | MVARIABLE '(' . vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   66       | MVARIABLE '(' . '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   67       | MVARIABLE '(' . matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | MVARIABLE '(' . expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | MVARIABLE '(' . '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   96 vmdeclaration: MVARIABLE '(' . expr ',' expr ')' ASSIGN expr
   97              | MVARIABLE '(' . expr ',' '[' ']' ')' ASSIGN vector
   98              | MVARIABLE '(' . '[' ']' ',' expr ')' ASSIGN vector
   99              | MVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN matrix
  100              | MVARIABLE '(' . '[' ']' ',' vector ')' ASSIGN matrix
  101              | MVARIABLE '(' . matrix ')' ASSIGN matrix
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  132     | MVARIABLE '(' . expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 134
    VAR        сдвиг, и переход в состояние 10
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '['        сдвиг, и переход в состояние 135
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 136
    vector     переход в состояние 137
    expr       переход в состояние 138
    const      переход в состояние 58


State 67

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  112 print: PRINT '(' . expr ')'
  113      | PRINT '(' . VVARIABLE ')'
  114      | PRINT '(' . MVARIABLE ')'
  115      | PRINT '(' . VAR ')'
  116      | PRINT '(' . FVARIABLE ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 139
    MVARIABLE  сдвиг, и переход в состояние 140
    VAR        сдвиг, и переход в состояние 141
    FVARIABLE  сдвиг, и переход в состояние 142
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 143
    const      переход в состояние 58


State 68

  121 expr: VARIABLE .

    $default  вывод с использованием правила 121 (expr)


State 69

  131 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 144


State 70

  132 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 145


State 71

  133 expr: VAR .

    $default  вывод с использованием правила 133 (expr)


State 72

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  130     | '(' . expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 146
    const      переход в состояние 58


State 73

   29 iff: IF expr . NEWLINE begif stmts endif
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 147
    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121


State 74

   38 forr: FORR declaration . DOUBLEDOT expr NEWLINE begfor stmts endfor

    DOUBLEDOT  сдвиг, и переход в состояние 148


State 75

   24 robotmove: . MOVE '(' expr ')'
   24          | MOVE '(' . expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 149
    const      переход в состояние 58


State 76

  122 expr: '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  123     | expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116

    CONJUNCTION  [вывод с использованием правила 122 (expr)]
    $default     вывод с использованием правила 122 (expr)

    Конфликт между правилом 122 и лексемой '<' разрешен выводом ('<' < UMINUS).
    Конфликт между правилом 122 и лексемой '>' разрешен выводом ('>' < UMINUS).
    Конфликт между правилом 122 и лексемой '+' разрешен выводом ('+' < UMINUS).
    Конфликт между правилом 122 и лексемой '-' разрешен выводом ('-' < UMINUS).
    Конфликт между правилом 122 и лексемой '/' разрешен выводом ('/' < UMINUS).


State 77

  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  128     | '!' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116

    CONJUNCTION  [вывод с использованием правила 128 (expr)]
    $default     вывод с использованием правила 128 (expr)

    Конфликт между правилом 128 и лексемой '<' разрешен выводом ('<' < '!').
    Конфликт между правилом 128 и лексемой '>' разрешен выводом ('>' < '!').
    Конфликт между правилом 128 и лексемой '+' разрешен выводом ('+' < '!').
    Конфликт между правилом 128 и лексемой '-' разрешен выводом ('-' < '!').
    Конфликт между правилом 128 и лексемой '/' разрешен выводом ('/' < '!').


State 78

    6 stmts: stmts . stmt
    7      | stmts . error
    8 stmt: . NEWLINE
    9     | . expr NEWLINE
   10     | . vector NEWLINE
   11     | . matrix NEWLINE
   12     | . print NEWLINE
   13     | . vmdeclaration NEWLINE
   14     | . declaration NEWLINE
   15     | . assignment NEWLINE
   16     | . iff NEWLINE
   17     | . forr NEWLINE
   18     | . function NEWLINE
   19     | . callfunction NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   21     | '(' stmts . ')'
   22 robotactions: . robotright
   23             | . robotleft
   24 robotmove: . MOVE '(' expr ')'
   25 robotright: . RIGHT
   26 robotleft: . LEFT
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   29 iff: . IF expr NEWLINE begif stmts endif
   38 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   52 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   53 function: . function_head B NEWLINE stmts E
   63 callfunction: . '(' return_func ')' DECLARE FVARIABLE '[' callfunc_args ']'
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105            | . type VAR ASSIGN
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109           | . VARIABLE DECLARE
  110           | . VVARIABLE DECLARE
  111           | . MVARIABLE DECLARE
  112 print: . PRINT '(' expr ')'
  113      | . PRINT '(' VVARIABLE ')'
  114      | . PRINT '(' MVARIABLE ')'
  115      | . PRINT '(' VAR ')'
  116      | . PRINT '(' FVARIABLE ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN
  146 const: . INTEGER
  147      | . BOOL

    error      сдвиг, и переход в состояние 92
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    VAR        сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    ')'        сдвиг, и переход в состояние 150
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 93
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 79

   40 return_func: return_func . ',' type VAR
   41            | return_func . error
   63 callfunction: '(' return_func . ')' DECLARE FVARIABLE '[' callfunc_args ']'

    error  сдвиг, и переход в состояние 151
    ','    сдвиг, и переход в состояние 152
    ')'    сдвиг, и переход в состояние 153


State 80

    9 stmt: expr . NEWLINE
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr
  130     | '(' expr . ')'

    NEWLINE      сдвиг, и переход в состояние 115
    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121
    ')'          сдвиг, и переход в состояние 154


State 81

   39 return_func: type . VAR
  102 declaration: type . VAR DECLARE expr
  103            | type . VAR DECLARE vector
  104            | type . VAR DECLARE matrix
  105            | type . VAR ASSIGN

    VAR  сдвиг, и переход в состояние 155


State 82

   40 return_func: return_func . ',' type VAR
   41            | return_func . error
   52 function_head: '[' return_func . ']' DECLARE FUNC VAR '(' args_func ')'

    error  сдвиг, и переход в состояние 151
    ','    сдвиг, и переход в состояние 152
    ']'    сдвиг, и переход в состояние 156


State 83

   39 return_func: type . VAR

    VAR  сдвиг, и переход в состояние 157


State 84

   82 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   85       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  131 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 158

    $default  вывод с использованием правила 85 (vector)


State 85

   83 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   84       | MVARIABLE . '(' '[' ']' ',' expr ')'
  132 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 159


State 86

   90 vector: VAR .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  133 expr: VAR .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    error        вывод с использованием правила 90 (vector)
    error        [вывод с использованием правила 133 (expr)]
    NEWLINE      вывод с использованием правила 90 (vector)
    NEWLINE      [вывод с использованием правила 133 (expr)]
    CONJUNCTION  вывод с использованием правила 133 (expr)
    ELEMMULT     вывод с использованием правила 90 (vector)
    ELEMMULT     [вывод с использованием правила 133 (expr)]
    '\''         вывод с использованием правила 90 (vector)
    '\''         [вывод с использованием правила 133 (expr)]
    LEFTSHIFT    вывод с использованием правила 90 (vector)
    LEFTSHIFT    [вывод с использованием правила 133 (expr)]
    RIGHTSHIFT   вывод с использованием правила 90 (vector)
    RIGHTSHIFT   [вывод с использованием правила 133 (expr)]
    ','          вывод с использованием правила 90 (vector)
    ','          [вывод с использованием правила 133 (expr)]
    DOUBLEDOT    вывод с использованием правила 90 (vector)
    DOUBLEDOT    [вывод с использованием правила 133 (expr)]
    '<'          вывод с использованием правила 133 (expr)
    '>'          вывод с использованием правила 133 (expr)
    '+'          вывод с использованием правила 133 (expr)
    '-'          вывод с использованием правила 133 (expr)
    '*'          вывод с использованием правила 90 (vector)
    '*'          [вывод с использованием правила 133 (expr)]
    '/'          вывод с использованием правила 133 (expr)
    ')'          вывод с использованием правила 90 (vector)
    ')'          [вывод с использованием правила 133 (expr)]
    ']'          вывод с использованием правила 90 (vector)
    ']'          [вывод с использованием правила 133 (expr)]
    '}'          вывод с использованием правила 90 (vector)
    '}'          [вывод с использованием правила 133 (expr)]
    $default     вывод с использованием правила 90 (vector)


State 87

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   81 vector: '{' . exprs '}'
   91 exprs: . expr ',' expr
   92      | . exprs ',' expr
   93      | . exprs error
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    exprs      переход в состояние 90
    expr       переход в состояние 91
    const      переход в состояние 58


State 88

   64 matrix: '{' listexprs . '}'
   79 listexprs: listexprs . ',' vector
   80          | listexprs . error

    error  сдвиг, и переход в состояние 160
    ','    сдвиг, и переход в состояние 161
    '}'    сдвиг, и переход в состояние 162


State 89

   78 listexprs: vector . ',' vector
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110
    ','         сдвиг, и переход в состояние 163


State 90

   81 vector: '{' exprs . '}'
   92 exprs: exprs . ',' expr
   93      | exprs . error

    error  сдвиг, и переход в состояние 164
    ','    сдвиг, и переход в состояние 165
    '}'    сдвиг, и переход в состояние 166


State 91

   91 exprs: expr . ',' expr
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    ','          сдвиг, и переход в состояние 167
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121


State 92

    7 stmts: stmts error .

    $default  вывод с использованием правила 7 (stmts)


State 93

    6 stmts: stmts stmt .

    $default  вывод с использованием правила 6 (stmts)


State 94

   20 stmt: robotactions NEWLINE .

    $default  вывод с использованием правила 20 (stmt)


State 95

   16 stmt: iff NEWLINE .

    $default  вывод с использованием правила 16 (stmt)


State 96

   17 stmt: forr NEWLINE .

    $default  вывод с использованием правила 17 (stmt)


State 97

   53 function: function_head B . NEWLINE stmts E

    NEWLINE  сдвиг, и переход в состояние 168


State 98

   18 stmt: function NEWLINE .

    $default  вывод с использованием правила 18 (stmt)


State 99

   19 stmt: callfunction NEWLINE .

    $default  вывод с использованием правила 19 (stmt)


State 100

   11 stmt: matrix NEWLINE .

    $default  вывод с использованием правила 11 (stmt)


State 101

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   70       | matrix ELEMMULT . matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   75       | matrix ELEMMULT . vector
   76       | . matrix ELEMMULT expr
   76       | matrix ELEMMULT . expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 134
    VAR        сдвиг, и переход в состояние 10
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 169
    vector     переход в состояние 170
    expr       переход в состояние 171
    const      переход в состояние 58


State 102

   71 matrix: matrix '\'' .

    $default  вывод с использованием правила 71 (matrix)


State 103

   73 matrix: matrix LEFTSHIFT .

    $default  вывод с использованием правила 73 (matrix)


State 104

   72 matrix: matrix RIGHTSHIFT .

    $default  вывод с использованием правила 72 (matrix)


State 105

   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   69       | matrix '*' . matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR

    VVARIABLE  сдвиг, и переход в состояние 124
    MVARIABLE  сдвиг, и переход в состояние 130
    VAR        сдвиг, и переход в состояние 131
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 172
    vector  переход в состояние 133


State 106

   10 stmt: vector NEWLINE .

    $default  вывод с использованием правила 10 (stmt)


State 107

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   86       | vector ELEMMULT . vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   89       | vector ELEMMULT . expr
   90       | . VAR
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 85
    VAR        сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 173
    expr       переход в состояние 174
    const      переход в состояние 58


State 108

   74 matrix: vector '\'' .

    $default  вывод с использованием правила 74 (matrix)


State 109

   88 vector: vector LEFTSHIFT .

    $default  вывод с использованием правила 88 (vector)


State 110

   87 vector: vector RIGHTSHIFT .

    $default  вывод с использованием правила 87 (vector)


State 111

   13 stmt: vmdeclaration NEWLINE .

    $default  вывод с использованием правила 13 (stmt)


State 112

   14 stmt: declaration NEWLINE .

    $default  вывод с использованием правила 14 (stmt)


State 113

   15 stmt: assignment NEWLINE .

    $default  вывод с использованием правила 15 (stmt)


State 114

   12 stmt: print NEWLINE .

    $default  вывод с использованием правила 12 (stmt)


State 115

    9 stmt: expr NEWLINE .

    $default  вывод с использованием правила 9 (stmt)


State 116

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  129     | expr CONJUNCTION . expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 175
    const      переход в состояние 58


State 117

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  126     | expr '<' . expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 176
    const      переход в состояние 58


State 118

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  127     | expr '>' . expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 177
    const      переход в состояние 58


State 119

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  123     | expr '+' . expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 178
    const      переход в состояние 58


State 120

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  124     | expr '-' . expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 179
    const      переход в состояние 58


State 121

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  125     | expr '/' . expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 180
    const      переход в состояние 58


State 122

  102 declaration: type VAR . DECLARE expr
  103            | type VAR . DECLARE vector
  104            | type VAR . DECLARE matrix
  105            | type VAR . ASSIGN

    ASSIGN   сдвиг, и переход в состояние 181
    DECLARE  сдвиг, и переход в состояние 182


State 123

  106 assignment: VARIABLE ASSIGN expr .  [NEWLINE]
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 106 (assignment)


State 124

   82 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   85       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '}']

    '('  сдвиг, и переход в состояние 183

    $default  вывод с использованием правила 85 (vector)


State 125

   83 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   84       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 184


State 126

   90 vector: VAR .

    $default  вывод с использованием правила 90 (vector)


State 127

   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
  107 assignment: VVARIABLE ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 107 (assignment)


State 128

   82 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   86       | vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
   95 vmdeclaration: VVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN vector

    ELEMMULT    сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110
    ','         сдвиг, и переход в состояние 185


State 129

   94 vmdeclaration: VVARIABLE '(' expr . ')' ASSIGN expr
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr
  131     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121
    ')'          сдвиг, и переход в состояние 186


State 130

   65 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   66       | MVARIABLE . '(' '[' ']' ',' vector ')'
   67       | MVARIABLE . '(' matrix ')'
   68       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   83 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   84       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 187

    $default  вывод с использованием правила 68 (matrix)


State 131

   77 matrix: VAR .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   90 vector: VAR .  [ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]

    ELEMMULT    вывод с использованием правила 77 (matrix)
    ELEMMULT    [вывод с использованием правила 90 (vector)]
    '\''        вывод с использованием правила 77 (matrix)
    '\''        [вывод с использованием правила 90 (vector)]
    LEFTSHIFT   вывод с использованием правила 77 (matrix)
    LEFTSHIFT   [вывод с использованием правила 90 (vector)]
    RIGHTSHIFT  вывод с использованием правила 77 (matrix)
    RIGHTSHIFT  [вывод с использованием правила 90 (vector)]
    $default    вывод с использованием правила 77 (matrix)


State 132

   69 matrix: matrix . '*' matrix
   70       | matrix . ELEMMULT matrix
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr
  108 assignment: MVARIABLE ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104
    '*'         сдвиг, и переход в состояние 105

    $default  вывод с использованием правила 108 (assignment)


State 133

   74 matrix: vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 107
    '\''        сдвиг, и переход в состояние 108
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110


State 134

   65 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   66       | MVARIABLE . '(' '[' ']' ',' vector ')'
   67       | MVARIABLE . '(' matrix ')'
   68       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   83 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   84       | MVARIABLE . '(' '[' ']' ',' expr ')'
  132 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 188

    $default  вывод с использованием правила 68 (matrix)


State 135

   66 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   84 vector: MVARIABLE '(' '[' . ']' ',' expr ')'
   98 vmdeclaration: MVARIABLE '(' '[' . ']' ',' expr ')' ASSIGN vector
  100              | MVARIABLE '(' '[' . ']' ',' vector ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 189


State 136

   67 matrix: MVARIABLE '(' matrix . ')'
   69       | matrix . '*' matrix
   70       | matrix . ELEMMULT matrix
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr
  101 vmdeclaration: MVARIABLE '(' matrix . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104
    '*'         сдвиг, и переход в состояние 105
    ')'         сдвиг, и переход в состояние 190


State 137

   65 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   74       | vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
   99 vmdeclaration: MVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 107
    '\''        сдвиг, и переход в состояние 108
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110
    ','         сдвиг, и переход в состояние 191


State 138

   83 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
   96 vmdeclaration: MVARIABLE '(' expr . ',' expr ')' ASSIGN expr
   97              | MVARIABLE '(' expr . ',' '[' ']' ')' ASSIGN vector
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr
  132     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 116
    ','          сдвиг, и переход в состояние 192
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121


State 139

  113 print: PRINT '(' VVARIABLE . ')'
  131 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 144
    ')'  сдвиг, и переход в состояние 193


State 140

  114 print: PRINT '(' MVARIABLE . ')'
  132 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 145
    ')'  сдвиг, и переход в состояние 194


State 141

  115 print: PRINT '(' VAR . ')'
  133 expr: VAR .  [CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ')'  сдвиг, и переход в состояние 195

    ')'       [вывод с использованием правила 133 (expr)]
    $default  вывод с использованием правила 133 (expr)


State 142

  116 print: PRINT '(' FVARIABLE . ')'

    ')'  сдвиг, и переход в состояние 196


State 143

  112 print: PRINT '(' expr . ')'
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121
    ')'          сдвиг, и переход в состояние 197


State 144

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  131     | VVARIABLE '(' . expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 198
    const      переход в состояние 58


State 145

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  132     | MVARIABLE '(' . expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 199
    const      переход в состояние 58


State 146

  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr
  130     | '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121
    ')'          сдвиг, и переход в состояние 154


State 147

   29 iff: IF expr NEWLINE . begif stmts endif
   30 begif: . B
   31      | . BEGIF

    B      сдвиг, и переход в состояние 200
    BEGIF  сдвиг, и переход в состояние 201

    begif  переход в состояние 202


State 148

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   38 forr: FORR declaration DOUBLEDOT . expr NEWLINE begfor stmts endfor
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 203
    const      переход в состояние 58


State 149

   24 robotmove: MOVE '(' expr . ')'
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121
    ')'          сдвиг, и переход в состояние 204


State 150

   21 stmt: '(' stmts ')' .

    $default  вывод с использованием правила 21 (stmt)


State 151

   41 return_func: return_func error .

    $default  вывод с использованием правила 41 (return_func)


State 152

   40 return_func: return_func ',' . type VAR
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 205


State 153

   63 callfunction: '(' return_func ')' . DECLARE FVARIABLE '[' callfunc_args ']'

    DECLARE  сдвиг, и переход в состояние 206


State 154

  130 expr: '(' expr ')' .

    $default  вывод с использованием правила 130 (expr)


State 155

   39 return_func: type VAR .  [error, ',', ')']
  102 declaration: type VAR . DECLARE expr
  103            | type VAR . DECLARE vector
  104            | type VAR . DECLARE matrix
  105            | type VAR . ASSIGN

    ASSIGN   сдвиг, и переход в состояние 181
    DECLARE  сдвиг, и переход в состояние 182

    $default  вывод с использованием правила 39 (return_func)


State 156

   52 function_head: '[' return_func ']' . DECLARE FUNC VAR '(' args_func ')'

    DECLARE  сдвиг, и переход в состояние 207


State 157

   39 return_func: type VAR .

    $default  вывод с использованием правила 39 (return_func)


State 158

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | VVARIABLE '(' . vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  131     | VVARIABLE '(' . expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 85
    VAR        сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 208
    expr       переход в состояние 198
    const      переход в состояние 58


State 159

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   83 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   84       | MVARIABLE '(' . '[' ']' ',' expr ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  132     | MVARIABLE '(' . expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '['        сдвиг, и переход в состояние 209

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 210
    const      переход в состояние 58


State 160

   80 listexprs: listexprs error .

    $default  вывод с использованием правила 80 (listexprs)


State 161

   79 listexprs: listexprs ',' . vector
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR

    VVARIABLE  сдвиг, и переход в состояние 124
    MVARIABLE  сдвиг, и переход в состояние 125
    VAR        сдвиг, и переход в состояние 126
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 211


State 162

   64 matrix: '{' listexprs '}' .

    $default  вывод с использованием правила 64 (matrix)


State 163

   78 listexprs: vector ',' . vector
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR

    VVARIABLE  сдвиг, и переход в состояние 124
    MVARIABLE  сдвиг, и переход в состояние 125
    VAR        сдвиг, и переход в состояние 126
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 212


State 164

   93 exprs: exprs error .

    $default  вывод с использованием правила 93 (exprs)


State 165

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   92 exprs: exprs ',' . expr
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 213
    const      переход в состояние 58


State 166

   81 vector: '{' exprs '}' .

    $default  вывод с использованием правила 81 (vector)


State 167

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   91 exprs: expr ',' . expr
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 214
    const      переход в состояние 58


State 168

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8 stmt: . NEWLINE
    9     | . expr NEWLINE
   10     | . vector NEWLINE
   11     | . matrix NEWLINE
   12     | . print NEWLINE
   13     | . vmdeclaration NEWLINE
   14     | . declaration NEWLINE
   15     | . assignment NEWLINE
   16     | . iff NEWLINE
   17     | . forr NEWLINE
   18     | . function NEWLINE
   19     | . callfunction NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22 robotactions: . robotright
   23             | . robotleft
   24 robotmove: . MOVE '(' expr ')'
   25 robotright: . RIGHT
   26 robotleft: . LEFT
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   29 iff: . IF expr NEWLINE begif stmts endif
   38 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   52 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   53 function: . function_head B NEWLINE stmts E
   53         | function_head B NEWLINE . stmts E
   63 callfunction: . '(' return_func ')' DECLARE FVARIABLE '[' callfunc_args ']'
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105            | . type VAR ASSIGN
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109           | . VARIABLE DECLARE
  110           | . VVARIABLE DECLARE
  111           | . MVARIABLE DECLARE
  112 print: . PRINT '(' expr ')'
  113      | . PRINT '(' VVARIABLE ')'
  114      | . PRINT '(' MVARIABLE ')'
  115      | . PRINT '(' VAR ')'
  116      | . PRINT '(' FVARIABLE ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    VAR        сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 215
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 169

   69 matrix: matrix . '*' matrix
   70       | matrix . ELEMMULT matrix
   70       | matrix ELEMMULT matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104
    '*'         сдвиг, и переход в состояние 105

    ELEMMULT    [вывод с использованием правила 70 (matrix)]
    '\''        [вывод с использованием правила 70 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 70 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 70 (matrix)]
    '*'         [вывод с использованием правила 70 (matrix)]
    $default    вывод с использованием правила 70 (matrix)


State 170

   74 matrix: vector . '\''
   75       | matrix ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 107
    '\''        сдвиг, и переход в состояние 108
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110

    ELEMMULT    [вывод с использованием правила 75 (matrix)]
    '\''        [вывод с использованием правила 75 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 75 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 75 (matrix)]
    $default    вывод с использованием правила 75 (matrix)


State 171

   76 matrix: matrix ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 76 (matrix)


State 172

   69 matrix: matrix . '*' matrix
   69       | matrix '*' matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   70       | matrix . ELEMMULT matrix
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104

    ELEMMULT    [вывод с использованием правила 69 (matrix)]
    '\''        [вывод с использованием правила 69 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 69 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 69 (matrix)]
    $default    вывод с использованием правила 69 (matrix)

    Конфликт между правилом 69 и лексемой '*' разрешен выводом (%left '*').


State 173

   86 vector: vector . ELEMMULT vector
   86       | vector ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110

    ELEMMULT    [вывод с использованием правила 86 (vector)]
    LEFTSHIFT   [вывод с использованием правила 86 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 86 (vector)]
    $default    вывод с использованием правила 86 (vector)


State 174

   89 vector: vector ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 89 (vector)


State 175

  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr
  129     | expr CONJUNCTION expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 129 (expr)]
    '<'          [вывод с использованием правила 129 (expr)]
    '>'          [вывод с использованием правила 129 (expr)]
    '+'          [вывод с использованием правила 129 (expr)]
    '-'          [вывод с использованием правила 129 (expr)]
    '/'          [вывод с использованием правила 129 (expr)]
    $default     вывод с использованием правила 129 (expr)


State 176

  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  126     | expr '<' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 126 (expr)]
    $default     вывод с использованием правила 126 (expr)

    Конфликт между правилом 126 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 126 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 126 и лексемой '+' разрешен сдвигом ('<' < '+').
    Конфликт между правилом 126 и лексемой '-' разрешен сдвигом ('<' < '-').
    Конфликт между правилом 126 и лексемой '/' разрешен сдвигом ('<' < '/').


State 177

  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  127     | expr '>' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 127 (expr)]
    $default     вывод с использованием правила 127 (expr)

    Конфликт между правилом 127 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 127 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 127 и лексемой '+' разрешен сдвигом ('>' < '+').
    Конфликт между правилом 127 и лексемой '-' разрешен сдвигом ('>' < '-').
    Конфликт между правилом 127 и лексемой '/' разрешен сдвигом ('>' < '/').


State 178

  123 expr: expr . '+' expr
  123     | expr '+' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '/'          сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 123 (expr)]
    $default     вывод с использованием правила 123 (expr)

    Конфликт между правилом 123 и лексемой '<' разрешен выводом ('<' < '+').
    Конфликт между правилом 123 и лексемой '>' разрешен выводом ('>' < '+').
    Конфликт между правилом 123 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 123 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 123 и лексемой '/' разрешен сдвигом ('+' < '/').


State 179

  123 expr: expr . '+' expr
  124     | expr . '-' expr
  124     | expr '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '/'          сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 124 (expr)]
    $default     вывод с использованием правила 124 (expr)

    Конфликт между правилом 124 и лексемой '<' разрешен выводом ('<' < '-').
    Конфликт между правилом 124 и лексемой '>' разрешен выводом ('>' < '-').
    Конфликт между правилом 124 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 124 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 124 и лексемой '/' разрешен сдвигом ('-' < '/').


State 180

  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  125     | expr '/' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116

    CONJUNCTION  [вывод с использованием правила 125 (expr)]
    $default     вывод с использованием правила 125 (expr)

    Конфликт между правилом 125 и лексемой '<' разрешен выводом ('<' < '/').
    Конфликт между правилом 125 и лексемой '>' разрешен выводом ('>' < '/').
    Конфликт между правилом 125 и лексемой '+' разрешен выводом ('+' < '/').
    Конфликт между правилом 125 и лексемой '-' разрешен выводом ('-' < '/').
    Конфликт между правилом 125 и лексемой '/' разрешен выводом (%left '/').


State 181

  105 declaration: type VAR ASSIGN .

    $default  вывод с использованием правила 105 (declaration)


State 182

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  102 declaration: type VAR DECLARE . expr
  103            | type VAR DECLARE . vector
  104            | type VAR DECLARE . matrix
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 134
    VAR        сдвиг, и переход в состояние 10
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 216
    vector     переход в состояние 217
    expr       переход в состояние 218
    const      переход в состояние 58


State 183

   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | VVARIABLE '(' . vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR

    VVARIABLE  сдвиг, и переход в состояние 124
    MVARIABLE  сдвиг, и переход в состояние 125
    VAR        сдвиг, и переход в состояние 126
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 208


State 184

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   83 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   84       | MVARIABLE '(' . '[' ']' ',' expr ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '['        сдвиг, и переход в состояние 209

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 219
    const      переход в состояние 58


State 185

   82 vector: VVARIABLE '(' vector ',' . '[' ']' ')'
   95 vmdeclaration: VVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN vector

    '['  сдвиг, и переход в состояние 220


State 186

   94 vmdeclaration: VVARIABLE '(' expr ')' . ASSIGN expr
  131 expr: VVARIABLE '(' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 221

    $default  вывод с использованием правила 131 (expr)


State 187

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   65       | MVARIABLE '(' . vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   66       | MVARIABLE '(' . '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   67       | MVARIABLE '(' . matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | MVARIABLE '(' . expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | MVARIABLE '(' . '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 134
    VAR        сдвиг, и переход в состояние 10
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '['        сдвиг, и переход в состояние 222
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 223
    vector     переход в состояние 224
    expr       переход в состояние 219
    const      переход в состояние 58


State 188

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   65       | MVARIABLE '(' . vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   66       | MVARIABLE '(' . '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   67       | MVARIABLE '(' . matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | MVARIABLE '(' . expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | MVARIABLE '(' . '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  132     | MVARIABLE '(' . expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 134
    VAR        сдвиг, и переход в состояние 10
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '['        сдвиг, и переход в состояние 222
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 223
    vector     переход в состояние 224
    expr       переход в состояние 210
    const      переход в состояние 58


State 189

   66 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   84 vector: MVARIABLE '(' '[' ']' . ',' expr ')'
   98 vmdeclaration: MVARIABLE '(' '[' ']' . ',' expr ')' ASSIGN vector
  100              | MVARIABLE '(' '[' ']' . ',' vector ')' ASSIGN matrix

    ','  сдвиг, и переход в состояние 225


State 190

   67 matrix: MVARIABLE '(' matrix ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
  101 vmdeclaration: MVARIABLE '(' matrix ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 226

    $default  вывод с использованием правила 67 (matrix)


State 191

   65 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'
   99 vmdeclaration: MVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN matrix

    '['  сдвиг, и переход в состояние 227


State 192

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   83 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
   96 vmdeclaration: MVARIABLE '(' expr ',' . expr ')' ASSIGN expr
   97              | MVARIABLE '(' expr ',' . '[' ']' ')' ASSIGN vector
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  132     | MVARIABLE '(' expr ',' . expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '['        сдвиг, и переход в состояние 228

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 229
    const      переход в состояние 58


State 193

  113 print: PRINT '(' VVARIABLE ')' .

    $default  вывод с использованием правила 113 (print)


State 194

  114 print: PRINT '(' MVARIABLE ')' .

    $default  вывод с использованием правила 114 (print)


State 195

  115 print: PRINT '(' VAR ')' .

    $default  вывод с использованием правила 115 (print)


State 196

  116 print: PRINT '(' FVARIABLE ')' .

    $default  вывод с использованием правила 116 (print)


State 197

  112 print: PRINT '(' expr ')' .

    $default  вывод с использованием правила 112 (print)


State 198

  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr
  131     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121
    ')'          сдвиг, и переход в состояние 230


State 199

  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr
  132     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 116
    ','          сдвиг, и переход в состояние 231
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121


State 200

   30 begif: B .

    $default  вывод с использованием правила 30 (begif)


State 201

   31 begif: BEGIF .

    $default  вывод с использованием правила 31 (begif)


State 202

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8 stmt: . NEWLINE
    9     | . expr NEWLINE
   10     | . vector NEWLINE
   11     | . matrix NEWLINE
   12     | . print NEWLINE
   13     | . vmdeclaration NEWLINE
   14     | . declaration NEWLINE
   15     | . assignment NEWLINE
   16     | . iff NEWLINE
   17     | . forr NEWLINE
   18     | . function NEWLINE
   19     | . callfunction NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22 robotactions: . robotright
   23             | . robotleft
   24 robotmove: . MOVE '(' expr ')'
   25 robotright: . RIGHT
   26 robotleft: . LEFT
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   29 iff: . IF expr NEWLINE begif stmts endif
   29    | IF expr NEWLINE begif . stmts endif
   38 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   52 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   53 function: . function_head B NEWLINE stmts E
   63 callfunction: . '(' return_func ')' DECLARE FVARIABLE '[' callfunc_args ']'
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105            | . type VAR ASSIGN
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109           | . VARIABLE DECLARE
  110           | . VVARIABLE DECLARE
  111           | . MVARIABLE DECLARE
  112 print: . PRINT '(' expr ')'
  113      | . PRINT '(' VVARIABLE ')'
  114      | . PRINT '(' MVARIABLE ')'
  115      | . PRINT '(' VAR ')'
  116      | . PRINT '(' FVARIABLE ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    VAR        сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 232
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 203

   38 forr: FORR declaration DOUBLEDOT expr . NEWLINE begfor stmts endfor
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 233
    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121


State 204

   24 robotmove: MOVE '(' expr ')' .

    $default  вывод с использованием правила 24 (robotmove)


State 205

   40 return_func: return_func ',' type . VAR

    VAR  сдвиг, и переход в состояние 234


State 206

   63 callfunction: '(' return_func ')' DECLARE . FVARIABLE '[' callfunc_args ']'

    FVARIABLE  сдвиг, и переход в состояние 235


State 207

   52 function_head: '[' return_func ']' DECLARE . FUNC VAR '(' args_func ')'

    FUNC  сдвиг, и переход в состояние 236


State 208

   82 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   86       | vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110
    ','         сдвиг, и переход в состояние 237


State 209

   84 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 238


State 210

   83 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr
  132     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 116
    ','          сдвиг, и переход в состояние 239
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121


State 211

   79 listexprs: listexprs ',' vector .  [error, ',', '}']
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 79 (listexprs)


State 212

   78 listexprs: vector ',' vector .  [error, ',', '}']
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 78 (listexprs)


State 213

   92 exprs: exprs ',' expr .  [error, ',', '}']
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 92 (exprs)


State 214

   91 exprs: expr ',' expr .  [error, ',', '}']
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 91 (exprs)


State 215

    6 stmts: stmts . stmt
    7      | stmts . error
    8 stmt: . NEWLINE
    9     | . expr NEWLINE
   10     | . vector NEWLINE
   11     | . matrix NEWLINE
   12     | . print NEWLINE
   13     | . vmdeclaration NEWLINE
   14     | . declaration NEWLINE
   15     | . assignment NEWLINE
   16     | . iff NEWLINE
   17     | . forr NEWLINE
   18     | . function NEWLINE
   19     | . callfunction NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22 robotactions: . robotright
   23             | . robotleft
   24 robotmove: . MOVE '(' expr ')'
   25 robotright: . RIGHT
   26 robotleft: . LEFT
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   29 iff: . IF expr NEWLINE begif stmts endif
   38 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   52 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   53 function: . function_head B NEWLINE stmts E
   53         | function_head B NEWLINE stmts . E
   63 callfunction: . '(' return_func ')' DECLARE FVARIABLE '[' callfunc_args ']'
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105            | . type VAR ASSIGN
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109           | . VARIABLE DECLARE
  110           | . VVARIABLE DECLARE
  111           | . MVARIABLE DECLARE
  112 print: . PRINT '(' expr ')'
  113      | . PRINT '(' VVARIABLE ')'
  114      | . PRINT '(' MVARIABLE ')'
  115      | . PRINT '(' VAR ')'
  116      | . PRINT '(' FVARIABLE ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN
  146 const: . INTEGER
  147      | . BOOL

    error      сдвиг, и переход в состояние 92
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    VAR        сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    E          сдвиг, и переход в состояние 240
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 93
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 216

   69 matrix: matrix . '*' matrix
   70       | matrix . ELEMMULT matrix
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr
  104 declaration: type VAR DECLARE matrix .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104
    '*'         сдвиг, и переход в состояние 105

    $default  вывод с использованием правила 104 (declaration)


State 217

   74 matrix: vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
  103 declaration: type VAR DECLARE vector .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 107
    '\''        сдвиг, и переход в состояние 108
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 103 (declaration)


State 218

  102 declaration: type VAR DECLARE expr .  [NEWLINE, DOUBLEDOT]
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 102 (declaration)


State 219

   83 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    ','          сдвиг, и переход в состояние 241
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121


State 220

   82 vector: VVARIABLE '(' vector ',' '[' . ']' ')'
   95 vmdeclaration: VVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 242


State 221

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   94 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN . expr
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 243
    const      переход в состояние 58


State 222

   66 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   84 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 244


State 223

   67 matrix: MVARIABLE '(' matrix . ')'
   69       | matrix . '*' matrix
   70       | matrix . ELEMMULT matrix
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104
    '*'         сдвиг, и переход в состояние 105
    ')'         сдвиг, и переход в состояние 245


State 224

   65 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   74       | vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 107
    '\''        сдвиг, и переход в состояние 108
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110
    ','         сдвиг, и переход в состояние 246


State 225

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   66 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | MVARIABLE '(' '[' ']' ',' . expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   98 vmdeclaration: MVARIABLE '(' '[' ']' ',' . expr ')' ASSIGN vector
  100              | MVARIABLE '(' '[' ']' ',' . vector ')' ASSIGN matrix
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 85
    VAR        сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 247
    expr       переход в состояние 248
    const      переход в состояние 58


State 226

   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  101 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN . matrix

    VVARIABLE  сдвиг, и переход в состояние 124
    MVARIABLE  сдвиг, и переход в состояние 130
    VAR        сдвиг, и переход в состояние 131
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 249
    vector  переход в состояние 133


State 227

   65 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'
   99 vmdeclaration: MVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 250


State 228

   83 vector: MVARIABLE '(' expr ',' '[' . ']' ')'
   97 vmdeclaration: MVARIABLE '(' expr ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 251


State 229

   96 vmdeclaration: MVARIABLE '(' expr ',' expr . ')' ASSIGN expr
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr
  132     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121
    ')'          сдвиг, и переход в состояние 252


State 230

  131 expr: VVARIABLE '(' expr ')' .

    $default  вывод с использованием правила 131 (expr)


State 231

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  132     | MVARIABLE '(' expr ',' . expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 253
    const      переход в состояние 58


State 232

    6 stmts: stmts . stmt
    7      | stmts . error
    8 stmt: . NEWLINE
    9     | . expr NEWLINE
   10     | . vector NEWLINE
   11     | . matrix NEWLINE
   12     | . print NEWLINE
   13     | . vmdeclaration NEWLINE
   14     | . declaration NEWLINE
   15     | . assignment NEWLINE
   16     | . iff NEWLINE
   17     | . forr NEWLINE
   18     | . function NEWLINE
   19     | . callfunction NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22 robotactions: . robotright
   23             | . robotleft
   24 robotmove: . MOVE '(' expr ')'
   25 robotright: . RIGHT
   26 robotleft: . LEFT
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   29 iff: . IF expr NEWLINE begif stmts endif
   29    | IF expr NEWLINE begif stmts . endif
   32 endif: . E
   33      | . ENDIF
   38 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   52 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   53 function: . function_head B NEWLINE stmts E
   63 callfunction: . '(' return_func ')' DECLARE FVARIABLE '[' callfunc_args ']'
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105            | . type VAR ASSIGN
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109           | . VARIABLE DECLARE
  110           | . VVARIABLE DECLARE
  111           | . MVARIABLE DECLARE
  112 print: . PRINT '(' expr ')'
  113      | . PRINT '(' VVARIABLE ')'
  114      | . PRINT '(' MVARIABLE ')'
  115      | . PRINT '(' VAR ')'
  116      | . PRINT '(' FVARIABLE ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN
  146 const: . INTEGER
  147      | . BOOL

    error      сдвиг, и переход в состояние 92
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    VAR        сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    E          сдвиг, и переход в состояние 254
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    ENDIF      сдвиг, и переход в состояние 255
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 93
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    endif          переход в состояние 256
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 233

   34 begfor: . B
   35       | . BEGFOR
   38 forr: FORR declaration DOUBLEDOT expr NEWLINE . begfor stmts endfor

    B       сдвиг, и переход в состояние 257
    BEGFOR  сдвиг, и переход в состояние 258

    begfor  переход в состояние 259


State 234

   40 return_func: return_func ',' type VAR .

    $default  вывод с использованием правила 40 (return_func)


State 235

   63 callfunction: '(' return_func ')' DECLARE FVARIABLE . '[' callfunc_args ']'

    '['  сдвиг, и переход в состояние 260


State 236

   52 function_head: '[' return_func ']' DECLARE FUNC . VAR '(' args_func ')'

    VAR  сдвиг, и переход в состояние 261


State 237

   82 vector: VVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 262


State 238

   84 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 263


State 239

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   83 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  132     | MVARIABLE '(' expr ',' . expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '['        сдвиг, и переход в состояние 264

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 253
    const      переход в состояние 58


State 240

   53 function: function_head B NEWLINE stmts E .

    $default  вывод с использованием правила 53 (function)


State 241

   83 vector: MVARIABLE '(' expr ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 264


State 242

   82 vector: VVARIABLE '(' vector ',' '[' ']' . ')'
   95 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 265


State 243

   94 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr .  [NEWLINE]
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 94 (vmdeclaration)


State 244

   66 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   84 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 266


State 245

   67 matrix: MVARIABLE '(' matrix ')' .

    $default  вывод с использованием правила 67 (matrix)


State 246

   65 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 267


State 247

   66 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
  100 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110
    ')'         сдвиг, и переход в состояние 268


State 248

   84 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
   98 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr . ')' ASSIGN vector
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121
    ')'          сдвиг, и переход в состояние 269


State 249

   69 matrix: matrix . '*' matrix
   70       | matrix . ELEMMULT matrix
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr
  101 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104
    '*'         сдвиг, и переход в состояние 105

    $default  вывод с использованием правила 101 (vmdeclaration)


State 250

   65 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'
   99 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN matrix

    ')'  сдвиг, и переход в состояние 270


State 251

   83 vector: MVARIABLE '(' expr ',' '[' ']' . ')'
   97 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 271


State 252

   96 vmdeclaration: MVARIABLE '(' expr ',' expr ')' . ASSIGN expr
  132 expr: MVARIABLE '(' expr ',' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 272

    $default  вывод с использованием правила 132 (expr)


State 253

  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr
  132     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121
    ')'          сдвиг, и переход в состояние 273


State 254

   32 endif: E .

    $default  вывод с использованием правила 32 (endif)


State 255

   33 endif: ENDIF .

    $default  вывод с использованием правила 33 (endif)


State 256

   29 iff: IF expr NEWLINE begif stmts endif .

    $default  вывод с использованием правила 29 (iff)


State 257

   34 begfor: B .

    $default  вывод с использованием правила 34 (begfor)


State 258

   35 begfor: BEGFOR .

    $default  вывод с использованием правила 35 (begfor)


State 259

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8 stmt: . NEWLINE
    9     | . expr NEWLINE
   10     | . vector NEWLINE
   11     | . matrix NEWLINE
   12     | . print NEWLINE
   13     | . vmdeclaration NEWLINE
   14     | . declaration NEWLINE
   15     | . assignment NEWLINE
   16     | . iff NEWLINE
   17     | . forr NEWLINE
   18     | . function NEWLINE
   19     | . callfunction NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22 robotactions: . robotright
   23             | . robotleft
   24 robotmove: . MOVE '(' expr ')'
   25 robotright: . RIGHT
   26 robotleft: . LEFT
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   29 iff: . IF expr NEWLINE begif stmts endif
   38 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   38     | FORR declaration DOUBLEDOT expr NEWLINE begfor . stmts endfor
   52 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   53 function: . function_head B NEWLINE stmts E
   63 callfunction: . '(' return_func ')' DECLARE FVARIABLE '[' callfunc_args ']'
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105            | . type VAR ASSIGN
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109           | . VARIABLE DECLARE
  110           | . VVARIABLE DECLARE
  111           | . MVARIABLE DECLARE
  112 print: . PRINT '(' expr ')'
  113      | . PRINT '(' VVARIABLE ')'
  114      | . PRINT '(' MVARIABLE ')'
  115      | . PRINT '(' VAR ')'
  116      | . PRINT '(' FVARIABLE ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    VAR        сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 274
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 260

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   54 callfunc_args: . expr
   55              | . vector
   56              | . matrix
   57              | . DFLT
   58              | . callfunc_args ',' expr
   59              | . callfunc_args ',' vector
   60              | . callfunc_args ',' matrix
   61              | . callfunc_args ',' DFLT
   62              | . callfunc_args error
   63 callfunction: '(' return_func ')' DECLARE FVARIABLE '[' . callfunc_args ']'
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 134
    VAR        сдвиг, и переход в состояние 10
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    DFLT       сдвиг, и переход в состояние 275
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '{'        сдвиг, и переход в состояние 36

    robotmove      переход в состояние 40
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    callfunc_args  переход в состояние 276
    matrix         переход в состояние 277
    vector         переход в состояние 278
    expr           переход в состояние 279
    const          переход в состояние 58


State 261

   52 function_head: '[' return_func ']' DECLARE FUNC VAR . '(' args_func ')'

    '('  сдвиг, и переход в состояние 280


State 262

   82 vector: VVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 281


State 263

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   84 vector: MVARIABLE '(' '[' ']' ',' . expr ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 282
    const      переход в состояние 58


State 264

   83 vector: MVARIABLE '(' expr ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 283


State 265

   82 vector: VVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   95 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 284

    $default  вывод с использованием правила 82 (vector)


State 266

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   66 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | MVARIABLE '(' '[' ']' ',' . expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 85
    VAR        сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 285
    expr       переход в состояние 282
    const      переход в состояние 58


State 267

   65 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 286


State 268

   66 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
  100 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 287

    $default  вывод с использованием правила 66 (matrix)


State 269

   84 vector: MVARIABLE '(' '[' ']' ',' expr ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   98 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 288

    $default  вывод с использованием правила 84 (vector)


State 270

   65 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   99 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 289

    $default  вывод с использованием правила 65 (matrix)


State 271

   83 vector: MVARIABLE '(' expr ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   97 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 290

    $default  вывод с использованием правила 83 (vector)


State 272

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   96 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN . expr
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 69
    MVARIABLE  сдвиг, и переход в состояние 70
    VAR        сдвиг, и переход в состояние 71
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 291
    const      переход в состояние 58


State 273

  132 expr: MVARIABLE '(' expr ',' expr ')' .

    $default  вывод с использованием правила 132 (expr)


State 274

    6 stmts: stmts . stmt
    7      | stmts . error
    8 stmt: . NEWLINE
    9     | . expr NEWLINE
   10     | . vector NEWLINE
   11     | . matrix NEWLINE
   12     | . print NEWLINE
   13     | . vmdeclaration NEWLINE
   14     | . declaration NEWLINE
   15     | . assignment NEWLINE
   16     | . iff NEWLINE
   17     | . forr NEWLINE
   18     | . function NEWLINE
   19     | . callfunction NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22 robotactions: . robotright
   23             | . robotleft
   24 robotmove: . MOVE '(' expr ')'
   25 robotright: . RIGHT
   26 robotleft: . LEFT
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   29 iff: . IF expr NEWLINE begif stmts endif
   36 endfor: . E
   37       | . ENDFOR
   38 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   38     | FORR declaration DOUBLEDOT expr NEWLINE begfor stmts . endfor
   52 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   53 function: . function_head B NEWLINE stmts E
   63 callfunction: . '(' return_func ')' DECLARE FVARIABLE '[' callfunc_args ']'
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105            | . type VAR ASSIGN
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109           | . VARIABLE DECLARE
  110           | . VVARIABLE DECLARE
  111           | . MVARIABLE DECLARE
  112 print: . PRINT '(' expr ')'
  113      | . PRINT '(' VVARIABLE ')'
  114      | . PRINT '(' MVARIABLE ')'
  115      | . PRINT '(' VAR ')'
  116      | . PRINT '(' FVARIABLE ')'
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN
  146 const: . INTEGER
  147      | . BOOL

    error      сдвиг, и переход в состояние 92
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    VAR        сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    E          сдвиг, и переход в состояние 292
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    ENDFOR     сдвиг, и переход в состояние 293
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 93
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    endfor         переход в состояние 294
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 275

   57 callfunc_args: DFLT .

    $default  вывод с использованием правила 57 (callfunc_args)


State 276

   58 callfunc_args: callfunc_args . ',' expr
   59              | callfunc_args . ',' vector
   60              | callfunc_args . ',' matrix
   61              | callfunc_args . ',' DFLT
   62              | callfunc_args . error
   63 callfunction: '(' return_func ')' DECLARE FVARIABLE '[' callfunc_args . ']'

    error  сдвиг, и переход в состояние 295
    ','    сдвиг, и переход в состояние 296
    ']'    сдвиг, и переход в состояние 297


State 277

   56 callfunc_args: matrix .  [error, ',', ']']
   69 matrix: matrix . '*' matrix
   70       | matrix . ELEMMULT matrix
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104
    '*'         сдвиг, и переход в состояние 105

    $default  вывод с использованием правила 56 (callfunc_args)


State 278

   55 callfunc_args: vector .  [error, ',', ']']
   74 matrix: vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 107
    '\''        сдвиг, и переход в состояние 108
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 55 (callfunc_args)


State 279

   54 callfunc_args: expr .  [error, ',', ']']
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 54 (callfunc_args)


State 280

   42 args_func: . '[' type VAR
   43          | . '[' type VAR DECLARE expr
   44          | . '[' type VAR DECLARE vector
   45          | . '[' type VAR DECLARE matrix
   46          | . args_func ',' type VAR
   47          | . args_func ',' type VAR DECLARE expr
   48          | . args_func ',' type VAR DECLARE vector
   49          | . args_func ',' type VAR DECLARE matrix
   50          | . args_func ']'
   51          | . args_func error
   52 function_head: '[' return_func ']' DECLARE FUNC VAR '(' . args_func ')'

    '['  сдвиг, и переход в состояние 298

    args_func  переход в состояние 299


State 281

   82 vector: VVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 300


State 282

   84 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121
    ')'          сдвиг, и переход в состояние 301


State 283

   83 vector: MVARIABLE '(' expr ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 302


State 284

   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   95 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . vector

    VVARIABLE  сдвиг, и переход в состояние 124
    MVARIABLE  сдвиг, и переход в состояние 125
    VAR        сдвиг, и переход в состояние 126
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 303


State 285

   66 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110
    ')'         сдвиг, и переход в состояние 304


State 286

   65 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 305


State 287

   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  100 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN . matrix

    VVARIABLE  сдвиг, и переход в состояние 124
    MVARIABLE  сдвиг, и переход в состояние 130
    VAR        сдвиг, и переход в состояние 131
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 306
    vector  переход в состояние 133


State 288

   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   98 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN . vector

    VVARIABLE  сдвиг, и переход в состояние 124
    MVARIABLE  сдвиг, и переход в состояние 125
    VAR        сдвиг, и переход в состояние 126
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 307


State 289

   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   99 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . matrix

    VVARIABLE  сдвиг, и переход в состояние 124
    MVARIABLE  сдвиг, и переход в состояние 130
    VAR        сдвиг, и переход в состояние 131
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 308
    vector  переход в состояние 133


State 290

   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
   97 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN . vector

    VVARIABLE  сдвиг, и переход в состояние 124
    MVARIABLE  сдвиг, и переход в состояние 125
    VAR        сдвиг, и переход в состояние 126
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 309


State 291

   96 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN expr .  [NEWLINE]
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 96 (vmdeclaration)


State 292

   36 endfor: E .

    $default  вывод с использованием правила 36 (endfor)


State 293

   37 endfor: ENDFOR .

    $default  вывод с использованием правила 37 (endfor)


State 294

   38 forr: FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor .

    $default  вывод с использованием правила 38 (forr)


State 295

   62 callfunc_args: callfunc_args error .

    $default  вывод с использованием правила 62 (callfunc_args)


State 296

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   58 callfunc_args: callfunc_args ',' . expr
   59              | callfunc_args ',' . vector
   60              | callfunc_args ',' . matrix
   61              | callfunc_args ',' . DFLT
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 134
    VAR        сдвиг, и переход в состояние 10
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    DFLT       сдвиг, и переход в состояние 310
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 311
    vector     переход в состояние 312
    expr       переход в состояние 313
    const      переход в состояние 58


State 297

   63 callfunction: '(' return_func ')' DECLARE FVARIABLE '[' callfunc_args ']' .

    $default  вывод с использованием правила 63 (callfunction)


State 298

   42 args_func: '[' . type VAR
   43          | '[' . type VAR DECLARE expr
   44          | '[' . type VAR DECLARE vector
   45          | '[' . type VAR DECLARE matrix
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 314


State 299

   46 args_func: args_func . ',' type VAR
   47          | args_func . ',' type VAR DECLARE expr
   48          | args_func . ',' type VAR DECLARE vector
   49          | args_func . ',' type VAR DECLARE matrix
   50          | args_func . ']'
   51          | args_func . error
   52 function_head: '[' return_func ']' DECLARE FUNC VAR '(' args_func . ')'

    error  сдвиг, и переход в состояние 315
    ','    сдвиг, и переход в состояние 316
    ')'    сдвиг, и переход в состояние 317
    ']'    сдвиг, и переход в состояние 318


State 300

   82 vector: VVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 82 (vector)


State 301

   84 vector: MVARIABLE '(' '[' ']' ',' expr ')' .

    $default  вывод с использованием правила 84 (vector)


State 302

   83 vector: MVARIABLE '(' expr ',' '[' ']' ')' .

    $default  вывод с использованием правила 83 (vector)


State 303

   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
   95 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 95 (vmdeclaration)


State 304

   66 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .

    $default  вывод с использованием правила 66 (matrix)


State 305

   65 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 65 (matrix)


State 306

   69 matrix: matrix . '*' matrix
   70       | matrix . ELEMMULT matrix
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr
  100 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104
    '*'         сдвиг, и переход в состояние 105

    $default  вывод с использованием правила 100 (vmdeclaration)


State 307

   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
   98 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 98 (vmdeclaration)


State 308

   69 matrix: matrix . '*' matrix
   70       | matrix . ELEMMULT matrix
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr
   99 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104
    '*'         сдвиг, и переход в состояние 105

    $default  вывод с использованием правила 99 (vmdeclaration)


State 309

   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
   97 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 97 (vmdeclaration)


State 310

   61 callfunc_args: callfunc_args ',' DFLT .

    $default  вывод с использованием правила 61 (callfunc_args)


State 311

   60 callfunc_args: callfunc_args ',' matrix .  [error, ',', ']']
   69 matrix: matrix . '*' matrix
   70       | matrix . ELEMMULT matrix
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104
    '*'         сдвиг, и переход в состояние 105

    $default  вывод с использованием правила 60 (callfunc_args)


State 312

   59 callfunc_args: callfunc_args ',' vector .  [error, ',', ']']
   74 matrix: vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 107
    '\''        сдвиг, и переход в состояние 108
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 59 (callfunc_args)


State 313

   58 callfunc_args: callfunc_args ',' expr .  [error, ',', ']']
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 58 (callfunc_args)


State 314

   42 args_func: '[' type . VAR
   43          | '[' type . VAR DECLARE expr
   44          | '[' type . VAR DECLARE vector
   45          | '[' type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 319


State 315

   51 args_func: args_func error .

    $default  вывод с использованием правила 51 (args_func)


State 316

   46 args_func: args_func ',' . type VAR
   47          | args_func ',' . type VAR DECLARE expr
   48          | args_func ',' . type VAR DECLARE vector
   49          | args_func ',' . type VAR DECLARE matrix
  134 type: . INT
  135     | . CINT
  136     | . VINT
  137     | . MINT
  138     | . CVINT
  139     | . CMINT
  140     | . BOOLEAN
  141     | . CBOOLEAN
  142     | . VBOOLEAN
  143     | . MBOOLEAN
  144     | . CVBOOLEAN
  145     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 320


State 317

   52 function_head: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' .

    $default  вывод с использованием правила 52 (function_head)


State 318

   50 args_func: args_func ']' .

    $default  вывод с использованием правила 50 (args_func)


State 319

   42 args_func: '[' type VAR .  [error, ',', ')', ']']
   43          | '[' type VAR . DECLARE expr
   44          | '[' type VAR . DECLARE vector
   45          | '[' type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 321

    $default  вывод с использованием правила 42 (args_func)


State 320

   46 args_func: args_func ',' type . VAR
   47          | args_func ',' type . VAR DECLARE expr
   48          | args_func ',' type . VAR DECLARE vector
   49          | args_func ',' type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 322


State 321

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   43 args_func: '[' type VAR DECLARE . expr
   44          | '[' type VAR DECLARE . vector
   45          | '[' type VAR DECLARE . matrix
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 134
    VAR        сдвиг, и переход в состояние 10
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 323
    vector     переход в состояние 324
    expr       переход в состояние 325
    const      переход в состояние 58


State 322

   46 args_func: args_func ',' type VAR .  [error, ',', ')', ']']
   47          | args_func ',' type VAR . DECLARE expr
   48          | args_func ',' type VAR . DECLARE vector
   49          | args_func ',' type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 326

    $default  вывод с использованием правила 46 (args_func)


State 323

   45 args_func: '[' type VAR DECLARE matrix .  [error, ',', ')', ']']
   69 matrix: matrix . '*' matrix
   70       | matrix . ELEMMULT matrix
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104
    '*'         сдвиг, и переход в состояние 105

    $default  вывод с использованием правила 45 (args_func)


State 324

   44 args_func: '[' type VAR DECLARE vector .  [error, ',', ')', ']']
   74 matrix: vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 107
    '\''        сдвиг, и переход в состояние 108
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 44 (args_func)


State 325

   43 args_func: '[' type VAR DECLARE expr .  [error, ',', ')', ']']
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 43 (args_func)


State 326

   24 robotmove: . MOVE '(' expr ')'
   27 robotwall: . WALL
   28 robotexit: . ROBEX
   47 args_func: args_func ',' type VAR DECLARE . expr
   48          | args_func ',' type VAR DECLARE . vector
   49          | args_func ',' type VAR DECLARE . matrix
   64 matrix: . '{' listexprs '}'
   65       | . MVARIABLE '(' vector ',' '[' ']' ')'
   66       | . MVARIABLE '(' '[' ']' ',' vector ')'
   67       | . MVARIABLE '(' matrix ')'
   68       | . MVARIABLE
   69       | . matrix '*' matrix
   70       | . matrix ELEMMULT matrix
   71       | . matrix '\''
   72       | . matrix RIGHTSHIFT
   73       | . matrix LEFTSHIFT
   74       | . vector '\''
   75       | . matrix ELEMMULT vector
   76       | . matrix ELEMMULT expr
   77       | . VAR
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . VAR
  117 expr: . const
  118     | . robotexit
  119     | . robotmove
  120     | . robotwall
  121     | . VARIABLE
  122     | . '-' expr
  123     | . expr '+' expr
  124     | . expr '-' expr
  125     | . expr '/' expr
  126     | . expr '<' expr
  127     | . expr '>' expr
  128     | . '!' expr
  129     | . expr CONJUNCTION expr
  130     | . '(' expr ')'
  131     | . VVARIABLE '(' expr ')'
  132     | . MVARIABLE '(' expr ',' expr ')'
  133     | . VAR
  146 const: . INTEGER
  147      | . BOOL

    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 68
    VVARIABLE  сдвиг, и переход в состояние 84
    MVARIABLE  сдвиг, и переход в состояние 134
    VAR        сдвиг, и переход в состояние 10
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 72
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 327
    vector     переход в состояние 328
    expr       переход в состояние 329
    const      переход в состояние 58


State 327

   49 args_func: args_func ',' type VAR DECLARE matrix .  [error, ',', ')', ']']
   69 matrix: matrix . '*' matrix
   70       | matrix . ELEMMULT matrix
   71       | matrix . '\''
   72       | matrix . RIGHTSHIFT
   73       | matrix . LEFTSHIFT
   75       | matrix . ELEMMULT vector
   76       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 101
    '\''        сдвиг, и переход в состояние 102
    LEFTSHIFT   сдвиг, и переход в состояние 103
    RIGHTSHIFT  сдвиг, и переход в состояние 104
    '*'         сдвиг, и переход в состояние 105

    $default  вывод с использованием правила 49 (args_func)


State 328

   48 args_func: args_func ',' type VAR DECLARE vector .  [error, ',', ')', ']']
   74 matrix: vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 107
    '\''        сдвиг, и переход в состояние 108
    LEFTSHIFT   сдвиг, и переход в состояние 109
    RIGHTSHIFT  сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 48 (args_func)


State 329

   47 args_func: args_func ',' type VAR DECLARE expr .  [error, ',', ')', ']']
  123 expr: expr . '+' expr
  124     | expr . '-' expr
  125     | expr . '/' expr
  126     | expr . '<' expr
  127     | expr . '>' expr
  129     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 116
    '<'          сдвиг, и переход в состояние 117
    '>'          сдвиг, и переход в состояние 118
    '+'          сдвиг, и переход в состояние 119
    '-'          сдвиг, и переход в состояние 120
    '/'          сдвиг, и переход в состояние 121

    $default  вывод с использованием правила 47 (args_func)
