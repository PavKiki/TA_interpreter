Терминалы не используются в грамматике

   END
   ER


Состояние 4 конфликты: 15 сдвига/вывода, 33 вывода/вывода
Состояние 36 конфликты: 32 сдвига/вывода
Состояние 66 конфликты: 5 сдвига/вывода
Состояние 67 конфликты: 4 сдвига/вывода, 11 вывода/вывода
Состояние 68 конфликты: 6 сдвига/вывода, 22 вывода/вывода
Состояние 82 конфликты: 1 сдвига/вывода
Состояние 83 конфликты: 1 сдвига/вывода
Состояние 84 конфликты: 15 сдвига/вывода
Состояние 96 конфликты: 15 сдвига/вывода
Состояние 129 конфликты: 1 сдвига/вывода
Состояние 133 конфликты: 1 сдвига/вывода
Состояние 157 конфликты: 6 сдвига/вывода
Состояние 168 конфликты: 3 сдвига/вывода
Состояние 169 конфликты: 6 сдвига/вывода, 12 вывода/вывода
Состояние 182 конфликты: 5 сдвига/вывода
Состояние 183 конфликты: 4 сдвига/вывода
Состояние 185 конфликты: 4 сдвига/вывода
Состояние 186 конфликты: 3 сдвига/вывода
Состояние 188 конфликты: 6 сдвига/вывода
Состояние 189 конфликты: 1 сдвига/вывода
Состояние 190 конфликты: 1 сдвига/вывода
Состояние 191 конфликты: 1 сдвига/вывода
Состояние 192 конфликты: 1 сдвига/вывода
Состояние 193 конфликты: 1 сдвига/вывода
Состояние 209 конфликты: 4 вывода/вывода


Грамматика

    0 $accept: program $end

    1 program: func

    2 func: func stmts
    3     | func error
    4     | %empty

    5 stmts: stmt
    6      | stmts stmt
    7      | stmts error
    8      | error

    9 stmt: NEWLINE
   10     | expr NEWLINE
   11     | vector NEWLINE
   12     | matrix NEWLINE
   13     | print NEWLINE
   14     | vmdeclaration NEWLINE
   15     | declaration NEWLINE
   16     | assignment NEWLINE
   17     | iff NEWLINE
   18     | forr NEWLINE
   19     | function NEWLINE
   20     | callfunction NEWLINE
   21     | robotactions NEWLINE
   22     | '(' stmts ')'
   23     | error NEWLINE

   24 robotactions: robotright
   25             | robotleft

   26 robotmove: MOVE '(' expr ')'

   27 robotright: RIGHT

   28 robotleft: LEFT

   29 robotwall: WALL

   30 robotexit: ROBEX

   31 iff: IF expr NEWLINE begif stmts endif

   32 begif: B
   33      | BEGIF

   34 endif: E
   35      | ENDIF

   36 begfor: B
   37       | BEGFOR

   38 endfor: E
   39       | ENDFOR

   40 forr: FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor

   41 return_func: type VAR
   42            | return_func ',' type VAR
   43            | return_func error

   44 args_func: '[' type VAR
   45          | '[' type VAR DECLARE expr
   46          | '[' type VAR DECLARE vector
   47          | '[' type VAR DECLARE matrix
   48          | args_func ',' type VAR
   49          | args_func ',' type VAR DECLARE expr
   50          | args_func ',' type VAR DECLARE vector
   51          | args_func ',' type VAR DECLARE matrix
   52          | args_func ']'
   53          | args_func error
   54          | error

   55 function_head: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   56              | error

   57 function: function_head B NEWLINE stmts E

   58 callfunc_args: expr
   59              | vector
   60              | matrix
   61              | DFLT
   62              | callfunc_args ',' expr
   63              | callfunc_args ',' vector
   64              | callfunc_args ',' matrix
   65              | callfunc_args ',' DFLT
   66              | callfunc_args error
   67              | error

   68 callfunction: return_func DECLARE FVARIABLE '[' callfunc_args ']'
   69             | error '[' callfunc_args ']'

   70 matrix: '{' listexprs '}'
   71       | MVARIABLE '(' vector ',' '[' ']' ')'
   72       | MVARIABLE '(' '[' ']' ',' vector ')'
   73       | MVARIABLE '(' matrix ')'
   74       | MVARIABLE
   75       | matrix '*' matrix
   76       | matrix ELEMMULT matrix
   77       | matrix '\''
   78       | matrix RIGHTSHIFT
   79       | matrix LEFTSHIFT
   80       | vector '\''
   81       | matrix ELEMMULT vector
   82       | matrix ELEMMULT expr
   83       | error matrix
   84       | error vector
   85       | error expr

   86 listexprs: vector ',' vector
   87          | listexprs ',' vector
   88          | listexprs error

   89 vector: '{' exprs '}'
   90       | VVARIABLE '(' vector ',' '[' ']' ')'
   91       | MVARIABLE '(' expr ',' '[' ']' ')'
   92       | MVARIABLE '(' '[' ']' ',' expr ')'
   93       | VVARIABLE
   94       | vector ELEMMULT vector
   95       | vector RIGHTSHIFT
   96       | vector LEFTSHIFT
   97       | vector ELEMMULT expr
   98       | error vector
   99       | error expr

  100 exprs: expr ',' expr
  101      | exprs ',' expr
  102      | exprs error

  103 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr
  104              | VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
  105              | MVARIABLE '(' expr ',' expr ')' ASSIGN expr
  106              | MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
  107              | MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  108              | MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  109              | MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  110              | MVARIABLE '(' matrix ')' ASSIGN matrix

  111 declaration: type VAR DECLARE expr
  112            | type VAR DECLARE vector
  113            | type VAR DECLARE matrix

  114 assignment: VARIABLE ASSIGN expr
  115           | VVARIABLE ASSIGN vector
  116           | MVARIABLE ASSIGN matrix

  117 print: PRINT '(' expr ')'
  118      | PRINT '(' VVARIABLE ')'
  119      | PRINT '(' MVARIABLE ')'

  120 expr: const
  121     | robotexit
  122     | robotmove
  123     | robotwall
  124     | VARIABLE
  125     | '-' expr
  126     | expr '+' expr
  127     | expr '-' expr
  128     | expr '/' expr
  129     | expr '<' expr
  130     | expr '>' expr
  131     | '!' expr
  132     | expr CONJUNCTION expr
  133     | '(' expr ')'
  134     | VVARIABLE '(' expr ')'
  135     | MVARIABLE '(' expr ',' expr ')'
  136     | error expr

  137 type: INT
  138     | CINT
  139     | VINT
  140     | MINT
  141     | CVINT
  142     | CMINT
  143     | BOOLEAN
  144     | CBOOLEAN
  145     | VBOOLEAN
  146     | MBOOLEAN
  147     | CVBOOLEAN
  148     | CMBOOLEAN

  149 const: INTEGER
  150      | BOOL


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'!' (33) 131
'\'' (39) 77 80
'(' (40) 22 26 55 71 72 73 90 91 92 103 104 105 106 107 108 109 110
    117 118 119 133 134 135
')' (41) 22 26 55 71 72 73 90 91 92 103 104 105 106 107 108 109 110
    117 118 119 133 134 135
'*' (42) 75
'+' (43) 126
',' (44) 42 48 49 50 51 62 63 64 65 71 72 86 87 90 91 92 100 101 104
    105 106 107 108 109 135
'-' (45) 125 127
'/' (47) 128
'<' (60) 129
'>' (62) 130
'[' (91) 44 45 46 47 55 68 69 71 72 90 91 92 104 106 107 108 109
']' (93) 52 55 68 69 71 72 90 91 92 104 106 107 108 109
'{' (123) 70 89
'}' (125) 70 89
error (256) 3 7 8 23 43 53 54 56 66 67 69 83 84 85 88 98 99 102 136
END (258)
BOOL <boolPtr> (259) 150
INTEGER <intPtr> (260) 149
VARIABLE <varName> (261) 114 124
VVARIABLE <varName> (262) 90 93 103 104 115 118 134
MVARIABLE <varName> (263) 71 72 73 74 91 92 105 106 107 108 109 110
    116 119 135
VAR <varName> (264) 41 42 44 45 46 47 48 49 50 51 55 111 112 113
FVARIABLE <varName> (265) 68
CINT <vtype> (266) 138
VINT <vtype> (267) 139
MINT <vtype> (268) 140
INT <vtype> (269) 137
CVINT <vtype> (270) 141
CMINT <vtype> (271) 142
BOOLEAN <vtype> (272) 143
CBOOLEAN <vtype> (273) 144
VBOOLEAN <vtype> (274) 145
MBOOLEAN <vtype> (275) 146
CVBOOLEAN <vtype> (276) 147
CMBOOLEAN <vtype> (277) 148
NEWLINE (278) 9 10 11 12 13 14 15 16 17 18 19 20 21 23 31 40 57
PRINT (279) 117 118 119
CONJUNCTION (280) 132
ELEMMULT (281) 76 81 82 94 97
LEFTSHIFT (282) 79 96
RIGHTSHIFT (283) 78 95
IF (284) 31
FORR (285) 40
ER (286)
DOUBLEDOT (287) 40
B (288) 32 36 57
E (289) 34 38 57
FUNC (290) 55
MOVE (291) 26
RIGHT (292) 27
LEFT (293) 28
ROBEX (294) 30
WALL (295) 29
BEGFOR (296) 37
BEGIF (297) 33
ENDIF (298) 35
ENDFOR (299) 39
DFLT (300) 61 65
ASSIGN (301) 103 104 105 106 107 108 109 110 114 115 116
DECLARE (302) 45 46 47 49 50 51 55 68 111 112 113
UMINUS (303)


Нетерминальные символы с правилами, в которых они появляются

$accept (64)
    налево: 0
program (65)
    налево: 1, направо: 0
func (66)
    налево: 2 3 4, направо: 1 2 3
stmts <ptr> (67)
    налево: 5 6 7 8, направо: 2 6 7 22 31 40 57
stmt <ptr> (68)
    налево: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23, направо:
    5 6
robotactions <ptr> (69)
    налево: 24 25, направо: 21
robotmove <ptr> (70)
    налево: 26, направо: 122
robotright <ptr> (71)
    налево: 27, направо: 24
robotleft <ptr> (72)
    налево: 28, направо: 25
robotwall <ptr> (73)
    налево: 29, направо: 123
robotexit <ptr> (74)
    налево: 30, направо: 121
iff <ptr> (75)
    налево: 31, направо: 17
begif (76)
    налево: 32 33, направо: 31
endif (77)
    налево: 34 35, направо: 31
begfor (78)
    налево: 36 37, направо: 40
endfor (79)
    налево: 38 39, направо: 40
forr <ptr> (80)
    налево: 40, направо: 18
return_func <ptr> (81)
    налево: 41 42 43, направо: 42 43 55 68
args_func <ptr> (82)
    налево: 44 45 46 47 48 49 50 51 52 53 54, направо:
    48 49 50 51 52 53 55
function_head <ptr> (83)
    налево: 55 56, направо: 57
function <ptr> (84)
    налево: 57, направо: 19
callfunc_args <ptr> (85)
    налево: 58 59 60 61 62 63 64 65 66 67, направо: 62
    63 64 65 66 68 69
callfunction <ptr> (86)
    налево: 68 69, направо: 20
matrix <ptr> (87)
    налево: 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85,
    направо: 12 47 51 60 64 73 75 76 77 78 79 81 82 83 108 109
    110 113 116
listexprs <ptr> (88)
    налево: 86 87 88, направо: 70 87 88
vector <ptr> (89)
    налево: 89 90 91 92 93 94 95 96 97 98 99, направо:
    11 46 50 59 63 71 72 80 81 84 86 87 90 94 95 96 97 98 104 106 107
    108 109 112 115
exprs <ptr> (90)
    налево: 100 101 102, направо: 89 101 102
vmdeclaration <ptr> (91)
    налево: 103 104 105 106 107 108 109 110, направо:
    14
declaration <varOpPtr> (92)
    налево: 111 112 113, направо: 15 40
assignment <varOpPtr> (93)
    налево: 114 115 116, направо: 16
print <ptr> (94)
    налево: 117 118 119, направо: 13
expr <ptr> (95)
    налево: 120 121 122 123 124 125 126 127 128 129 130 131 132
    133 134 135 136, направо: 10 26 31 40 45 49 58 62 82 85
    91 92 97 99 100 101 103 105 106 107 111 114 117 125 126 127 128
    129 130 131 132 133 134 135 136
type <vtype> (96)
    налево: 137 138 139 140 141 142 143 144 145 146 147 148,
    направо: 41 42 44 45 46 47 48 49 50 51 111 112 113
const <ptr> (97)
    налево: 149 150, направо: 120


State 0

    0 $accept: . program $end
    1 program: . func
    2 func: . func stmts
    3     | . func error
    4     | . %empty

    $default  вывод с использованием правила 4 (func)

    program  переход в состояние 1
    func     переход в состояние 2


State 1

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 3


State 2

    1 program: func .  [$end]
    2 func: func . stmts
    3     | func . error
    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   41 return_func: . type VAR
   42            | . return_func ',' type VAR
   43            | . return_func error
   55 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   56              | . error
   57 function: . function_head B NEWLINE stmts E
   68 callfunction: . return_func DECLARE FVARIABLE '[' callfunc_args ']'
   69             | . error '[' callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  103 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
  104              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
  105              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
  106              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
  107              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  108              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  109              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  110              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  111 declaration: . type VAR DECLARE expr
  112            | . type VAR DECLARE vector
  113            | . type VAR DECLARE matrix
  114 assignment: . VARIABLE ASSIGN expr
  115           | . VVARIABLE ASSIGN vector
  116           | . MVARIABLE ASSIGN matrix
  117 print: . PRINT '(' expr ')'
  118      | . PRINT '(' VVARIABLE ')'
  119      | . PRINT '(' MVARIABLE ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 4
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    $end  вывод с использованием правила 1 (program)

    stmts          переход в состояние 36
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    return_func    переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 3

    0 $accept: program $end .

    $default  принять


State 4

    3 func: func error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    8 stmts: error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   56 function_head: error .  [B]
   69 callfunction: error . '[' callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   83       | error . matrix
   84       | . error vector
   84       | error . vector
   85       | . error expr
   85       | error . expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   98       | error . vector
   99       | . error expr
   99       | error . expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  136     | error . expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    NEWLINE    сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 35

    $end       вывод с использованием правила 3 (func)
    $end       [вывод с использованием правила 8 (stmts)]
    error      [вывод с использованием правила 3 (func)]
    error      [вывод с использованием правила 8 (stmts)]
    BOOL       [вывод с использованием правила 3 (func)]
    BOOL       [вывод с использованием правила 8 (stmts)]
    INTEGER    [вывод с использованием правила 3 (func)]
    INTEGER    [вывод с использованием правила 8 (stmts)]
    VARIABLE   [вывод с использованием правила 3 (func)]
    VARIABLE   [вывод с использованием правила 8 (stmts)]
    VVARIABLE  [вывод с использованием правила 3 (func)]
    VVARIABLE  [вывод с использованием правила 8 (stmts)]
    MVARIABLE  [вывод с использованием правила 3 (func)]
    MVARIABLE  [вывод с использованием правила 8 (stmts)]
    CINT       вывод с использованием правила 3 (func)
    CINT       [вывод с использованием правила 8 (stmts)]
    VINT       вывод с использованием правила 3 (func)
    VINT       [вывод с использованием правила 8 (stmts)]
    MINT       вывод с использованием правила 3 (func)
    MINT       [вывод с использованием правила 8 (stmts)]
    INT        вывод с использованием правила 3 (func)
    INT        [вывод с использованием правила 8 (stmts)]
    CVINT      вывод с использованием правила 3 (func)
    CVINT      [вывод с использованием правила 8 (stmts)]
    CMINT      вывод с использованием правила 3 (func)
    CMINT      [вывод с использованием правила 8 (stmts)]
    BOOLEAN    вывод с использованием правила 3 (func)
    BOOLEAN    [вывод с использованием правила 8 (stmts)]
    CBOOLEAN   вывод с использованием правила 3 (func)
    CBOOLEAN   [вывод с использованием правила 8 (stmts)]
    VBOOLEAN   вывод с использованием правила 3 (func)
    VBOOLEAN   [вывод с использованием правила 8 (stmts)]
    MBOOLEAN   вывод с использованием правила 3 (func)
    MBOOLEAN   [вывод с использованием правила 8 (stmts)]
    CVBOOLEAN  вывод с использованием правила 3 (func)
    CVBOOLEAN  [вывод с использованием правила 8 (stmts)]
    CMBOOLEAN  вывод с использованием правила 3 (func)
    CMBOOLEAN  [вывод с использованием правила 8 (stmts)]
    NEWLINE    [вывод с использованием правила 3 (func)]
    NEWLINE    [вывод с использованием правила 8 (stmts)]
    PRINT      вывод с использованием правила 3 (func)
    PRINT      [вывод с использованием правила 8 (stmts)]
    IF         вывод с использованием правила 3 (func)
    IF         [вывод с использованием правила 8 (stmts)]
    FORR       вывод с использованием правила 3 (func)
    FORR       [вывод с использованием правила 8 (stmts)]
    B          вывод с использованием правила 56 (function_head)
    MOVE       [вывод с использованием правила 3 (func)]
    MOVE       [вывод с использованием правила 8 (stmts)]
    RIGHT      вывод с использованием правила 3 (func)
    RIGHT      [вывод с использованием правила 8 (stmts)]
    LEFT       вывод с использованием правила 3 (func)
    LEFT       [вывод с использованием правила 8 (stmts)]
    ROBEX      [вывод с использованием правила 3 (func)]
    ROBEX      [вывод с использованием правила 8 (stmts)]
    WALL       [вывод с использованием правила 3 (func)]
    WALL       [вывод с использованием правила 8 (stmts)]
    '-'        [вывод с использованием правила 3 (func)]
    '-'        [вывод с использованием правила 8 (stmts)]
    '!'        [вывод с использованием правила 3 (func)]
    '!'        [вывод с использованием правила 8 (stmts)]
    '('        [вывод с использованием правила 3 (func)]
    '('        [вывод с использованием правила 8 (stmts)]
    '['        [вывод с использованием правила 3 (func)]
    '['        [вывод с использованием правила 8 (stmts)]
    '{'        [вывод с использованием правила 3 (func)]
    '{'        [вывод с использованием правила 8 (stmts)]

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 58


State 5

  150 const: BOOL .

    $default  вывод с использованием правила 150 (const)


State 6

  149 const: INTEGER .

    $default  вывод с использованием правила 149 (const)


State 7

  114 assignment: VARIABLE . ASSIGN expr
  124 expr: VARIABLE .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 69

    $default  вывод с использованием правила 124 (expr)


State 8

   90 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   93       | VVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
  103 vmdeclaration: VVARIABLE . '(' expr ')' ASSIGN expr
  104              | VVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN vector
  115 assignment: VVARIABLE . ASSIGN vector
  134 expr: VVARIABLE . '(' expr ')'

    ASSIGN  сдвиг, и переход в состояние 70
    '('     сдвиг, и переход в состояние 71

    $default  вывод с использованием правила 93 (vector)


State 9

   71 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   72       | MVARIABLE . '(' '[' ']' ',' vector ')'
   73       | MVARIABLE . '(' matrix ')'
   74       | MVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   91 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   92       | MVARIABLE . '(' '[' ']' ',' expr ')'
  105 vmdeclaration: MVARIABLE . '(' expr ',' expr ')' ASSIGN expr
  106              | MVARIABLE . '(' expr ',' '[' ']' ')' ASSIGN vector
  107              | MVARIABLE . '(' '[' ']' ',' expr ')' ASSIGN vector
  108              | MVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN matrix
  109              | MVARIABLE . '(' '[' ']' ',' vector ')' ASSIGN matrix
  110              | MVARIABLE . '(' matrix ')' ASSIGN matrix
  116 assignment: MVARIABLE . ASSIGN matrix
  135 expr: MVARIABLE . '(' expr ',' expr ')'

    ASSIGN  сдвиг, и переход в состояние 72
    '('     сдвиг, и переход в состояние 73

    $default  вывод с использованием правила 74 (matrix)


State 10

  138 type: CINT .

    $default  вывод с использованием правила 138 (type)


State 11

  139 type: VINT .

    $default  вывод с использованием правила 139 (type)


State 12

  140 type: MINT .

    $default  вывод с использованием правила 140 (type)


State 13

  137 type: INT .

    $default  вывод с использованием правила 137 (type)


State 14

  141 type: CVINT .

    $default  вывод с использованием правила 141 (type)


State 15

  142 type: CMINT .

    $default  вывод с использованием правила 142 (type)


State 16

  143 type: BOOLEAN .

    $default  вывод с использованием правила 143 (type)


State 17

  144 type: CBOOLEAN .

    $default  вывод с использованием правила 144 (type)


State 18

  145 type: VBOOLEAN .

    $default  вывод с использованием правила 145 (type)


State 19

  146 type: MBOOLEAN .

    $default  вывод с использованием правила 146 (type)


State 20

  147 type: CVBOOLEAN .

    $default  вывод с использованием правила 147 (type)


State 21

  148 type: CMBOOLEAN .

    $default  вывод с использованием правила 148 (type)


State 22

    9 stmt: NEWLINE .

    $default  вывод с использованием правила 9 (stmt)


State 23

  117 print: PRINT . '(' expr ')'
  118      | PRINT . '(' VVARIABLE ')'
  119      | PRINT . '(' MVARIABLE ')'

    '('  сдвиг, и переход в состояние 74


State 24

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: IF . expr NEWLINE begif stmts endif
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 78
    const      переход в состояние 58


State 25

   40 forr: FORR . declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
  111 declaration: . type VAR DECLARE expr
  112            | . type VAR DECLARE vector
  113            | . type VAR DECLARE matrix
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    declaration  переход в состояние 79
    type         переход в состояние 80


State 26

   26 robotmove: MOVE . '(' expr ')'

    '('  сдвиг, и переход в состояние 81


State 27

   27 robotright: RIGHT .

    $default  вывод с использованием правила 27 (robotright)


State 28

   28 robotleft: LEFT .

    $default  вывод с использованием правила 28 (robotleft)


State 29

   30 robotexit: ROBEX .

    $default  вывод с использованием правила 30 (robotexit)


State 30

   29 robotwall: WALL .

    $default  вывод с использованием правила 29 (robotwall)


State 31

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  125     | '-' . expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 82
    const      переход в состояние 58


State 32

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  131     | '!' . expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 83
    const      переход в состояние 58


State 33

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   22     | '(' . stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   41 return_func: . type VAR
   42            | . return_func ',' type VAR
   43            | . return_func error
   55 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   56              | . error
   57 function: . function_head B NEWLINE stmts E
   68 callfunction: . return_func DECLARE FVARIABLE '[' callfunc_args ']'
   69             | . error '[' callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  103 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
  104              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
  105              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
  106              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
  107              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  108              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  109              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  110              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  111 declaration: . type VAR DECLARE expr
  112            | . type VAR DECLARE vector
  113            | . type VAR DECLARE matrix
  114 assignment: . VARIABLE ASSIGN expr
  115           | . VVARIABLE ASSIGN vector
  116           | . MVARIABLE ASSIGN matrix
  117 print: . PRINT '(' expr ')'
  118      | . PRINT '(' VVARIABLE ')'
  119      | . PRINT '(' MVARIABLE ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  133     | '(' . expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 84
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmts          переход в состояние 85
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    return_func    переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 86
    type           переход в состояние 57
    const          переход в состояние 58


State 34

   41 return_func: . type VAR
   42            | . return_func ',' type VAR
   43            | . return_func error
   55 function_head: '[' . return_func ']' DECLARE FUNC VAR '(' args_func ')'
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    return_func  переход в состояние 87
    type         переход в состояние 88


State 35

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   70 matrix: '{' . listexprs '}'
   86 listexprs: . vector ',' vector
   87          | . listexprs ',' vector
   88          | . listexprs error
   89 vector: . '{' exprs '}'
   89       | '{' . exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  100 exprs: . expr ',' expr
  101      | . exprs ',' expr
  102      | . exprs error
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    listexprs  переход в состояние 92
    vector     переход в состояние 93
    exprs      переход в состояние 94
    expr       переход в состояние 95
    const      переход в состояние 58


State 36

    2 func: func stmts .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   41 return_func: . type VAR
   42            | . return_func ',' type VAR
   43            | . return_func error
   55 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   56              | . error
   57 function: . function_head B NEWLINE stmts E
   68 callfunction: . return_func DECLARE FVARIABLE '[' callfunc_args ']'
   69             | . error '[' callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  103 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
  104              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
  105              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
  106              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
  107              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  108              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  109              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  110              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  111 declaration: . type VAR DECLARE expr
  112            | . type VAR DECLARE vector
  113            | . type VAR DECLARE matrix
  114 assignment: . VARIABLE ASSIGN expr
  115           | . VVARIABLE ASSIGN vector
  116           | . MVARIABLE ASSIGN matrix
  117 print: . PRINT '(' expr ')'
  118      | . PRINT '(' VVARIABLE ')'
  119      | . PRINT '(' MVARIABLE ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    $end       вывод с использованием правила 2 (func)
    error      [вывод с использованием правила 2 (func)]
    BOOL       [вывод с использованием правила 2 (func)]
    INTEGER    [вывод с использованием правила 2 (func)]
    VARIABLE   [вывод с использованием правила 2 (func)]
    VVARIABLE  [вывод с использованием правила 2 (func)]
    MVARIABLE  [вывод с использованием правила 2 (func)]
    CINT       [вывод с использованием правила 2 (func)]
    VINT       [вывод с использованием правила 2 (func)]
    MINT       [вывод с использованием правила 2 (func)]
    INT        [вывод с использованием правила 2 (func)]
    CVINT      [вывод с использованием правила 2 (func)]
    CMINT      [вывод с использованием правила 2 (func)]
    BOOLEAN    [вывод с использованием правила 2 (func)]
    CBOOLEAN   [вывод с использованием правила 2 (func)]
    VBOOLEAN   [вывод с использованием правила 2 (func)]
    MBOOLEAN   [вывод с использованием правила 2 (func)]
    CVBOOLEAN  [вывод с использованием правила 2 (func)]
    CMBOOLEAN  [вывод с использованием правила 2 (func)]
    NEWLINE    [вывод с использованием правила 2 (func)]
    PRINT      [вывод с использованием правила 2 (func)]
    IF         [вывод с использованием правила 2 (func)]
    FORR       [вывод с использованием правила 2 (func)]
    MOVE       [вывод с использованием правила 2 (func)]
    RIGHT      [вывод с использованием правила 2 (func)]
    LEFT       [вывод с использованием правила 2 (func)]
    ROBEX      [вывод с использованием правила 2 (func)]
    WALL       [вывод с использованием правила 2 (func)]
    '-'        [вывод с использованием правила 2 (func)]
    '!'        [вывод с использованием правила 2 (func)]
    '('        [вывод с использованием правила 2 (func)]
    '['        [вывод с использованием правила 2 (func)]
    '{'        [вывод с использованием правила 2 (func)]

    stmt           переход в состояние 97
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    return_func    переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 37

    5 stmts: stmt .

    $default  вывод с использованием правила 5 (stmts)


State 38

   21 stmt: robotactions . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 98


State 39

  122 expr: robotmove .

    $default  вывод с использованием правила 122 (expr)


State 40

   24 robotactions: robotright .

    $default  вывод с использованием правила 24 (robotactions)


State 41

   25 robotactions: robotleft .

    $default  вывод с использованием правила 25 (robotactions)


State 42

  123 expr: robotwall .

    $default  вывод с использованием правила 123 (expr)


State 43

  121 expr: robotexit .

    $default  вывод с использованием правила 121 (expr)


State 44

   17 stmt: iff . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 99


State 45

   18 stmt: forr . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 100


State 46

   42 return_func: return_func . ',' type VAR
   43            | return_func . error
   68 callfunction: return_func . DECLARE FVARIABLE '[' callfunc_args ']'

    error    сдвиг, и переход в состояние 101
    ','      сдвиг, и переход в состояние 102
    DECLARE  сдвиг, и переход в состояние 103


State 47

   57 function: function_head . B NEWLINE stmts E

    B  сдвиг, и переход в состояние 104


State 48

   19 stmt: function . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 105


State 49

   20 stmt: callfunction . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 106


State 50

   12 stmt: matrix . NEWLINE
   75 matrix: matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 107
    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112


State 51

   11 stmt: vector . NEWLINE
   80 matrix: vector . '\''
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 113
    ELEMMULT    сдвиг, и переход в состояние 114
    '\''        сдвиг, и переход в состояние 115
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117


State 52

   14 stmt: vmdeclaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 118


State 53

   15 stmt: declaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 119


State 54

   16 stmt: assignment . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 120


State 55

   13 stmt: print . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 121


State 56

   10 stmt: expr . NEWLINE
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 122
    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128


State 57

   41 return_func: type . VAR
  111 declaration: type . VAR DECLARE expr
  112            | type . VAR DECLARE vector
  113            | type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 129


State 58

  120 expr: const .

    $default  вывод с использованием правила 120 (expr)


State 59

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   83       | error . matrix
   84       | . error vector
   84       | error . vector
   85       | . error expr
   85       | error . expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   98       | error . vector
   99       | . error expr
   99       | error . expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  136     | error . expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 58


State 60

  124 expr: VARIABLE .

    $default  вывод с использованием правила 124 (expr)


State 61

   90 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   93       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  134 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 130

    $default  вывод с использованием правила 93 (vector)


State 62

   71 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   72       | MVARIABLE . '(' '[' ']' ',' vector ')'
   73       | MVARIABLE . '(' matrix ')'
   74       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   91 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   92       | MVARIABLE . '(' '[' ']' ',' expr ')'
  135 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 131

    $default  вывод с использованием правила 74 (matrix)


State 63

   23 stmt: error NEWLINE .

    $default  вывод с использованием правила 23 (stmt)


State 64

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  133     | '(' . expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 132
    const      переход в состояние 58


State 65

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   58 callfunc_args: . expr
   59              | . vector
   60              | . matrix
   61              | . DFLT
   62              | . callfunc_args ',' expr
   63              | . callfunc_args ',' vector
   64              | . callfunc_args ',' matrix
   65              | . callfunc_args ',' DFLT
   66              | . callfunc_args error
   67              | . error
   69 callfunction: error '[' . callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 133
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    DFLT       сдвиг, и переход в состояние 134
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 35

    robotmove      переход в состояние 39
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    callfunc_args  переход в состояние 135
    matrix         переход в состояние 136
    vector         переход в состояние 137
    expr           переход в состояние 138
    const          переход в состояние 58


State 66

   75 matrix: matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr
   83       | error matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112

    ELEMMULT    [вывод с использованием правила 83 (matrix)]
    '\''        [вывод с использованием правила 83 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 83 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 83 (matrix)]
    '*'         [вывод с использованием правила 83 (matrix)]
    $default    вывод с использованием правила 83 (matrix)


State 67

   80 matrix: vector . '\''
   84       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr
   98       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']

    ELEMMULT    сдвиг, и переход в состояние 114
    '\''        сдвиг, и переход в состояние 115
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    error       вывод с использованием правила 84 (matrix)
    error       [вывод с использованием правила 98 (vector)]
    NEWLINE     вывод с использованием правила 84 (matrix)
    NEWLINE     [вывод с использованием правила 98 (vector)]
    ELEMMULT    [вывод с использованием правила 84 (matrix)]
    ELEMMULT    [вывод с использованием правила 98 (vector)]
    '\''        [вывод с использованием правила 84 (matrix)]
    '\''        [вывод с использованием правила 98 (vector)]
    LEFTSHIFT   [вывод с использованием правила 84 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 98 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 84 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 98 (vector)]
    ','         вывод с использованием правила 84 (matrix)
    ','         [вывод с использованием правила 98 (vector)]
    DOUBLEDOT   вывод с использованием правила 84 (matrix)
    DOUBLEDOT   [вывод с использованием правила 98 (vector)]
    '*'         вывод с использованием правила 84 (matrix)
    '*'         [вывод с использованием правила 98 (vector)]
    ')'         вывод с использованием правила 84 (matrix)
    ')'         [вывод с использованием правила 98 (vector)]
    ']'         вывод с использованием правила 84 (matrix)
    ']'         [вывод с использованием правила 98 (vector)]
    $default    вывод с использованием правила 84 (matrix)


State 68

   85 matrix: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   99 vector: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr
  136     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']']

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    error        вывод с использованием правила 85 (matrix)
    error        [вывод с использованием правила 99 (vector)]
    error        [вывод с использованием правила 136 (expr)]
    NEWLINE      вывод с использованием правила 85 (matrix)
    NEWLINE      [вывод с использованием правила 99 (vector)]
    NEWLINE      [вывод с использованием правила 136 (expr)]
    CONJUNCTION  [вывод с использованием правила 136 (expr)]
    ELEMMULT     вывод с использованием правила 85 (matrix)
    ELEMMULT     [вывод с использованием правила 99 (vector)]
    ELEMMULT     [вывод с использованием правила 136 (expr)]
    '\''         вывод с использованием правила 85 (matrix)
    '\''         [вывод с использованием правила 99 (vector)]
    '\''         [вывод с использованием правила 136 (expr)]
    LEFTSHIFT    вывод с использованием правила 85 (matrix)
    LEFTSHIFT    [вывод с использованием правила 99 (vector)]
    LEFTSHIFT    [вывод с использованием правила 136 (expr)]
    RIGHTSHIFT   вывод с использованием правила 85 (matrix)
    RIGHTSHIFT   [вывод с использованием правила 99 (vector)]
    RIGHTSHIFT   [вывод с использованием правила 136 (expr)]
    ','          вывод с использованием правила 85 (matrix)
    ','          [вывод с использованием правила 99 (vector)]
    ','          [вывод с использованием правила 136 (expr)]
    DOUBLEDOT    вывод с использованием правила 85 (matrix)
    DOUBLEDOT    [вывод с использованием правила 99 (vector)]
    DOUBLEDOT    [вывод с использованием правила 136 (expr)]
    '<'          [вывод с использованием правила 136 (expr)]
    '>'          [вывод с использованием правила 136 (expr)]
    '+'          [вывод с использованием правила 136 (expr)]
    '-'          [вывод с использованием правила 136 (expr)]
    '*'          вывод с использованием правила 85 (matrix)
    '*'          [вывод с использованием правила 99 (vector)]
    '*'          [вывод с использованием правила 136 (expr)]
    '/'          [вывод с использованием правила 136 (expr)]
    ')'          вывод с использованием правила 85 (matrix)
    ')'          [вывод с использованием правила 99 (vector)]
    ')'          [вывод с использованием правила 136 (expr)]
    ']'          вывод с использованием правила 85 (matrix)
    ']'          [вывод с использованием правила 99 (vector)]
    ']'          [вывод с использованием правила 136 (expr)]
    $default     вывод с использованием правила 85 (matrix)


State 69

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  114 assignment: VARIABLE ASSIGN . expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 139
    const      переход в состояние 58


State 70

   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  115 assignment: VVARIABLE ASSIGN . vector

    error      сдвиг, и переход в состояние 140
    VVARIABLE  сдвиг, и переход в состояние 141
    MVARIABLE  сдвиг, и переход в состояние 142
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 143


State 71

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   90       | VVARIABLE '(' . vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  103 vmdeclaration: VVARIABLE '(' . expr ')' ASSIGN expr
  104              | VVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN vector
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  134     | VVARIABLE '(' . expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 144
    expr       переход в состояние 145
    const      переход в состояние 58


State 72

   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  116 assignment: MVARIABLE ASSIGN . matrix

    error      сдвиг, и переход в состояние 146
    VVARIABLE  сдвиг, и переход в состояние 141
    MVARIABLE  сдвиг, и переход в состояние 147
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 148
    vector  переход в состояние 149


State 73

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   71       | MVARIABLE '(' . vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   72       | MVARIABLE '(' . '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   73       | MVARIABLE '(' . matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   91       | MVARIABLE '(' . expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   92       | MVARIABLE '(' . '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  105 vmdeclaration: MVARIABLE '(' . expr ',' expr ')' ASSIGN expr
  106              | MVARIABLE '(' . expr ',' '[' ']' ')' ASSIGN vector
  107              | MVARIABLE '(' . '[' ']' ',' expr ')' ASSIGN vector
  108              | MVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN matrix
  109              | MVARIABLE '(' . '[' ']' ',' vector ')' ASSIGN matrix
  110              | MVARIABLE '(' . matrix ')' ASSIGN matrix
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  135     | MVARIABLE '(' . expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 150
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 151
    vector     переход в состояние 152
    expr       переход в состояние 153
    const      переход в состояние 58


State 74

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  117 print: PRINT '(' . expr ')'
  118      | PRINT '(' . VVARIABLE ')'
  119      | PRINT '(' . MVARIABLE ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 154
    MVARIABLE  сдвиг, и переход в состояние 155
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 156
    const      переход в состояние 58


State 75

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  136     | error . expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 157
    const      переход в состояние 58


State 76

  134 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 158


State 77

  135 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 159


State 78

   31 iff: IF expr . NEWLINE begif stmts endif
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 160
    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128


State 79

   40 forr: FORR declaration . DOUBLEDOT expr NEWLINE begfor stmts endfor

    DOUBLEDOT  сдвиг, и переход в состояние 161


State 80

  111 declaration: type . VAR DECLARE expr
  112            | type . VAR DECLARE vector
  113            | type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 162


State 81

   26 robotmove: . MOVE '(' expr ')'
   26          | MOVE '(' . expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 163
    const      переход в состояние 58


State 82

  125 expr: '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  126     | expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123

    CONJUNCTION  [вывод с использованием правила 125 (expr)]
    $default     вывод с использованием правила 125 (expr)

    Конфликт между правилом 125 и лексемой '<' разрешен выводом ('<' < UMINUS).
    Конфликт между правилом 125 и лексемой '>' разрешен выводом ('>' < UMINUS).
    Конфликт между правилом 125 и лексемой '+' разрешен выводом ('+' < UMINUS).
    Конфликт между правилом 125 и лексемой '-' разрешен выводом ('-' < UMINUS).
    Конфликт между правилом 125 и лексемой '/' разрешен выводом ('/' < UMINUS).


State 83

  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  131     | '!' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123

    CONJUNCTION  [вывод с использованием правила 131 (expr)]
    $default     вывод с использованием правила 131 (expr)

    Конфликт между правилом 131 и лексемой '<' разрешен выводом ('<' < '!').
    Конфликт между правилом 131 и лексемой '>' разрешен выводом ('>' < '!').
    Конфликт между правилом 131 и лексемой '+' разрешен выводом ('+' < '!').
    Конфликт между правилом 131 и лексемой '-' разрешен выводом ('-' < '!').
    Конфликт между правилом 131 и лексемой '/' разрешен выводом ('/' < '!').


State 84

    8 stmts: error .  [error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, E, MOVE, RIGHT, LEFT, ROBEX, WALL, ENDIF, ENDFOR, '-', '!', '(', ')', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   56 function_head: error .  [B]
   69 callfunction: error . '[' callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   83       | error . matrix
   84       | . error vector
   84       | error . vector
   85       | . error expr
   85       | error . expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   98       | error . vector
   99       | . error expr
   99       | error . expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  136     | error . expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    NEWLINE    сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 35

    error      [вывод с использованием правила 8 (stmts)]
    BOOL       [вывод с использованием правила 8 (stmts)]
    INTEGER    [вывод с использованием правила 8 (stmts)]
    VARIABLE   [вывод с использованием правила 8 (stmts)]
    VVARIABLE  [вывод с использованием правила 8 (stmts)]
    MVARIABLE  [вывод с использованием правила 8 (stmts)]
    CINT       вывод с использованием правила 8 (stmts)
    VINT       вывод с использованием правила 8 (stmts)
    MINT       вывод с использованием правила 8 (stmts)
    INT        вывод с использованием правила 8 (stmts)
    CVINT      вывод с использованием правила 8 (stmts)
    CMINT      вывод с использованием правила 8 (stmts)
    BOOLEAN    вывод с использованием правила 8 (stmts)
    CBOOLEAN   вывод с использованием правила 8 (stmts)
    VBOOLEAN   вывод с использованием правила 8 (stmts)
    MBOOLEAN   вывод с использованием правила 8 (stmts)
    CVBOOLEAN  вывод с использованием правила 8 (stmts)
    CMBOOLEAN  вывод с использованием правила 8 (stmts)
    NEWLINE    [вывод с использованием правила 8 (stmts)]
    PRINT      вывод с использованием правила 8 (stmts)
    IF         вывод с использованием правила 8 (stmts)
    FORR       вывод с использованием правила 8 (stmts)
    B          вывод с использованием правила 56 (function_head)
    E          вывод с использованием правила 8 (stmts)
    MOVE       [вывод с использованием правила 8 (stmts)]
    RIGHT      вывод с использованием правила 8 (stmts)
    LEFT       вывод с использованием правила 8 (stmts)
    ROBEX      [вывод с использованием правила 8 (stmts)]
    WALL       [вывод с использованием правила 8 (stmts)]
    ENDIF      вывод с использованием правила 8 (stmts)
    ENDFOR     вывод с использованием правила 8 (stmts)
    '-'        [вывод с использованием правила 8 (stmts)]
    '!'        [вывод с использованием правила 8 (stmts)]
    '('        [вывод с использованием правила 8 (stmts)]
    ')'        вывод с использованием правила 8 (stmts)
    '['        [вывод с использованием правила 8 (stmts)]
    '{'        [вывод с использованием правила 8 (stmts)]

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 58


State 85

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   22     | '(' stmts . ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   41 return_func: . type VAR
   42            | . return_func ',' type VAR
   43            | . return_func error
   55 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   56              | . error
   57 function: . function_head B NEWLINE stmts E
   68 callfunction: . return_func DECLARE FVARIABLE '[' callfunc_args ']'
   69             | . error '[' callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  103 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
  104              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
  105              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
  106              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
  107              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  108              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  109              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  110              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  111 declaration: . type VAR DECLARE expr
  112            | . type VAR DECLARE vector
  113            | . type VAR DECLARE matrix
  114 assignment: . VARIABLE ASSIGN expr
  115           | . VVARIABLE ASSIGN vector
  116           | . MVARIABLE ASSIGN matrix
  117 print: . PRINT '(' expr ')'
  118      | . PRINT '(' VVARIABLE ')'
  119      | . PRINT '(' MVARIABLE ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    ')'        сдвиг, и переход в состояние 164
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmt           переход в состояние 97
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    return_func    переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 86

   10 stmt: expr . NEWLINE
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr
  133     | '(' expr . ')'

    NEWLINE      сдвиг, и переход в состояние 122
    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128
    ')'          сдвиг, и переход в состояние 165


State 87

   42 return_func: return_func . ',' type VAR
   43            | return_func . error
   55 function_head: '[' return_func . ']' DECLARE FUNC VAR '(' args_func ')'

    error  сдвиг, и переход в состояние 101
    ','    сдвиг, и переход в состояние 102
    ']'    сдвиг, и переход в состояние 166


State 88

   41 return_func: type . VAR

    VAR  сдвиг, и переход в состояние 167


State 89

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   98       | error . vector
   99       | . error expr
   99       | error . expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  136     | error . expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 168
    expr       переход в состояние 169
    const      переход в состояние 58


State 90

   91 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   92       | MVARIABLE . '(' '[' ']' ',' expr ')'
  135 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 170


State 91

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   89 vector: '{' . exprs '}'
  100 exprs: . expr ',' expr
  101      | . exprs ',' expr
  102      | . exprs error
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    exprs      переход в состояние 94
    expr       переход в состояние 95
    const      переход в состояние 58


State 92

   70 matrix: '{' listexprs . '}'
   87 listexprs: listexprs . ',' vector
   88          | listexprs . error

    error  сдвиг, и переход в состояние 171
    ','    сдвиг, и переход в состояние 172
    '}'    сдвиг, и переход в состояние 173


State 93

   86 listexprs: vector . ',' vector
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 114
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117
    ','         сдвиг, и переход в состояние 174


State 94

   89 vector: '{' exprs . '}'
  101 exprs: exprs . ',' expr
  102      | exprs . error

    error  сдвиг, и переход в состояние 175
    ','    сдвиг, и переход в состояние 176
    '}'    сдвиг, и переход в состояние 177


State 95

  100 exprs: expr . ',' expr
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    ','          сдвиг, и переход в состояние 178
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128


State 96

    7 stmts: stmts error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, E, MOVE, RIGHT, LEFT, ROBEX, WALL, ENDIF, ENDFOR, '-', '!', '(', ')', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   56 function_head: error .  [B]
   69 callfunction: error . '[' callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   83       | error . matrix
   84       | . error vector
   84       | error . vector
   85       | . error expr
   85       | error . expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   98       | error . vector
   99       | . error expr
   99       | error . expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  136     | error . expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    NEWLINE    сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 35

    $end       вывод с использованием правила 7 (stmts)
    error      [вывод с использованием правила 7 (stmts)]
    BOOL       [вывод с использованием правила 7 (stmts)]
    INTEGER    [вывод с использованием правила 7 (stmts)]
    VARIABLE   [вывод с использованием правила 7 (stmts)]
    VVARIABLE  [вывод с использованием правила 7 (stmts)]
    MVARIABLE  [вывод с использованием правила 7 (stmts)]
    CINT       вывод с использованием правила 7 (stmts)
    VINT       вывод с использованием правила 7 (stmts)
    MINT       вывод с использованием правила 7 (stmts)
    INT        вывод с использованием правила 7 (stmts)
    CVINT      вывод с использованием правила 7 (stmts)
    CMINT      вывод с использованием правила 7 (stmts)
    BOOLEAN    вывод с использованием правила 7 (stmts)
    CBOOLEAN   вывод с использованием правила 7 (stmts)
    VBOOLEAN   вывод с использованием правила 7 (stmts)
    MBOOLEAN   вывод с использованием правила 7 (stmts)
    CVBOOLEAN  вывод с использованием правила 7 (stmts)
    CMBOOLEAN  вывод с использованием правила 7 (stmts)
    NEWLINE    [вывод с использованием правила 7 (stmts)]
    PRINT      вывод с использованием правила 7 (stmts)
    IF         вывод с использованием правила 7 (stmts)
    FORR       вывод с использованием правила 7 (stmts)
    B          вывод с использованием правила 56 (function_head)
    E          вывод с использованием правила 7 (stmts)
    MOVE       [вывод с использованием правила 7 (stmts)]
    RIGHT      вывод с использованием правила 7 (stmts)
    LEFT       вывод с использованием правила 7 (stmts)
    ROBEX      [вывод с использованием правила 7 (stmts)]
    WALL       [вывод с использованием правила 7 (stmts)]
    ENDIF      вывод с использованием правила 7 (stmts)
    ENDFOR     вывод с использованием правила 7 (stmts)
    '-'        [вывод с использованием правила 7 (stmts)]
    '!'        [вывод с использованием правила 7 (stmts)]
    '('        [вывод с использованием правила 7 (stmts)]
    ')'        вывод с использованием правила 7 (stmts)
    '['        [вывод с использованием правила 7 (stmts)]
    '{'        [вывод с использованием правила 7 (stmts)]

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 58


State 97

    6 stmts: stmts stmt .

    $default  вывод с использованием правила 6 (stmts)


State 98

   21 stmt: robotactions NEWLINE .

    $default  вывод с использованием правила 21 (stmt)


State 99

   17 stmt: iff NEWLINE .

    $default  вывод с использованием правила 17 (stmt)


State 100

   18 stmt: forr NEWLINE .

    $default  вывод с использованием правила 18 (stmt)


State 101

   43 return_func: return_func error .

    $default  вывод с использованием правила 43 (return_func)


State 102

   42 return_func: return_func ',' . type VAR
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    type  переход в состояние 179


State 103

   68 callfunction: return_func DECLARE . FVARIABLE '[' callfunc_args ']'

    FVARIABLE  сдвиг, и переход в состояние 180


State 104

   57 function: function_head B . NEWLINE stmts E

    NEWLINE  сдвиг, и переход в состояние 181


State 105

   19 stmt: function NEWLINE .

    $default  вывод с использованием правила 19 (stmt)


State 106

   20 stmt: callfunction NEWLINE .

    $default  вывод с использованием правила 20 (stmt)


State 107

   12 stmt: matrix NEWLINE .

    $default  вывод с использованием правила 12 (stmt)


State 108

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   76       | matrix ELEMMULT . matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   81       | matrix ELEMMULT . vector
   82       | . matrix ELEMMULT expr
   82       | matrix ELEMMULT . expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 182
    vector     переход в состояние 183
    expr       переход в состояние 184
    const      переход в состояние 58


State 109

   77 matrix: matrix '\'' .

    $default  вывод с использованием правила 77 (matrix)


State 110

   79 matrix: matrix LEFTSHIFT .

    $default  вывод с использованием правила 79 (matrix)


State 111

   78 matrix: matrix RIGHTSHIFT .

    $default  вывод с использованием правила 78 (matrix)


State 112

   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   75       | matrix '*' . matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr

    error      сдвиг, и переход в состояние 146
    VVARIABLE  сдвиг, и переход в состояние 141
    MVARIABLE  сдвиг, и переход в состояние 147
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 185
    vector  переход в состояние 149


State 113

   11 stmt: vector NEWLINE .

    $default  вывод с использованием правила 11 (stmt)


State 114

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   94       | vector ELEMMULT . vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   97       | vector ELEMMULT . expr
   98       | . error vector
   99       | . error expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 186
    expr       переход в состояние 187
    const      переход в состояние 58


State 115

   80 matrix: vector '\'' .

    $default  вывод с использованием правила 80 (matrix)


State 116

   96 vector: vector LEFTSHIFT .

    $default  вывод с использованием правила 96 (vector)


State 117

   95 vector: vector RIGHTSHIFT .

    $default  вывод с использованием правила 95 (vector)


State 118

   14 stmt: vmdeclaration NEWLINE .

    $default  вывод с использованием правила 14 (stmt)


State 119

   15 stmt: declaration NEWLINE .

    $default  вывод с использованием правила 15 (stmt)


State 120

   16 stmt: assignment NEWLINE .

    $default  вывод с использованием правила 16 (stmt)


State 121

   13 stmt: print NEWLINE .

    $default  вывод с использованием правила 13 (stmt)


State 122

   10 stmt: expr NEWLINE .

    $default  вывод с использованием правила 10 (stmt)


State 123

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  132     | expr CONJUNCTION . expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 188
    const      переход в состояние 58


State 124

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  129     | expr '<' . expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 189
    const      переход в состояние 58


State 125

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  130     | expr '>' . expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 190
    const      переход в состояние 58


State 126

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  126     | expr '+' . expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 191
    const      переход в состояние 58


State 127

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  127     | expr '-' . expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 192
    const      переход в состояние 58


State 128

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  128     | expr '/' . expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 193
    const      переход в состояние 58


State 129

   41 return_func: type VAR .  [error, ',', DECLARE]
  111 declaration: type VAR . DECLARE expr
  112            | type VAR . DECLARE vector
  113            | type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 194

    DECLARE   [вывод с использованием правила 41 (return_func)]
    $default  вывод с использованием правила 41 (return_func)


State 130

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   90       | VVARIABLE '(' . vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  134     | VVARIABLE '(' . expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 195
    expr       переход в состояние 196
    const      переход в состояние 58


State 131

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   71       | MVARIABLE '(' . vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   72       | MVARIABLE '(' . '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   73       | MVARIABLE '(' . matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   91       | MVARIABLE '(' . expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   92       | MVARIABLE '(' . '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  135     | MVARIABLE '(' . expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 197
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 198
    vector     переход в состояние 199
    expr       переход в состояние 200
    const      переход в состояние 58


State 132

  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr
  133     | '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128
    ')'          сдвиг, и переход в состояние 165


State 133

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   67 callfunc_args: error .  [error, ',', ']']
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   83       | error . matrix
   84       | . error vector
   84       | error . vector
   85       | . error expr
   85       | error . expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   98       | error . vector
   99       | . error expr
   99       | error . expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  136     | error . expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 35

    error  [вывод с использованием правила 67 (callfunc_args)]
    ','    вывод с использованием правила 67 (callfunc_args)
    ']'    вывод с использованием правила 67 (callfunc_args)

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 58


State 134

   61 callfunc_args: DFLT .

    $default  вывод с использованием правила 61 (callfunc_args)


State 135

   62 callfunc_args: callfunc_args . ',' expr
   63              | callfunc_args . ',' vector
   64              | callfunc_args . ',' matrix
   65              | callfunc_args . ',' DFLT
   66              | callfunc_args . error
   69 callfunction: error '[' callfunc_args . ']'

    error  сдвиг, и переход в состояние 201
    ','    сдвиг, и переход в состояние 202
    ']'    сдвиг, и переход в состояние 203


State 136

   60 callfunc_args: matrix .  [error, ',', ']']
   75 matrix: matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112

    $default  вывод с использованием правила 60 (callfunc_args)


State 137

   59 callfunc_args: vector .  [error, ',', ']']
   80 matrix: vector . '\''
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 114
    '\''        сдвиг, и переход в состояние 115
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    $default  вывод с использованием правила 59 (callfunc_args)


State 138

   58 callfunc_args: expr .  [error, ',', ']']
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 58 (callfunc_args)


State 139

  114 assignment: VARIABLE ASSIGN expr .  [NEWLINE]
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 114 (assignment)


State 140

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   98       | error . vector
   99       | . error expr
   99       | error . expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 168
    expr       переход в состояние 204
    const      переход в состояние 58


State 141

   90 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   93       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '}']

    '('  сдвиг, и переход в состояние 205

    $default  вывод с использованием правила 93 (vector)


State 142

   91 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   92       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 206


State 143

   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr
  115 assignment: VVARIABLE ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 114
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    $default  вывод с использованием правила 115 (assignment)


State 144

   90 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   94       | vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr
  104 vmdeclaration: VVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN vector

    ELEMMULT    сдвиг, и переход в состояние 114
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117
    ','         сдвиг, и переход в состояние 207


State 145

  103 vmdeclaration: VVARIABLE '(' expr . ')' ASSIGN expr
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr
  134     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128
    ')'          сдвиг, и переход в состояние 208


State 146

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   83       | error . matrix
   84       | . error vector
   84       | error . vector
   85       | . error expr
   85       | error . expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   98       | error . vector
   99       | . error expr
   99       | error . expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 209
    const      переход в состояние 58


State 147

   71 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   72       | MVARIABLE . '(' '[' ']' ',' vector ')'
   73       | MVARIABLE . '(' matrix ')'
   74       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   91 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   92       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 210

    $default  вывод с использованием правила 74 (matrix)


State 148

   75 matrix: matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr
  116 assignment: MVARIABLE ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112

    $default  вывод с использованием правила 116 (assignment)


State 149

   80 matrix: vector . '\''
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 114
    '\''        сдвиг, и переход в состояние 115
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117


State 150

   72 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   92 vector: MVARIABLE '(' '[' . ']' ',' expr ')'
  107 vmdeclaration: MVARIABLE '(' '[' . ']' ',' expr ')' ASSIGN vector
  109              | MVARIABLE '(' '[' . ']' ',' vector ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 211


State 151

   73 matrix: MVARIABLE '(' matrix . ')'
   75       | matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr
  110 vmdeclaration: MVARIABLE '(' matrix . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112
    ')'         сдвиг, и переход в состояние 212


State 152

   71 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   80       | vector . '\''
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr
  108 vmdeclaration: MVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 114
    '\''        сдвиг, и переход в состояние 115
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117
    ','         сдвиг, и переход в состояние 213


State 153

   91 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  105 vmdeclaration: MVARIABLE '(' expr . ',' expr ')' ASSIGN expr
  106              | MVARIABLE '(' expr . ',' '[' ']' ')' ASSIGN vector
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr
  135     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 123
    ','          сдвиг, и переход в состояние 214
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128


State 154

  118 print: PRINT '(' VVARIABLE . ')'
  134 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 158
    ')'  сдвиг, и переход в состояние 215


State 155

  119 print: PRINT '(' MVARIABLE . ')'
  135 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 159
    ')'  сдвиг, и переход в состояние 216


State 156

  117 print: PRINT '(' expr . ')'
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128
    ')'          сдвиг, и переход в состояние 217


State 157

  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr
  136     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    CONJUNCTION  [вывод с использованием правила 136 (expr)]
    '<'          [вывод с использованием правила 136 (expr)]
    '>'          [вывод с использованием правила 136 (expr)]
    '+'          [вывод с использованием правила 136 (expr)]
    '-'          [вывод с использованием правила 136 (expr)]
    '/'          [вывод с использованием правила 136 (expr)]
    $default     вывод с использованием правила 136 (expr)


State 158

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  134     | VVARIABLE '(' . expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 196
    const      переход в состояние 58


State 159

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  135     | MVARIABLE '(' . expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 218
    const      переход в состояние 58


State 160

   31 iff: IF expr NEWLINE . begif stmts endif
   32 begif: . B
   33      | . BEGIF

    B      сдвиг, и переход в состояние 219
    BEGIF  сдвиг, и переход в состояние 220

    begif  переход в состояние 221


State 161

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   40 forr: FORR declaration DOUBLEDOT . expr NEWLINE begfor stmts endfor
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 222
    const      переход в состояние 58


State 162

  111 declaration: type VAR . DECLARE expr
  112            | type VAR . DECLARE vector
  113            | type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 194


State 163

   26 robotmove: MOVE '(' expr . ')'
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128
    ')'          сдвиг, и переход в состояние 223


State 164

   22 stmt: '(' stmts ')' .

    $default  вывод с использованием правила 22 (stmt)


State 165

  133 expr: '(' expr ')' .

    $default  вывод с использованием правила 133 (expr)


State 166

   55 function_head: '[' return_func ']' . DECLARE FUNC VAR '(' args_func ')'

    DECLARE  сдвиг, и переход в состояние 224


State 167

   41 return_func: type VAR .

    $default  вывод с использованием правила 41 (return_func)


State 168

   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr
   98       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']

    ELEMMULT    сдвиг, и переход в состояние 114
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    ELEMMULT    [вывод с использованием правила 98 (vector)]
    LEFTSHIFT   [вывод с использованием правила 98 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 98 (vector)]
    $default    вывод с использованием правила 98 (vector)


State 169

   99 vector: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr
  136     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    error        вывод с использованием правила 99 (vector)
    error        [вывод с использованием правила 136 (expr)]
    NEWLINE      вывод с использованием правила 99 (vector)
    NEWLINE      [вывод с использованием правила 136 (expr)]
    CONJUNCTION  [вывод с использованием правила 136 (expr)]
    ELEMMULT     вывод с использованием правила 99 (vector)
    ELEMMULT     [вывод с использованием правила 136 (expr)]
    '\''         вывод с использованием правила 99 (vector)
    '\''         [вывод с использованием правила 136 (expr)]
    LEFTSHIFT    вывод с использованием правила 99 (vector)
    LEFTSHIFT    [вывод с использованием правила 136 (expr)]
    RIGHTSHIFT   вывод с использованием правила 99 (vector)
    RIGHTSHIFT   [вывод с использованием правила 136 (expr)]
    ','          вывод с использованием правила 99 (vector)
    ','          [вывод с использованием правила 136 (expr)]
    DOUBLEDOT    вывод с использованием правила 99 (vector)
    DOUBLEDOT    [вывод с использованием правила 136 (expr)]
    '<'          [вывод с использованием правила 136 (expr)]
    '>'          [вывод с использованием правила 136 (expr)]
    '+'          [вывод с использованием правила 136 (expr)]
    '-'          [вывод с использованием правила 136 (expr)]
    '*'          вывод с использованием правила 99 (vector)
    '*'          [вывод с использованием правила 136 (expr)]
    '/'          [вывод с использованием правила 136 (expr)]
    ')'          вывод с использованием правила 99 (vector)
    ')'          [вывод с использованием правила 136 (expr)]
    ']'          вывод с использованием правила 99 (vector)
    ']'          [вывод с использованием правила 136 (expr)]
    '}'          вывод с использованием правила 99 (vector)
    '}'          [вывод с использованием правила 136 (expr)]
    $default     вывод с использованием правила 99 (vector)


State 170

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   91 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   92       | MVARIABLE '(' . '[' ']' ',' expr ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  135     | MVARIABLE '(' . expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 225

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 200
    const      переход в состояние 58


State 171

   88 listexprs: listexprs error .

    $default  вывод с использованием правила 88 (listexprs)


State 172

   87 listexprs: listexprs ',' . vector
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr

    error      сдвиг, и переход в состояние 140
    VVARIABLE  сдвиг, и переход в состояние 141
    MVARIABLE  сдвиг, и переход в состояние 142
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 226


State 173

   70 matrix: '{' listexprs '}' .

    $default  вывод с использованием правила 70 (matrix)


State 174

   86 listexprs: vector ',' . vector
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr

    error      сдвиг, и переход в состояние 140
    VVARIABLE  сдвиг, и переход в состояние 141
    MVARIABLE  сдвиг, и переход в состояние 142
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 227


State 175

  102 exprs: exprs error .

    $default  вывод с использованием правила 102 (exprs)


State 176

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  101 exprs: exprs ',' . expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 228
    const      переход в состояние 58


State 177

   89 vector: '{' exprs '}' .

    $default  вывод с использованием правила 89 (vector)


State 178

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  100 exprs: expr ',' . expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 229
    const      переход в состояние 58


State 179

   42 return_func: return_func ',' type . VAR

    VAR  сдвиг, и переход в состояние 230


State 180

   68 callfunction: return_func DECLARE FVARIABLE . '[' callfunc_args ']'

    '['  сдвиг, и переход в состояние 231


State 181

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   41 return_func: . type VAR
   42            | . return_func ',' type VAR
   43            | . return_func error
   55 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   56              | . error
   57 function: . function_head B NEWLINE stmts E
   57         | function_head B NEWLINE . stmts E
   68 callfunction: . return_func DECLARE FVARIABLE '[' callfunc_args ']'
   69             | . error '[' callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  103 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
  104              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
  105              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
  106              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
  107              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  108              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  109              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  110              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  111 declaration: . type VAR DECLARE expr
  112            | . type VAR DECLARE vector
  113            | . type VAR DECLARE matrix
  114 assignment: . VARIABLE ASSIGN expr
  115           | . VVARIABLE ASSIGN vector
  116           | . MVARIABLE ASSIGN matrix
  117 print: . PRINT '(' expr ')'
  118      | . PRINT '(' VVARIABLE ')'
  119      | . PRINT '(' MVARIABLE ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 84
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmts          переход в состояние 232
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    return_func    переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 182

   75 matrix: matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   76       | matrix ELEMMULT matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112

    ELEMMULT    [вывод с использованием правила 76 (matrix)]
    '\''        [вывод с использованием правила 76 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 76 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 76 (matrix)]
    '*'         [вывод с использованием правила 76 (matrix)]
    $default    вывод с использованием правила 76 (matrix)


State 183

   80 matrix: vector . '\''
   81       | matrix ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 114
    '\''        сдвиг, и переход в состояние 115
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    ELEMMULT    [вывод с использованием правила 81 (matrix)]
    '\''        [вывод с использованием правила 81 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 81 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 81 (matrix)]
    $default    вывод с использованием правила 81 (matrix)


State 184

   82 matrix: matrix ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 82 (matrix)


State 185

   75 matrix: matrix . '*' matrix
   75       | matrix '*' matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111

    ELEMMULT    [вывод с использованием правила 75 (matrix)]
    '\''        [вывод с использованием правила 75 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 75 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 75 (matrix)]
    $default    вывод с использованием правила 75 (matrix)

    Конфликт между правилом 75 и лексемой '*' разрешен выводом (%left '*').


State 186

   94 vector: vector . ELEMMULT vector
   94       | vector ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 114
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    ELEMMULT    [вывод с использованием правила 94 (vector)]
    LEFTSHIFT   [вывод с использованием правила 94 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 94 (vector)]
    $default    вывод с использованием правила 94 (vector)


State 187

   97 vector: vector ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 97 (vector)


State 188

  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr
  132     | expr CONJUNCTION expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    CONJUNCTION  [вывод с использованием правила 132 (expr)]
    '<'          [вывод с использованием правила 132 (expr)]
    '>'          [вывод с использованием правила 132 (expr)]
    '+'          [вывод с использованием правила 132 (expr)]
    '-'          [вывод с использованием правила 132 (expr)]
    '/'          [вывод с использованием правила 132 (expr)]
    $default     вывод с использованием правила 132 (expr)


State 189

  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  129     | expr '<' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    CONJUNCTION  [вывод с использованием правила 129 (expr)]
    $default     вывод с использованием правила 129 (expr)

    Конфликт между правилом 129 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 129 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 129 и лексемой '+' разрешен сдвигом ('<' < '+').
    Конфликт между правилом 129 и лексемой '-' разрешен сдвигом ('<' < '-').
    Конфликт между правилом 129 и лексемой '/' разрешен сдвигом ('<' < '/').


State 190

  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  130     | expr '>' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    CONJUNCTION  [вывод с использованием правила 130 (expr)]
    $default     вывод с использованием правила 130 (expr)

    Конфликт между правилом 130 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 130 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 130 и лексемой '+' разрешен сдвигом ('>' < '+').
    Конфликт между правилом 130 и лексемой '-' разрешен сдвигом ('>' < '-').
    Конфликт между правилом 130 и лексемой '/' разрешен сдвигом ('>' < '/').


State 191

  126 expr: expr . '+' expr
  126     | expr '+' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 128

    CONJUNCTION  [вывод с использованием правила 126 (expr)]
    $default     вывод с использованием правила 126 (expr)

    Конфликт между правилом 126 и лексемой '<' разрешен выводом ('<' < '+').
    Конфликт между правилом 126 и лексемой '>' разрешен выводом ('>' < '+').
    Конфликт между правилом 126 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 126 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 126 и лексемой '/' разрешен сдвигом ('+' < '/').


State 192

  126 expr: expr . '+' expr
  127     | expr . '-' expr
  127     | expr '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 128

    CONJUNCTION  [вывод с использованием правила 127 (expr)]
    $default     вывод с использованием правила 127 (expr)

    Конфликт между правилом 127 и лексемой '<' разрешен выводом ('<' < '-').
    Конфликт между правилом 127 и лексемой '>' разрешен выводом ('>' < '-').
    Конфликт между правилом 127 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 127 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 127 и лексемой '/' разрешен сдвигом ('-' < '/').


State 193

  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  128     | expr '/' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123

    CONJUNCTION  [вывод с использованием правила 128 (expr)]
    $default     вывод с использованием правила 128 (expr)

    Конфликт между правилом 128 и лексемой '<' разрешен выводом ('<' < '/').
    Конфликт между правилом 128 и лексемой '>' разрешен выводом ('>' < '/').
    Конфликт между правилом 128 и лексемой '+' разрешен выводом ('+' < '/').
    Конфликт между правилом 128 и лексемой '-' разрешен выводом ('-' < '/').
    Конфликт между правилом 128 и лексемой '/' разрешен выводом (%left '/').


State 194

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  111 declaration: type VAR DECLARE . expr
  112            | type VAR DECLARE . vector
  113            | type VAR DECLARE . matrix
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 233
    vector     переход в состояние 234
    expr       переход в состояние 235
    const      переход в состояние 58


State 195

   90 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   94       | vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 114
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117
    ','         сдвиг, и переход в состояние 236


State 196

  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr
  134     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128
    ')'          сдвиг, и переход в состояние 237


State 197

   72 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   92 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 238


State 198

   73 matrix: MVARIABLE '(' matrix . ')'
   75       | matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112
    ')'         сдвиг, и переход в состояние 239


State 199

   71 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   80       | vector . '\''
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 114
    '\''        сдвиг, и переход в состояние 115
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117
    ','         сдвиг, и переход в состояние 240


State 200

   91 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr
  135     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 123
    ','          сдвиг, и переход в состояние 241
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128


State 201

   66 callfunc_args: callfunc_args error .

    $default  вывод с использованием правила 66 (callfunc_args)


State 202

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   62 callfunc_args: callfunc_args ',' . expr
   63              | callfunc_args ',' . vector
   64              | callfunc_args ',' . matrix
   65              | callfunc_args ',' . DFLT
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    DFLT       сдвиг, и переход в состояние 242
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 243
    vector     переход в состояние 244
    expr       переход в состояние 245
    const      переход в состояние 58


State 203

   69 callfunction: error '[' callfunc_args ']' .

    $default  вывод с использованием правила 69 (callfunction)


State 204

   99 vector: error expr .  [error, NEWLINE, ELEMMULT, LEFTSHIFT, RIGHTSHIFT, ',', '}']
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 99 (vector)


State 205

   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   90       | VVARIABLE '(' . vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr

    error      сдвиг, и переход в состояние 140
    VVARIABLE  сдвиг, и переход в состояние 141
    MVARIABLE  сдвиг, и переход в состояние 142
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 195


State 206

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   91 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   92       | MVARIABLE '(' . '[' ']' ',' expr ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 225

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 246
    const      переход в состояние 58


State 207

   90 vector: VVARIABLE '(' vector ',' . '[' ']' ')'
  104 vmdeclaration: VVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN vector

    '['  сдвиг, и переход в состояние 247


State 208

  103 vmdeclaration: VVARIABLE '(' expr ')' . ASSIGN expr
  134 expr: VVARIABLE '(' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 248

    $default  вывод с использованием правила 134 (expr)


State 209

   85 matrix: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   99 vector: error expr .  [ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    ELEMMULT    вывод с использованием правила 85 (matrix)
    ELEMMULT    [вывод с использованием правила 99 (vector)]
    '\''        вывод с использованием правила 85 (matrix)
    '\''        [вывод с использованием правила 99 (vector)]
    LEFTSHIFT   вывод с использованием правила 85 (matrix)
    LEFTSHIFT   [вывод с использованием правила 99 (vector)]
    RIGHTSHIFT  вывод с использованием правила 85 (matrix)
    RIGHTSHIFT  [вывод с использованием правила 99 (vector)]
    $default    вывод с использованием правила 85 (matrix)


State 210

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   71       | MVARIABLE '(' . vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   72       | MVARIABLE '(' . '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   73       | MVARIABLE '(' . matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   91       | MVARIABLE '(' . expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   92       | MVARIABLE '(' . '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 197
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 198
    vector     переход в состояние 199
    expr       переход в состояние 246
    const      переход в состояние 58


State 211

   72 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   92 vector: MVARIABLE '(' '[' ']' . ',' expr ')'
  107 vmdeclaration: MVARIABLE '(' '[' ']' . ',' expr ')' ASSIGN vector
  109              | MVARIABLE '(' '[' ']' . ',' vector ')' ASSIGN matrix

    ','  сдвиг, и переход в состояние 249


State 212

   73 matrix: MVARIABLE '(' matrix ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
  110 vmdeclaration: MVARIABLE '(' matrix ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 250

    $default  вывод с использованием правила 73 (matrix)


State 213

   71 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'
  108 vmdeclaration: MVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN matrix

    '['  сдвиг, и переход в состояние 251


State 214

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   91 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
  105 vmdeclaration: MVARIABLE '(' expr ',' . expr ')' ASSIGN expr
  106              | MVARIABLE '(' expr ',' . '[' ']' ')' ASSIGN vector
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  135     | MVARIABLE '(' expr ',' . expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 252

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 253
    const      переход в состояние 58


State 215

  118 print: PRINT '(' VVARIABLE ')' .

    $default  вывод с использованием правила 118 (print)


State 216

  119 print: PRINT '(' MVARIABLE ')' .

    $default  вывод с использованием правила 119 (print)


State 217

  117 print: PRINT '(' expr ')' .

    $default  вывод с использованием правила 117 (print)


State 218

  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr
  135     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 123
    ','          сдвиг, и переход в состояние 254
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128


State 219

   32 begif: B .

    $default  вывод с использованием правила 32 (begif)


State 220

   33 begif: BEGIF .

    $default  вывод с использованием правила 33 (begif)


State 221

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   31    | IF expr NEWLINE begif . stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   41 return_func: . type VAR
   42            | . return_func ',' type VAR
   43            | . return_func error
   55 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   56              | . error
   57 function: . function_head B NEWLINE stmts E
   68 callfunction: . return_func DECLARE FVARIABLE '[' callfunc_args ']'
   69             | . error '[' callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  103 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
  104              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
  105              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
  106              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
  107              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  108              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  109              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  110              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  111 declaration: . type VAR DECLARE expr
  112            | . type VAR DECLARE vector
  113            | . type VAR DECLARE matrix
  114 assignment: . VARIABLE ASSIGN expr
  115           | . VVARIABLE ASSIGN vector
  116           | . MVARIABLE ASSIGN matrix
  117 print: . PRINT '(' expr ')'
  118      | . PRINT '(' VVARIABLE ')'
  119      | . PRINT '(' MVARIABLE ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 84
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmts          переход в состояние 255
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    return_func    переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 222

   40 forr: FORR declaration DOUBLEDOT expr . NEWLINE begfor stmts endfor
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 256
    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128


State 223

   26 robotmove: MOVE '(' expr ')' .

    $default  вывод с использованием правила 26 (robotmove)


State 224

   55 function_head: '[' return_func ']' DECLARE . FUNC VAR '(' args_func ')'

    FUNC  сдвиг, и переход в состояние 257


State 225

   92 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 258


State 226

   87 listexprs: listexprs ',' vector .  [error, ',', '}']
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 114
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    $default  вывод с использованием правила 87 (listexprs)


State 227

   86 listexprs: vector ',' vector .  [error, ',', '}']
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 114
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    $default  вывод с использованием правила 86 (listexprs)


State 228

  101 exprs: exprs ',' expr .  [error, ',', '}']
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 101 (exprs)


State 229

  100 exprs: expr ',' expr .  [error, ',', '}']
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 100 (exprs)


State 230

   42 return_func: return_func ',' type VAR .

    $default  вывод с использованием правила 42 (return_func)


State 231

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   58 callfunc_args: . expr
   59              | . vector
   60              | . matrix
   61              | . DFLT
   62              | . callfunc_args ',' expr
   63              | . callfunc_args ',' vector
   64              | . callfunc_args ',' matrix
   65              | . callfunc_args ',' DFLT
   66              | . callfunc_args error
   67              | . error
   68 callfunction: return_func DECLARE FVARIABLE '[' . callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 133
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    DFLT       сдвиг, и переход в состояние 134
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 35

    robotmove      переход в состояние 39
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    callfunc_args  переход в состояние 259
    matrix         переход в состояние 136
    vector         переход в состояние 137
    expr           переход в состояние 138
    const          переход в состояние 58


State 232

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   41 return_func: . type VAR
   42            | . return_func ',' type VAR
   43            | . return_func error
   55 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   56              | . error
   57 function: . function_head B NEWLINE stmts E
   57         | function_head B NEWLINE stmts . E
   68 callfunction: . return_func DECLARE FVARIABLE '[' callfunc_args ']'
   69             | . error '[' callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  103 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
  104              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
  105              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
  106              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
  107              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  108              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  109              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  110              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  111 declaration: . type VAR DECLARE expr
  112            | . type VAR DECLARE vector
  113            | . type VAR DECLARE matrix
  114 assignment: . VARIABLE ASSIGN expr
  115           | . VVARIABLE ASSIGN vector
  116           | . MVARIABLE ASSIGN matrix
  117 print: . PRINT '(' expr ')'
  118      | . PRINT '(' VVARIABLE ')'
  119      | . PRINT '(' MVARIABLE ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    E          сдвиг, и переход в состояние 260
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmt           переход в состояние 97
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    return_func    переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 233

   75 matrix: matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr
  113 declaration: type VAR DECLARE matrix .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112

    $default  вывод с использованием правила 113 (declaration)


State 234

   80 matrix: vector . '\''
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr
  112 declaration: type VAR DECLARE vector .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 114
    '\''        сдвиг, и переход в состояние 115
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    $default  вывод с использованием правила 112 (declaration)


State 235

  111 declaration: type VAR DECLARE expr .  [NEWLINE, DOUBLEDOT]
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 111 (declaration)


State 236

   90 vector: VVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 261


State 237

  134 expr: VVARIABLE '(' expr ')' .

    $default  вывод с использованием правила 134 (expr)


State 238

   72 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   92 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 262


State 239

   73 matrix: MVARIABLE '(' matrix ')' .

    $default  вывод с использованием правила 73 (matrix)


State 240

   71 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 263


State 241

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   91 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  135     | MVARIABLE '(' expr ',' . expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 264

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 265
    const      переход в состояние 58


State 242

   65 callfunc_args: callfunc_args ',' DFLT .

    $default  вывод с использованием правила 65 (callfunc_args)


State 243

   64 callfunc_args: callfunc_args ',' matrix .  [error, ',', ']']
   75 matrix: matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112

    $default  вывод с использованием правила 64 (callfunc_args)


State 244

   63 callfunc_args: callfunc_args ',' vector .  [error, ',', ']']
   80 matrix: vector . '\''
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 114
    '\''        сдвиг, и переход в состояние 115
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    $default  вывод с использованием правила 63 (callfunc_args)


State 245

   62 callfunc_args: callfunc_args ',' expr .  [error, ',', ']']
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 62 (callfunc_args)


State 246

   91 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    ','          сдвиг, и переход в состояние 266
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128


State 247

   90 vector: VVARIABLE '(' vector ',' '[' . ']' ')'
  104 vmdeclaration: VVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 267


State 248

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  103 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN . expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 268
    const      переход в состояние 58


State 249

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   72 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   92       | MVARIABLE '(' '[' ']' ',' . expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  107 vmdeclaration: MVARIABLE '(' '[' ']' ',' . expr ')' ASSIGN vector
  109              | MVARIABLE '(' '[' ']' ',' . vector ')' ASSIGN matrix
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 269
    expr       переход в состояние 270
    const      переход в состояние 58


State 250

   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  110 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 146
    VVARIABLE  сдвиг, и переход в состояние 141
    MVARIABLE  сдвиг, и переход в состояние 147
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 271
    vector  переход в состояние 149


State 251

   71 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'
  108 vmdeclaration: MVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 272


State 252

   91 vector: MVARIABLE '(' expr ',' '[' . ']' ')'
  106 vmdeclaration: MVARIABLE '(' expr ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 273


State 253

  105 vmdeclaration: MVARIABLE '(' expr ',' expr . ')' ASSIGN expr
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr
  135     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128
    ')'          сдвиг, и переход в состояние 274


State 254

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  135     | MVARIABLE '(' expr ',' . expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 265
    const      переход в состояние 58


State 255

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   31    | IF expr NEWLINE begif stmts . endif
   34 endif: . E
   35      | . ENDIF
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   41 return_func: . type VAR
   42            | . return_func ',' type VAR
   43            | . return_func error
   55 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   56              | . error
   57 function: . function_head B NEWLINE stmts E
   68 callfunction: . return_func DECLARE FVARIABLE '[' callfunc_args ']'
   69             | . error '[' callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  103 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
  104              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
  105              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
  106              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
  107              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  108              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  109              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  110              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  111 declaration: . type VAR DECLARE expr
  112            | . type VAR DECLARE vector
  113            | . type VAR DECLARE matrix
  114 assignment: . VARIABLE ASSIGN expr
  115           | . VVARIABLE ASSIGN vector
  116           | . MVARIABLE ASSIGN matrix
  117 print: . PRINT '(' expr ')'
  118      | . PRINT '(' VVARIABLE ')'
  119      | . PRINT '(' MVARIABLE ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    E          сдвиг, и переход в состояние 275
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    ENDIF      сдвиг, и переход в состояние 276
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmt           переход в состояние 97
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    endif          переход в состояние 277
    forr           переход в состояние 45
    return_func    переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 256

   36 begfor: . B
   37       | . BEGFOR
   40 forr: FORR declaration DOUBLEDOT expr NEWLINE . begfor stmts endfor

    B       сдвиг, и переход в состояние 278
    BEGFOR  сдвиг, и переход в состояние 279

    begfor  переход в состояние 280


State 257

   55 function_head: '[' return_func ']' DECLARE FUNC . VAR '(' args_func ')'

    VAR  сдвиг, и переход в состояние 281


State 258

   92 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 282


State 259

   62 callfunc_args: callfunc_args . ',' expr
   63              | callfunc_args . ',' vector
   64              | callfunc_args . ',' matrix
   65              | callfunc_args . ',' DFLT
   66              | callfunc_args . error
   68 callfunction: return_func DECLARE FVARIABLE '[' callfunc_args . ']'

    error  сдвиг, и переход в состояние 201
    ','    сдвиг, и переход в состояние 202
    ']'    сдвиг, и переход в состояние 283


State 260

   57 function: function_head B NEWLINE stmts E .

    $default  вывод с использованием правила 57 (function)


State 261

   90 vector: VVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 284


State 262

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   72 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   92       | MVARIABLE '(' '[' ']' ',' . expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 285
    expr       переход в состояние 286
    const      переход в состояние 58


State 263

   71 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 287


State 264

   91 vector: MVARIABLE '(' expr ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 288


State 265

  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr
  135     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128
    ')'          сдвиг, и переход в состояние 289


State 266

   91 vector: MVARIABLE '(' expr ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 264


State 267

   90 vector: VVARIABLE '(' vector ',' '[' ']' . ')'
  104 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 290


State 268

  103 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr .  [NEWLINE]
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 103 (vmdeclaration)


State 269

   72 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr
  109 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 114
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117
    ')'         сдвиг, и переход в состояние 291


State 270

   92 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
  107 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr . ')' ASSIGN vector
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128
    ')'          сдвиг, и переход в состояние 292


State 271

   75 matrix: matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr
  110 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112

    $default  вывод с использованием правила 110 (vmdeclaration)


State 272

   71 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'
  108 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN matrix

    ')'  сдвиг, и переход в состояние 293


State 273

   91 vector: MVARIABLE '(' expr ',' '[' ']' . ')'
  106 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 294


State 274

  105 vmdeclaration: MVARIABLE '(' expr ',' expr ')' . ASSIGN expr
  135 expr: MVARIABLE '(' expr ',' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 295

    $default  вывод с использованием правила 135 (expr)


State 275

   34 endif: E .

    $default  вывод с использованием правила 34 (endif)


State 276

   35 endif: ENDIF .

    $default  вывод с использованием правила 35 (endif)


State 277

   31 iff: IF expr NEWLINE begif stmts endif .

    $default  вывод с использованием правила 31 (iff)


State 278

   36 begfor: B .

    $default  вывод с использованием правила 36 (begfor)


State 279

   37 begfor: BEGFOR .

    $default  вывод с использованием правила 37 (begfor)


State 280

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   40     | FORR declaration DOUBLEDOT expr NEWLINE begfor . stmts endfor
   41 return_func: . type VAR
   42            | . return_func ',' type VAR
   43            | . return_func error
   55 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   56              | . error
   57 function: . function_head B NEWLINE stmts E
   68 callfunction: . return_func DECLARE FVARIABLE '[' callfunc_args ']'
   69             | . error '[' callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  103 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
  104              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
  105              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
  106              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
  107              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  108              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  109              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  110              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  111 declaration: . type VAR DECLARE expr
  112            | . type VAR DECLARE vector
  113            | . type VAR DECLARE matrix
  114 assignment: . VARIABLE ASSIGN expr
  115           | . VVARIABLE ASSIGN vector
  116           | . MVARIABLE ASSIGN matrix
  117 print: . PRINT '(' expr ')'
  118      | . PRINT '(' VVARIABLE ')'
  119      | . PRINT '(' MVARIABLE ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 84
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmts          переход в состояние 296
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    return_func    переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 281

   55 function_head: '[' return_func ']' DECLARE FUNC VAR . '(' args_func ')'

    '('  сдвиг, и переход в состояние 297


State 282

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   92 vector: MVARIABLE '(' '[' ']' ',' . expr ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 286
    const      переход в состояние 58


State 283

   68 callfunction: return_func DECLARE FVARIABLE '[' callfunc_args ']' .

    $default  вывод с использованием правила 68 (callfunction)


State 284

   90 vector: VVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 298


State 285

   72 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 114
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117
    ')'         сдвиг, и переход в состояние 299


State 286

   92 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128
    ')'          сдвиг, и переход в состояние 300


State 287

   71 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 301


State 288

   91 vector: MVARIABLE '(' expr ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 302


State 289

  135 expr: MVARIABLE '(' expr ',' expr ')' .

    $default  вывод с использованием правила 135 (expr)


State 290

   90 vector: VVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
  104 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 303

    $default  вывод с использованием правила 90 (vector)


State 291

   72 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
  109 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 304

    $default  вывод с использованием правила 72 (matrix)


State 292

   92 vector: MVARIABLE '(' '[' ']' ',' expr ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
  107 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 305

    $default  вывод с использованием правила 92 (vector)


State 293

   71 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
  108 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 306

    $default  вывод с использованием правила 71 (matrix)


State 294

   91 vector: MVARIABLE '(' expr ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
  106 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 307

    $default  вывод с использованием правила 91 (vector)


State 295

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  105 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN . expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 75
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 76
    MVARIABLE  сдвиг, и переход в состояние 77
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 308
    const      переход в состояние 58


State 296

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   38 endfor: . E
   39       | . ENDFOR
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   40     | FORR declaration DOUBLEDOT expr NEWLINE begfor stmts . endfor
   41 return_func: . type VAR
   42            | . return_func ',' type VAR
   43            | . return_func error
   55 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   56              | . error
   57 function: . function_head B NEWLINE stmts E
   68 callfunction: . return_func DECLARE FVARIABLE '[' callfunc_args ']'
   69             | . error '[' callfunc_args ']'
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  103 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
  104              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
  105              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
  106              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
  107              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  108              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  109              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  110              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  111 declaration: . type VAR DECLARE expr
  112            | . type VAR DECLARE vector
  113            | . type VAR DECLARE matrix
  114 assignment: . VARIABLE ASSIGN expr
  115           | . VVARIABLE ASSIGN vector
  116           | . MVARIABLE ASSIGN matrix
  117 print: . PRINT '(' expr ')'
  118      | . PRINT '(' VVARIABLE ')'
  119      | . PRINT '(' MVARIABLE ')'
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    E          сдвиг, и переход в состояние 309
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    ENDFOR     сдвиг, и переход в состояние 310
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmt           переход в состояние 97
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    endfor         переход в состояние 311
    forr           переход в состояние 45
    return_func    переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 297

   44 args_func: . '[' type VAR
   45          | . '[' type VAR DECLARE expr
   46          | . '[' type VAR DECLARE vector
   47          | . '[' type VAR DECLARE matrix
   48          | . args_func ',' type VAR
   49          | . args_func ',' type VAR DECLARE expr
   50          | . args_func ',' type VAR DECLARE vector
   51          | . args_func ',' type VAR DECLARE matrix
   52          | . args_func ']'
   53          | . args_func error
   54          | . error
   55 function_head: '[' return_func ']' DECLARE FUNC VAR '(' . args_func ')'

    error  сдвиг, и переход в состояние 312
    '['    сдвиг, и переход в состояние 313

    args_func  переход в состояние 314


State 298

   90 vector: VVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 90 (vector)


State 299

   72 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .

    $default  вывод с использованием правила 72 (matrix)


State 300

   92 vector: MVARIABLE '(' '[' ']' ',' expr ')' .

    $default  вывод с использованием правила 92 (vector)


State 301

   71 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 71 (matrix)


State 302

   91 vector: MVARIABLE '(' expr ',' '[' ']' ')' .

    $default  вывод с использованием правила 91 (vector)


State 303

   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  104 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 140
    VVARIABLE  сдвиг, и переход в состояние 141
    MVARIABLE  сдвиг, и переход в состояние 142
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 315


State 304

   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  109 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 146
    VVARIABLE  сдвиг, и переход в состояние 141
    MVARIABLE  сдвиг, и переход в состояние 147
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 316
    vector  переход в состояние 149


State 305

   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  107 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 140
    VVARIABLE  сдвиг, и переход в состояние 141
    MVARIABLE  сдвиг, и переход в состояние 142
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 317


State 306

   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  108 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 146
    VVARIABLE  сдвиг, и переход в состояние 141
    MVARIABLE  сдвиг, и переход в состояние 147
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 318
    vector  переход в состояние 149


State 307

   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  106 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 140
    VVARIABLE  сдвиг, и переход в состояние 141
    MVARIABLE  сдвиг, и переход в состояние 142
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 319


State 308

  105 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN expr .  [NEWLINE]
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 105 (vmdeclaration)


State 309

   38 endfor: E .

    $default  вывод с использованием правила 38 (endfor)


State 310

   39 endfor: ENDFOR .

    $default  вывод с использованием правила 39 (endfor)


State 311

   40 forr: FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor .

    $default  вывод с использованием правила 40 (forr)


State 312

   54 args_func: error .

    $default  вывод с использованием правила 54 (args_func)


State 313

   44 args_func: '[' . type VAR
   45          | '[' . type VAR DECLARE expr
   46          | '[' . type VAR DECLARE vector
   47          | '[' . type VAR DECLARE matrix
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    type  переход в состояние 320


State 314

   48 args_func: args_func . ',' type VAR
   49          | args_func . ',' type VAR DECLARE expr
   50          | args_func . ',' type VAR DECLARE vector
   51          | args_func . ',' type VAR DECLARE matrix
   52          | args_func . ']'
   53          | args_func . error
   55 function_head: '[' return_func ']' DECLARE FUNC VAR '(' args_func . ')'

    error  сдвиг, и переход в состояние 321
    ','    сдвиг, и переход в состояние 322
    ')'    сдвиг, и переход в состояние 323
    ']'    сдвиг, и переход в состояние 324


State 315

   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr
  104 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 114
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    $default  вывод с использованием правила 104 (vmdeclaration)


State 316

   75 matrix: matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr
  109 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112

    $default  вывод с использованием правила 109 (vmdeclaration)


State 317

   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr
  107 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 114
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    $default  вывод с использованием правила 107 (vmdeclaration)


State 318

   75 matrix: matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr
  108 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112

    $default  вывод с использованием правила 108 (vmdeclaration)


State 319

   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr
  106 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 114
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    $default  вывод с использованием правила 106 (vmdeclaration)


State 320

   44 args_func: '[' type . VAR
   45          | '[' type . VAR DECLARE expr
   46          | '[' type . VAR DECLARE vector
   47          | '[' type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 325


State 321

   53 args_func: args_func error .

    $default  вывод с использованием правила 53 (args_func)


State 322

   48 args_func: args_func ',' . type VAR
   49          | args_func ',' . type VAR DECLARE expr
   50          | args_func ',' . type VAR DECLARE vector
   51          | args_func ',' . type VAR DECLARE matrix
  137 type: . INT
  138     | . CINT
  139     | . VINT
  140     | . MINT
  141     | . CVINT
  142     | . CMINT
  143     | . BOOLEAN
  144     | . CBOOLEAN
  145     | . VBOOLEAN
  146     | . MBOOLEAN
  147     | . CVBOOLEAN
  148     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    type  переход в состояние 326


State 323

   55 function_head: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' .

    $default  вывод с использованием правила 55 (function_head)


State 324

   52 args_func: args_func ']' .

    $default  вывод с использованием правила 52 (args_func)


State 325

   44 args_func: '[' type VAR .  [error, ',', ')', ']']
   45          | '[' type VAR . DECLARE expr
   46          | '[' type VAR . DECLARE vector
   47          | '[' type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 327

    $default  вывод с использованием правила 44 (args_func)


State 326

   48 args_func: args_func ',' type . VAR
   49          | args_func ',' type . VAR DECLARE expr
   50          | args_func ',' type . VAR DECLARE vector
   51          | args_func ',' type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 328


State 327

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   45 args_func: '[' type VAR DECLARE . expr
   46          | '[' type VAR DECLARE . vector
   47          | '[' type VAR DECLARE . matrix
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 329
    vector     переход в состояние 330
    expr       переход в состояние 331
    const      переход в состояние 58


State 328

   48 args_func: args_func ',' type VAR .  [error, ',', ')', ']']
   49          | args_func ',' type VAR . DECLARE expr
   50          | args_func ',' type VAR . DECLARE vector
   51          | args_func ',' type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 332

    $default  вывод с использованием правила 48 (args_func)


State 329

   47 args_func: '[' type VAR DECLARE matrix .  [error, ',', ')', ']']
   75 matrix: matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112

    $default  вывод с использованием правила 47 (args_func)


State 330

   46 args_func: '[' type VAR DECLARE vector .  [error, ',', ')', ']']
   80 matrix: vector . '\''
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 114
    '\''        сдвиг, и переход в состояние 115
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    $default  вывод с использованием правила 46 (args_func)


State 331

   45 args_func: '[' type VAR DECLARE expr .  [error, ',', ')', ']']
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 45 (args_func)


State 332

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   49 args_func: args_func ',' type VAR DECLARE . expr
   50          | args_func ',' type VAR DECLARE . vector
   51          | args_func ',' type VAR DECLARE . matrix
   70 matrix: . '{' listexprs '}'
   71       | . MVARIABLE '(' vector ',' '[' ']' ')'
   72       | . MVARIABLE '(' '[' ']' ',' vector ')'
   73       | . MVARIABLE '(' matrix ')'
   74       | . MVARIABLE
   75       | . matrix '*' matrix
   76       | . matrix ELEMMULT matrix
   77       | . matrix '\''
   78       | . matrix RIGHTSHIFT
   79       | . matrix LEFTSHIFT
   80       | . vector '\''
   81       | . matrix ELEMMULT vector
   82       | . matrix ELEMMULT expr
   83       | . error matrix
   84       | . error vector
   85       | . error expr
   89 vector: . '{' exprs '}'
   90       | . VVARIABLE '(' vector ',' '[' ']' ')'
   91       | . MVARIABLE '(' expr ',' '[' ']' ')'
   92       | . MVARIABLE '(' '[' ']' ',' expr ')'
   93       | . VVARIABLE
   94       | . vector ELEMMULT vector
   95       | . vector RIGHTSHIFT
   96       | . vector LEFTSHIFT
   97       | . vector ELEMMULT expr
   98       | . error vector
   99       | . error expr
  120 expr: . const
  121     | . robotexit
  122     | . robotmove
  123     | . robotwall
  124     | . VARIABLE
  125     | . '-' expr
  126     | . expr '+' expr
  127     | . expr '-' expr
  128     | . expr '/' expr
  129     | . expr '<' expr
  130     | . expr '>' expr
  131     | . '!' expr
  132     | . expr CONJUNCTION expr
  133     | . '(' expr ')'
  134     | . VVARIABLE '(' expr ')'
  135     | . MVARIABLE '(' expr ',' expr ')'
  136     | . error expr
  149 const: . INTEGER
  150      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 333
    vector     переход в состояние 334
    expr       переход в состояние 335
    const      переход в состояние 58


State 333

   51 args_func: args_func ',' type VAR DECLARE matrix .  [error, ',', ')', ']']
   75 matrix: matrix . '*' matrix
   76       | matrix . ELEMMULT matrix
   77       | matrix . '\''
   78       | matrix . RIGHTSHIFT
   79       | matrix . LEFTSHIFT
   81       | matrix . ELEMMULT vector
   82       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 108
    '\''        сдвиг, и переход в состояние 109
    LEFTSHIFT   сдвиг, и переход в состояние 110
    RIGHTSHIFT  сдвиг, и переход в состояние 111
    '*'         сдвиг, и переход в состояние 112

    $default  вывод с использованием правила 51 (args_func)


State 334

   50 args_func: args_func ',' type VAR DECLARE vector .  [error, ',', ')', ']']
   80 matrix: vector . '\''
   94 vector: vector . ELEMMULT vector
   95       | vector . RIGHTSHIFT
   96       | vector . LEFTSHIFT
   97       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 114
    '\''        сдвиг, и переход в состояние 115
    LEFTSHIFT   сдвиг, и переход в состояние 116
    RIGHTSHIFT  сдвиг, и переход в состояние 117

    $default  вывод с использованием правила 50 (args_func)


State 335

   49 args_func: args_func ',' type VAR DECLARE expr .  [error, ',', ')', ']']
  126 expr: expr . '+' expr
  127     | expr . '-' expr
  128     | expr . '/' expr
  129     | expr . '<' expr
  130     | expr . '>' expr
  132     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 123
    '<'          сдвиг, и переход в состояние 124
    '>'          сдвиг, и переход в состояние 125
    '+'          сдвиг, и переход в состояние 126
    '-'          сдвиг, и переход в состояние 127
    '/'          сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 49 (args_func)
