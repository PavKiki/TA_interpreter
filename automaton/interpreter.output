Терминалы не используются в грамматике

   END
   ER


Состояние 4 конфликты: 15 сдвига/вывода, 34 вывода/вывода
Состояние 37 конфликты: 33 сдвига/вывода
Состояние 66 конфликты: 5 сдвига/вывода
Состояние 67 конфликты: 4 сдвига/вывода, 11 вывода/вывода
Состояние 68 конфликты: 6 сдвига/вывода, 22 вывода/вывода
Состояние 84 конфликты: 1 сдвига/вывода
Состояние 85 конфликты: 1 сдвига/вывода
Состояние 86 конфликты: 16 сдвига/вывода
Состояние 98 конфликты: 16 сдвига/вывода
Состояние 131 конфликты: 1 сдвига/вывода
Состояние 156 конфликты: 6 сдвига/вывода
Состояние 169 конфликты: 3 сдвига/вывода
Состояние 170 конфликты: 6 сдвига/вывода, 12 вывода/вывода
Состояние 180 конфликты: 5 сдвига/вывода
Состояние 181 конфликты: 4 сдвига/вывода
Состояние 183 конфликты: 4 сдвига/вывода
Состояние 184 конфликты: 3 сдвига/вывода
Состояние 186 конфликты: 6 сдвига/вывода
Состояние 187 конфликты: 1 сдвига/вывода
Состояние 188 конфликты: 1 сдвига/вывода
Состояние 189 конфликты: 1 сдвига/вывода
Состояние 190 конфликты: 1 сдвига/вывода
Состояние 191 конфликты: 1 сдвига/вывода
Состояние 207 конфликты: 4 вывода/вывода


Грамматика

    0 $accept: program $end

    1 program: func

    2 func: func stmts
    3     | func error
    4     | %empty

    5 stmts: stmt
    6      | stmts stmt
    7      | stmts error
    8      | error

    9 stmt: NEWLINE
   10     | expr NEWLINE
   11     | vector NEWLINE
   12     | matrix NEWLINE
   13     | print NEWLINE
   14     | vmdeclaration NEWLINE
   15     | declaration NEWLINE
   16     | assignment NEWLINE
   17     | iff NEWLINE
   18     | forr NEWLINE
   19     | function NEWLINE
   20     | callfunction NEWLINE
   21     | robotactions NEWLINE
   22     | '(' stmts ')'
   23     | error NEWLINE

   24 robotactions: robotright
   25             | robotleft

   26 robotmove: MOVE '(' expr ')'

   27 robotright: RIGHT

   28 robotleft: LEFT

   29 robotwall: WALL

   30 robotexit: ROBEX

   31 iff: IF expr NEWLINE BEGIF stmts ENDIF
   32    | IF error ENDIF

   33 forr: FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   34     | FORR error ENDFOR

   35 return_func: type VAR
   36            | return_func ',' type VAR
   37            | return_func error

   38 args_func: '[' type VAR ']'
   39          | args_func ',' '[' type VAR ']'
   40          | args_func error
   41          | error

   42 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   43         | error E

   44 callfunc_args: expr
   45              | vector
   46              | matrix
   47              | callfunc_args ',' expr
   48              | callfunc_args ',' vector
   49              | callfunc_args ',' matrix
   50              | callfunc_args error
   51              | error

   52 callfunction: FVARIABLE '[' callfunc_args ']'
   53             | error '[' callfunc_args ']'

   54 matrix: '{' listexprs '}'
   55       | MVARIABLE '(' vector ',' '[' ']' ')'
   56       | MVARIABLE '(' '[' ']' ',' vector ')'
   57       | MVARIABLE '(' matrix ')'
   58       | MVARIABLE
   59       | matrix '*' matrix
   60       | matrix ELEMMULT matrix
   61       | matrix '\''
   62       | matrix RIGHTSHIFT
   63       | matrix LEFTSHIFT
   64       | vector '\''
   65       | matrix ELEMMULT vector
   66       | matrix ELEMMULT expr
   67       | error matrix
   68       | error vector
   69       | error expr

   70 listexprs: vector ',' vector
   71          | listexprs ',' vector
   72          | listexprs error

   73 vector: '{' exprs '}'
   74       | VVARIABLE '(' vector ',' '[' ']' ')'
   75       | MVARIABLE '(' expr ',' '[' ']' ')'
   76       | MVARIABLE '(' '[' ']' ',' expr ')'
   77       | VVARIABLE
   78       | vector ELEMMULT vector
   79       | vector RIGHTSHIFT
   80       | vector LEFTSHIFT
   81       | vector ELEMMULT expr
   82       | error vector
   83       | error expr

   84 exprs: expr ',' expr
   85      | exprs ',' expr
   86      | exprs error

   87 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr
   88              | VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   89              | MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   90              | MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   91              | MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   92              | MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   93              | MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   94              | MVARIABLE '(' matrix ')' ASSIGN matrix

   95 declaration: type VAR DECLARE expr
   96            | type VAR DECLARE vector
   97            | type VAR DECLARE matrix

   98 assignment: VARIABLE ASSIGN expr
   99           | VVARIABLE ASSIGN vector
  100           | MVARIABLE ASSIGN matrix

  101 print: PRINT '(' expr ')'
  102      | PRINT '(' VVARIABLE ')'
  103      | PRINT '(' MVARIABLE ')'

  104 expr: const
  105     | robotexit
  106     | robotmove
  107     | robotwall
  108     | VARIABLE
  109     | '-' expr
  110     | expr '+' expr
  111     | expr '-' expr
  112     | expr '/' expr
  113     | expr '<' expr
  114     | expr '>' expr
  115     | '!' expr
  116     | expr CONJUNCTION expr
  117     | '(' expr ')'
  118     | VVARIABLE '(' expr ')'
  119     | MVARIABLE '(' expr ',' expr ')'
  120     | error expr

  121 type: INT
  122     | CINT
  123     | VINT
  124     | MINT
  125     | CVINT
  126     | CMINT
  127     | BOOLEAN
  128     | CBOOLEAN
  129     | VBOOLEAN
  130     | MBOOLEAN
  131     | CVBOOLEAN
  132     | CMBOOLEAN

  133 const: INTEGER
  134      | BOOL


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'!' (33) 115
'\'' (39) 61 64
'(' (40) 22 26 42 55 56 57 74 75 76 87 88 89 90 91 92 93 94 101 102
    103 117 118 119
')' (41) 22 26 42 55 56 57 74 75 76 87 88 89 90 91 92 93 94 101 102
    103 117 118 119
'*' (42) 59
'+' (43) 110
',' (44) 36 39 47 48 49 55 56 70 71 74 75 76 84 85 88 89 90 91 92 93
    119
'-' (45) 109 111
'/' (47) 112
'<' (60) 113
'>' (62) 114
'[' (91) 38 39 42 52 53 55 56 74 75 76 88 90 91 92 93
']' (93) 38 39 42 52 53 55 56 74 75 76 88 90 91 92 93
'{' (123) 54 73
'}' (125) 54 73
error (256) 3 7 8 23 32 34 37 40 41 43 50 51 53 67 68 69 72 82 83 86
    120
END (258)
BOOL <boolPtr> (259) 134
INTEGER <intPtr> (260) 133
VARIABLE <varName> (261) 98 108
VVARIABLE <varName> (262) 74 77 87 88 99 102 118
MVARIABLE <varName> (263) 55 56 57 58 75 76 89 90 91 92 93 94 100 103
    119
VAR <varName> (264) 35 36 38 39 42 95 96 97
FVARIABLE <varName> (265) 52
CINT <vtype> (266) 122
VINT <vtype> (267) 123
MINT <vtype> (268) 124
INT <vtype> (269) 121
CVINT <vtype> (270) 125
CMINT <vtype> (271) 126
BOOLEAN <vtype> (272) 127
CBOOLEAN <vtype> (273) 128
VBOOLEAN <vtype> (274) 129
MBOOLEAN <vtype> (275) 130
CVBOOLEAN <vtype> (276) 131
CMBOOLEAN <vtype> (277) 132
NEWLINE (278) 9 10 11 12 13 14 15 16 17 18 19 20 21 23 31 33 42
PRINT (279) 101 102 103
CONJUNCTION (280) 116
ELEMMULT (281) 60 65 66 78 81
LEFTSHIFT (282) 63 80
RIGHTSHIFT (283) 62 79
IF (284) 31 32
FORR (285) 33 34
BEGIF (286) 31
ENDIF (287) 31 32
BEGFOR (288) 33
ENDFOR (289) 33 34
ER (290)
DOUBLEDOT (291) 33
B (292) 42
E (293) 42 43
FUNC (294) 42
MOVE (295) 26
RIGHT (296) 27
LEFT (297) 28
ROBEX (298) 30
WALL (299) 29
ASSIGN (300) 87 88 89 90 91 92 93 94 98 99 100
DECLARE (301) 42 95 96 97
UMINUS (302)


Нетерминальные символы с правилами, в которых они появляются

$accept (63)
    налево: 0
program (64)
    налево: 1, направо: 0
func (65)
    налево: 2 3 4, направо: 1 2 3
stmts <ptr> (66)
    налево: 5 6 7 8, направо: 2 6 7 22 31 33 42
stmt <ptr> (67)
    налево: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23, направо:
    5 6
robotactions <ptr> (68)
    налево: 24 25, направо: 21
robotmove <ptr> (69)
    налево: 26, направо: 106
robotright <ptr> (70)
    налево: 27, направо: 24
robotleft <ptr> (71)
    налево: 28, направо: 25
robotwall <ptr> (72)
    налево: 29, направо: 107
robotexit <ptr> (73)
    налево: 30, направо: 105
iff <ptr> (74)
    налево: 31 32, направо: 17
forr <ptr> (75)
    налево: 33 34, направо: 18
return_func <ptr> (76)
    налево: 35 36 37, направо: 36 37 42
args_func <ptr> (77)
    налево: 38 39 40 41, направо: 39 40 42
function <ptr> (78)
    налево: 42 43, направо: 19
callfunc_args <ptr> (79)
    налево: 44 45 46 47 48 49 50 51, направо: 47 48 49
    50 52 53
callfunction <ptr> (80)
    налево: 52 53, направо: 20
matrix <ptr> (81)
    налево: 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69,
    направо: 12 46 49 57 59 60 61 62 63 65 66 67 92 93 94 97
    100
listexprs <ptr> (82)
    налево: 70 71 72, направо: 54 71 72
vector <ptr> (83)
    налево: 73 74 75 76 77 78 79 80 81 82 83, направо:
    11 45 48 55 56 64 65 68 70 71 74 78 79 80 81 82 88 90 91 92 93
    96 99
exprs <ptr> (84)
    налево: 84 85 86, направо: 73 85 86
vmdeclaration <ptr> (85)
    налево: 87 88 89 90 91 92 93 94, направо: 14
declaration <varOpPtr> (86)
    налево: 95 96 97, направо: 15 33
assignment <varOpPtr> (87)
    налево: 98 99 100, направо: 16
print <ptr> (88)
    налево: 101 102 103, направо: 13
expr <ptr> (89)
    налево: 104 105 106 107 108 109 110 111 112 113 114 115 116
    117 118 119 120, направо: 10 26 31 33 44 47 66 69 75 76
    81 83 84 85 87 89 90 91 95 98 101 109 110 111 112 113 114 115 116
    117 118 119 120
type <vtype> (90)
    налево: 121 122 123 124 125 126 127 128 129 130 131 132,
    направо: 35 36 38 39 95 96 97
const <ptr> (91)
    налево: 133 134, направо: 104


State 0

    0 $accept: . program $end
    1 program: . func
    2 func: . func stmts
    3     | . func error
    4     | . %empty

    $default  вывод с использованием правила 4 (func)

    program  переход в состояние 1
    func     переход в состояние 2


State 1

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 3


State 2

    1 program: func .  [$end]
    2 func: func . stmts
    3     | func . error
    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   32    | . IF error ENDIF
   33 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   34     | . FORR error ENDFOR
   42 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   43         | . error E
   52 callfunction: . FVARIABLE '[' callfunc_args ']'
   53             | . error '[' callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   87 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   88              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   89              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   90              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   91              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   92              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   93              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   94              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   95 declaration: . type VAR DECLARE expr
   96            | . type VAR DECLARE vector
   97            | . type VAR DECLARE matrix
   98 assignment: . VARIABLE ASSIGN expr
   99           | . VVARIABLE ASSIGN vector
  100           | . MVARIABLE ASSIGN matrix
  101 print: . PRINT '(' expr ')'
  102      | . PRINT '(' VVARIABLE ')'
  103      | . PRINT '(' MVARIABLE ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 4
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    $end  вывод с использованием правила 1 (program)

    stmts          переход в состояние 37
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 3

    0 $accept: program $end .

    $default  принять


State 4

    3 func: func error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    8 stmts: error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   43 function: error . E
   53 callfunction: error . '[' callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   67       | error . matrix
   68       | . error vector
   68       | error . vector
   69       | . error expr
   69       | error . expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   82       | error . vector
   83       | . error expr
   83       | error . expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  120     | error . expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    NEWLINE    сдвиг, и переход в состояние 62
    E          сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 36

    $end       вывод с использованием правила 3 (func)
    $end       [вывод с использованием правила 8 (stmts)]
    error      [вывод с использованием правила 3 (func)]
    error      [вывод с использованием правила 8 (stmts)]
    BOOL       [вывод с использованием правила 3 (func)]
    BOOL       [вывод с использованием правила 8 (stmts)]
    INTEGER    [вывод с использованием правила 3 (func)]
    INTEGER    [вывод с использованием правила 8 (stmts)]
    VARIABLE   [вывод с использованием правила 3 (func)]
    VARIABLE   [вывод с использованием правила 8 (stmts)]
    VVARIABLE  [вывод с использованием правила 3 (func)]
    VVARIABLE  [вывод с использованием правила 8 (stmts)]
    MVARIABLE  [вывод с использованием правила 3 (func)]
    MVARIABLE  [вывод с использованием правила 8 (stmts)]
    FVARIABLE  вывод с использованием правила 3 (func)
    FVARIABLE  [вывод с использованием правила 8 (stmts)]
    CINT       вывод с использованием правила 3 (func)
    CINT       [вывод с использованием правила 8 (stmts)]
    VINT       вывод с использованием правила 3 (func)
    VINT       [вывод с использованием правила 8 (stmts)]
    MINT       вывод с использованием правила 3 (func)
    MINT       [вывод с использованием правила 8 (stmts)]
    INT        вывод с использованием правила 3 (func)
    INT        [вывод с использованием правила 8 (stmts)]
    CVINT      вывод с использованием правила 3 (func)
    CVINT      [вывод с использованием правила 8 (stmts)]
    CMINT      вывод с использованием правила 3 (func)
    CMINT      [вывод с использованием правила 8 (stmts)]
    BOOLEAN    вывод с использованием правила 3 (func)
    BOOLEAN    [вывод с использованием правила 8 (stmts)]
    CBOOLEAN   вывод с использованием правила 3 (func)
    CBOOLEAN   [вывод с использованием правила 8 (stmts)]
    VBOOLEAN   вывод с использованием правила 3 (func)
    VBOOLEAN   [вывод с использованием правила 8 (stmts)]
    MBOOLEAN   вывод с использованием правила 3 (func)
    MBOOLEAN   [вывод с использованием правила 8 (stmts)]
    CVBOOLEAN  вывод с использованием правила 3 (func)
    CVBOOLEAN  [вывод с использованием правила 8 (stmts)]
    CMBOOLEAN  вывод с использованием правила 3 (func)
    CMBOOLEAN  [вывод с использованием правила 8 (stmts)]
    NEWLINE    [вывод с использованием правила 3 (func)]
    NEWLINE    [вывод с использованием правила 8 (stmts)]
    PRINT      вывод с использованием правила 3 (func)
    PRINT      [вывод с использованием правила 8 (stmts)]
    IF         вывод с использованием правила 3 (func)
    IF         [вывод с использованием правила 8 (stmts)]
    FORR       вывод с использованием правила 3 (func)
    FORR       [вывод с использованием правила 8 (stmts)]
    MOVE       [вывод с использованием правила 3 (func)]
    MOVE       [вывод с использованием правила 8 (stmts)]
    RIGHT      вывод с использованием правила 3 (func)
    RIGHT      [вывод с использованием правила 8 (stmts)]
    LEFT       вывод с использованием правила 3 (func)
    LEFT       [вывод с использованием правила 8 (stmts)]
    ROBEX      [вывод с использованием правила 3 (func)]
    ROBEX      [вывод с использованием правила 8 (stmts)]
    WALL       [вывод с использованием правила 3 (func)]
    WALL       [вывод с использованием правила 8 (stmts)]
    '-'        [вывод с использованием правила 3 (func)]
    '-'        [вывод с использованием правила 8 (stmts)]
    '!'        [вывод с использованием правила 3 (func)]
    '!'        [вывод с использованием правила 8 (stmts)]
    '('        [вывод с использованием правила 3 (func)]
    '('        [вывод с использованием правила 8 (stmts)]
    '['        [вывод с использованием правила 3 (func)]
    '['        [вывод с использованием правила 8 (stmts)]
    '{'        [вывод с использованием правила 3 (func)]
    '{'        [вывод с использованием правила 8 (stmts)]

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 5

  134 const: BOOL .

    $default  вывод с использованием правила 134 (const)


State 6

  133 const: INTEGER .

    $default  вывод с использованием правила 133 (const)


State 7

   98 assignment: VARIABLE . ASSIGN expr
  108 expr: VARIABLE .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 69

    $default  вывод с использованием правила 108 (expr)


State 8

   74 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   77       | VVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   87 vmdeclaration: VVARIABLE . '(' expr ')' ASSIGN expr
   88              | VVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN vector
   99 assignment: VVARIABLE . ASSIGN vector
  118 expr: VVARIABLE . '(' expr ')'

    ASSIGN  сдвиг, и переход в состояние 70
    '('     сдвиг, и переход в состояние 71

    $default  вывод с использованием правила 77 (vector)


State 9

   55 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   56       | MVARIABLE . '(' '[' ']' ',' vector ')'
   57       | MVARIABLE . '(' matrix ')'
   58       | MVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   75 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   76       | MVARIABLE . '(' '[' ']' ',' expr ')'
   89 vmdeclaration: MVARIABLE . '(' expr ',' expr ')' ASSIGN expr
   90              | MVARIABLE . '(' expr ',' '[' ']' ')' ASSIGN vector
   91              | MVARIABLE . '(' '[' ']' ',' expr ')' ASSIGN vector
   92              | MVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN matrix
   93              | MVARIABLE . '(' '[' ']' ',' vector ')' ASSIGN matrix
   94              | MVARIABLE . '(' matrix ')' ASSIGN matrix
  100 assignment: MVARIABLE . ASSIGN matrix
  119 expr: MVARIABLE . '(' expr ',' expr ')'

    ASSIGN  сдвиг, и переход в состояние 72
    '('     сдвиг, и переход в состояние 73

    $default  вывод с использованием правила 58 (matrix)


State 10

   52 callfunction: FVARIABLE . '[' callfunc_args ']'

    '['  сдвиг, и переход в состояние 74


State 11

  122 type: CINT .

    $default  вывод с использованием правила 122 (type)


State 12

  123 type: VINT .

    $default  вывод с использованием правила 123 (type)


State 13

  124 type: MINT .

    $default  вывод с использованием правила 124 (type)


State 14

  121 type: INT .

    $default  вывод с использованием правила 121 (type)


State 15

  125 type: CVINT .

    $default  вывод с использованием правила 125 (type)


State 16

  126 type: CMINT .

    $default  вывод с использованием правила 126 (type)


State 17

  127 type: BOOLEAN .

    $default  вывод с использованием правила 127 (type)


State 18

  128 type: CBOOLEAN .

    $default  вывод с использованием правила 128 (type)


State 19

  129 type: VBOOLEAN .

    $default  вывод с использованием правила 129 (type)


State 20

  130 type: MBOOLEAN .

    $default  вывод с использованием правила 130 (type)


State 21

  131 type: CVBOOLEAN .

    $default  вывод с использованием правила 131 (type)


State 22

  132 type: CMBOOLEAN .

    $default  вывод с использованием правила 132 (type)


State 23

    9 stmt: NEWLINE .

    $default  вывод с использованием правила 9 (stmt)


State 24

  101 print: PRINT . '(' expr ')'
  102      | PRINT . '(' VVARIABLE ')'
  103      | PRINT . '(' MVARIABLE ')'

    '('  сдвиг, и переход в состояние 75


State 25

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: IF . expr NEWLINE BEGIF stmts ENDIF
   32    | IF . error ENDIF
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 79
    const      переход в состояние 57


State 26

   33 forr: FORR . declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   34     | FORR . error ENDFOR
   95 declaration: . type VAR DECLARE expr
   96            | . type VAR DECLARE vector
   97            | . type VAR DECLARE matrix
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN

    error      сдвиг, и переход в состояние 80
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    declaration  переход в состояние 81
    type         переход в состояние 56


State 27

   26 robotmove: MOVE . '(' expr ')'

    '('  сдвиг, и переход в состояние 82


State 28

   27 robotright: RIGHT .

    $default  вывод с использованием правила 27 (robotright)


State 29

   28 robotleft: LEFT .

    $default  вывод с использованием правила 28 (robotleft)


State 30

   30 robotexit: ROBEX .

    $default  вывод с использованием правила 30 (robotexit)


State 31

   29 robotwall: WALL .

    $default  вывод с использованием правила 29 (robotwall)


State 32

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  109     | '-' . expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 84
    const      переход в состояние 57


State 33

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  115     | '!' . expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 85
    const      переход в состояние 57


State 34

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   22     | '(' . stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   32    | . IF error ENDIF
   33 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   34     | . FORR error ENDFOR
   42 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   43         | . error E
   52 callfunction: . FVARIABLE '[' callfunc_args ']'
   53             | . error '[' callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   87 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   88              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   89              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   90              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   91              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   92              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   93              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   94              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   95 declaration: . type VAR DECLARE expr
   96            | . type VAR DECLARE vector
   97            | . type VAR DECLARE matrix
   98 assignment: . VARIABLE ASSIGN expr
   99           | . VVARIABLE ASSIGN vector
  100           | . MVARIABLE ASSIGN matrix
  101 print: . PRINT '(' expr ')'
  102      | . PRINT '(' VVARIABLE ')'
  103      | . PRINT '(' MVARIABLE ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  117     | '(' . expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 86
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 87
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 88
    type           переход в состояние 56
    const          переход в состояние 57


State 35

   35 return_func: . type VAR
   36            | . return_func ',' type VAR
   37            | . return_func error
   42 function: '[' . return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    return_func  переход в состояние 89
    type         переход в состояние 90


State 36

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   54 matrix: '{' . listexprs '}'
   70 listexprs: . vector ',' vector
   71          | . listexprs ',' vector
   72          | . listexprs error
   73 vector: . '{' exprs '}'
   73       | '{' . exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   84 exprs: . expr ',' expr
   85      | . exprs ',' expr
   86      | . exprs error
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    listexprs  переход в состояние 94
    vector     переход в состояние 95
    exprs      переход в состояние 96
    expr       переход в состояние 97
    const      переход в состояние 57


State 37

    2 func: func stmts .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   32    | . IF error ENDIF
   33 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   34     | . FORR error ENDFOR
   42 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   43         | . error E
   52 callfunction: . FVARIABLE '[' callfunc_args ']'
   53             | . error '[' callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   87 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   88              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   89              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   90              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   91              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   92              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   93              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   94              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   95 declaration: . type VAR DECLARE expr
   96            | . type VAR DECLARE vector
   97            | . type VAR DECLARE matrix
   98 assignment: . VARIABLE ASSIGN expr
   99           | . VVARIABLE ASSIGN vector
  100           | . MVARIABLE ASSIGN matrix
  101 print: . PRINT '(' expr ')'
  102      | . PRINT '(' VVARIABLE ')'
  103      | . PRINT '(' MVARIABLE ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 98
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    $end       вывод с использованием правила 2 (func)
    error      [вывод с использованием правила 2 (func)]
    BOOL       [вывод с использованием правила 2 (func)]
    INTEGER    [вывод с использованием правила 2 (func)]
    VARIABLE   [вывод с использованием правила 2 (func)]
    VVARIABLE  [вывод с использованием правила 2 (func)]
    MVARIABLE  [вывод с использованием правила 2 (func)]
    FVARIABLE  [вывод с использованием правила 2 (func)]
    CINT       [вывод с использованием правила 2 (func)]
    VINT       [вывод с использованием правила 2 (func)]
    MINT       [вывод с использованием правила 2 (func)]
    INT        [вывод с использованием правила 2 (func)]
    CVINT      [вывод с использованием правила 2 (func)]
    CMINT      [вывод с использованием правила 2 (func)]
    BOOLEAN    [вывод с использованием правила 2 (func)]
    CBOOLEAN   [вывод с использованием правила 2 (func)]
    VBOOLEAN   [вывод с использованием правила 2 (func)]
    MBOOLEAN   [вывод с использованием правила 2 (func)]
    CVBOOLEAN  [вывод с использованием правила 2 (func)]
    CMBOOLEAN  [вывод с использованием правила 2 (func)]
    NEWLINE    [вывод с использованием правила 2 (func)]
    PRINT      [вывод с использованием правила 2 (func)]
    IF         [вывод с использованием правила 2 (func)]
    FORR       [вывод с использованием правила 2 (func)]
    MOVE       [вывод с использованием правила 2 (func)]
    RIGHT      [вывод с использованием правила 2 (func)]
    LEFT       [вывод с использованием правила 2 (func)]
    ROBEX      [вывод с использованием правила 2 (func)]
    WALL       [вывод с использованием правила 2 (func)]
    '-'        [вывод с использованием правила 2 (func)]
    '!'        [вывод с использованием правила 2 (func)]
    '('        [вывод с использованием правила 2 (func)]
    '['        [вывод с использованием правила 2 (func)]
    '{'        [вывод с использованием правила 2 (func)]

    stmt           переход в состояние 99
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 38

    5 stmts: stmt .

    $default  вывод с использованием правила 5 (stmts)


State 39

   21 stmt: robotactions . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 100


State 40

  106 expr: robotmove .

    $default  вывод с использованием правила 106 (expr)


State 41

   24 robotactions: robotright .

    $default  вывод с использованием правила 24 (robotactions)


State 42

   25 robotactions: robotleft .

    $default  вывод с использованием правила 25 (robotactions)


State 43

  107 expr: robotwall .

    $default  вывод с использованием правила 107 (expr)


State 44

  105 expr: robotexit .

    $default  вывод с использованием правила 105 (expr)


State 45

   17 stmt: iff . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 101


State 46

   18 stmt: forr . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 102


State 47

   19 stmt: function . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 103


State 48

   20 stmt: callfunction . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 104


State 49

   12 stmt: matrix . NEWLINE
   59 matrix: matrix . '*' matrix
   60       | matrix . ELEMMULT matrix
   61       | matrix . '\''
   62       | matrix . RIGHTSHIFT
   63       | matrix . LEFTSHIFT
   65       | matrix . ELEMMULT vector
   66       | matrix . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 105
    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110


State 50

   11 stmt: vector . NEWLINE
   64 matrix: vector . '\''
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 111
    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115


State 51

   14 stmt: vmdeclaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 116


State 52

   15 stmt: declaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 117


State 53

   16 stmt: assignment . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 118


State 54

   13 stmt: print . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 119


State 55

   10 stmt: expr . NEWLINE
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 120
    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 56

   95 declaration: type . VAR DECLARE expr
   96            | type . VAR DECLARE vector
   97            | type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 127


State 57

  104 expr: const .

    $default  вывод с использованием правила 104 (expr)


State 58

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   67       | error . matrix
   68       | . error vector
   68       | error . vector
   69       | . error expr
   69       | error . expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   82       | error . vector
   83       | . error expr
   83       | error . expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  120     | error . expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 59

  108 expr: VARIABLE .

    $default  вывод с использованием правила 108 (expr)


State 60

   74 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   77       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  118 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 77 (vector)


State 61

   55 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   56       | MVARIABLE . '(' '[' ']' ',' vector ')'
   57       | MVARIABLE . '(' matrix ')'
   58       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   75 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   76       | MVARIABLE . '(' '[' ']' ',' expr ')'
  119 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 129

    $default  вывод с использованием правила 58 (matrix)


State 62

   23 stmt: error NEWLINE .

    $default  вывод с использованием правила 23 (stmt)


State 63

   43 function: error E .

    $default  вывод с использованием правила 43 (function)


State 64

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  117     | '(' . expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 130
    const      переход в состояние 57


State 65

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   44 callfunc_args: . expr
   45              | . vector
   46              | . matrix
   47              | . callfunc_args ',' expr
   48              | . callfunc_args ',' vector
   49              | . callfunc_args ',' matrix
   50              | . callfunc_args error
   51              | . error
   53 callfunction: error '[' . callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 131
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove      переход в состояние 40
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    callfunc_args  переход в состояние 132
    matrix         переход в состояние 133
    vector         переход в состояние 134
    expr           переход в состояние 135
    const          переход в состояние 57


State 66

   59 matrix: matrix . '*' matrix
   60       | matrix . ELEMMULT matrix
   61       | matrix . '\''
   62       | matrix . RIGHTSHIFT
   63       | matrix . LEFTSHIFT
   65       | matrix . ELEMMULT vector
   66       | matrix . ELEMMULT expr
   67       | error matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    ELEMMULT    [вывод с использованием правила 67 (matrix)]
    '\''        [вывод с использованием правила 67 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 67 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 67 (matrix)]
    '*'         [вывод с использованием правила 67 (matrix)]
    $default    вывод с использованием правила 67 (matrix)


State 67

   64 matrix: vector . '\''
   68       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr
   82       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    error       вывод с использованием правила 68 (matrix)
    error       [вывод с использованием правила 82 (vector)]
    NEWLINE     вывод с использованием правила 68 (matrix)
    NEWLINE     [вывод с использованием правила 82 (vector)]
    ELEMMULT    [вывод с использованием правила 68 (matrix)]
    ELEMMULT    [вывод с использованием правила 82 (vector)]
    '\''        [вывод с использованием правила 68 (matrix)]
    '\''        [вывод с использованием правила 82 (vector)]
    LEFTSHIFT   [вывод с использованием правила 68 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 82 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 68 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 82 (vector)]
    ','         вывод с использованием правила 68 (matrix)
    ','         [вывод с использованием правила 82 (vector)]
    DOUBLEDOT   вывод с использованием правила 68 (matrix)
    DOUBLEDOT   [вывод с использованием правила 82 (vector)]
    '*'         вывод с использованием правила 68 (matrix)
    '*'         [вывод с использованием правила 82 (vector)]
    ')'         вывод с использованием правила 68 (matrix)
    ')'         [вывод с использованием правила 82 (vector)]
    ']'         вывод с использованием правила 68 (matrix)
    ']'         [вывод с использованием правила 82 (vector)]
    $default    вывод с использованием правила 68 (matrix)


State 68

   69 matrix: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   83 vector: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr
  120     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']']

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    error        вывод с использованием правила 69 (matrix)
    error        [вывод с использованием правила 83 (vector)]
    error        [вывод с использованием правила 120 (expr)]
    NEWLINE      вывод с использованием правила 69 (matrix)
    NEWLINE      [вывод с использованием правила 83 (vector)]
    NEWLINE      [вывод с использованием правила 120 (expr)]
    CONJUNCTION  [вывод с использованием правила 120 (expr)]
    ELEMMULT     вывод с использованием правила 69 (matrix)
    ELEMMULT     [вывод с использованием правила 83 (vector)]
    ELEMMULT     [вывод с использованием правила 120 (expr)]
    '\''         вывод с использованием правила 69 (matrix)
    '\''         [вывод с использованием правила 83 (vector)]
    '\''         [вывод с использованием правила 120 (expr)]
    LEFTSHIFT    вывод с использованием правила 69 (matrix)
    LEFTSHIFT    [вывод с использованием правила 83 (vector)]
    LEFTSHIFT    [вывод с использованием правила 120 (expr)]
    RIGHTSHIFT   вывод с использованием правила 69 (matrix)
    RIGHTSHIFT   [вывод с использованием правила 83 (vector)]
    RIGHTSHIFT   [вывод с использованием правила 120 (expr)]
    ','          вывод с использованием правила 69 (matrix)
    ','          [вывод с использованием правила 83 (vector)]
    ','          [вывод с использованием правила 120 (expr)]
    DOUBLEDOT    вывод с использованием правила 69 (matrix)
    DOUBLEDOT    [вывод с использованием правила 83 (vector)]
    DOUBLEDOT    [вывод с использованием правила 120 (expr)]
    '<'          [вывод с использованием правила 120 (expr)]
    '>'          [вывод с использованием правила 120 (expr)]
    '+'          [вывод с использованием правила 120 (expr)]
    '-'          [вывод с использованием правила 120 (expr)]
    '*'          вывод с использованием правила 69 (matrix)
    '*'          [вывод с использованием правила 83 (vector)]
    '*'          [вывод с использованием правила 120 (expr)]
    '/'          [вывод с использованием правила 120 (expr)]
    ')'          вывод с использованием правила 69 (matrix)
    ')'          [вывод с использованием правила 83 (vector)]
    ')'          [вывод с использованием правила 120 (expr)]
    ']'          вывод с использованием правила 69 (matrix)
    ']'          [вывод с использованием правила 83 (vector)]
    ']'          [вывод с использованием правила 120 (expr)]
    $default     вывод с использованием правила 69 (matrix)


State 69

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   98 assignment: VARIABLE ASSIGN . expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 136
    const      переход в состояние 57


State 70

   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   99 assignment: VVARIABLE ASSIGN . vector

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 140


State 71

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   74       | VVARIABLE '(' . vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   87 vmdeclaration: VVARIABLE '(' . expr ')' ASSIGN expr
   88              | VVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN vector
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  118     | VVARIABLE '(' . expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 141
    expr       переход в состояние 142
    const      переход в состояние 57


State 72

   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
  100 assignment: MVARIABLE ASSIGN . matrix

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 145
    vector  переход в состояние 146


State 73

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   55       | MVARIABLE '(' . vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   56       | MVARIABLE '(' . '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   57       | MVARIABLE '(' . matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   75       | MVARIABLE '(' . expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   76       | MVARIABLE '(' . '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   89 vmdeclaration: MVARIABLE '(' . expr ',' expr ')' ASSIGN expr
   90              | MVARIABLE '(' . expr ',' '[' ']' ')' ASSIGN vector
   91              | MVARIABLE '(' . '[' ']' ',' expr ')' ASSIGN vector
   92              | MVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN matrix
   93              | MVARIABLE '(' . '[' ']' ',' vector ')' ASSIGN matrix
   94              | MVARIABLE '(' . matrix ')' ASSIGN matrix
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  119     | MVARIABLE '(' . expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 147
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 148
    vector     переход в состояние 149
    expr       переход в состояние 150
    const      переход в состояние 57


State 74

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   44 callfunc_args: . expr
   45              | . vector
   46              | . matrix
   47              | . callfunc_args ',' expr
   48              | . callfunc_args ',' vector
   49              | . callfunc_args ',' matrix
   50              | . callfunc_args error
   51              | . error
   52 callfunction: FVARIABLE '[' . callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 131
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove      переход в состояние 40
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    callfunc_args  переход в состояние 151
    matrix         переход в состояние 133
    vector         переход в состояние 134
    expr           переход в состояние 135
    const          переход в состояние 57


State 75

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  101 print: PRINT '(' . expr ')'
  102      | PRINT '(' . VVARIABLE ')'
  103      | PRINT '(' . MVARIABLE ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 152
    MVARIABLE  сдвиг, и переход в состояние 153
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 154
    const      переход в состояние 57


State 76

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   32 iff: IF error . ENDIF
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  120     | error . expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    ENDIF      сдвиг, и переход в состояние 155
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 156
    const      переход в состояние 57


State 77

  118 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 157


State 78

  119 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 158


State 79

   31 iff: IF expr . NEWLINE BEGIF stmts ENDIF
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 159
    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 80

   34 forr: FORR error . ENDFOR

    ENDFOR  сдвиг, и переход в состояние 160


State 81

   33 forr: FORR declaration . DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR

    DOUBLEDOT  сдвиг, и переход в состояние 161


State 82

   26 robotmove: . MOVE '(' expr ')'
   26          | MOVE '(' . expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 162
    const      переход в состояние 57


State 83

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  120     | error . expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 156
    const      переход в состояние 57


State 84

  109 expr: '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  110     | expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 109 (expr)]
    $default     вывод с использованием правила 109 (expr)

    Конфликт между правилом 109 и лексемой '<' разрешен выводом ('<' < UMINUS).
    Конфликт между правилом 109 и лексемой '>' разрешен выводом ('>' < UMINUS).
    Конфликт между правилом 109 и лексемой '+' разрешен выводом ('+' < UMINUS).
    Конфликт между правилом 109 и лексемой '-' разрешен выводом ('-' < UMINUS).
    Конфликт между правилом 109 и лексемой '/' разрешен выводом ('/' < UMINUS).


State 85

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  115     | '!' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 115 (expr)]
    $default     вывод с использованием правила 115 (expr)

    Конфликт между правилом 115 и лексемой '<' разрешен выводом ('<' < '!').
    Конфликт между правилом 115 и лексемой '>' разрешен выводом ('>' < '!').
    Конфликт между правилом 115 и лексемой '+' разрешен выводом ('+' < '!').
    Конфликт между правилом 115 и лексемой '-' разрешен выводом ('-' < '!').
    Конфликт между правилом 115 и лексемой '/' разрешен выводом ('/' < '!').


State 86

    8 stmts: error .  [error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, ENDIF, ENDFOR, E, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', ')', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   43 function: error . E
   53 callfunction: error . '[' callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   67       | error . matrix
   68       | . error vector
   68       | error . vector
   69       | . error expr
   69       | error . expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   82       | error . vector
   83       | . error expr
   83       | error . expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  120     | error . expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    NEWLINE    сдвиг, и переход в состояние 62
    E          сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 36

    error      [вывод с использованием правила 8 (stmts)]
    BOOL       [вывод с использованием правила 8 (stmts)]
    INTEGER    [вывод с использованием правила 8 (stmts)]
    VARIABLE   [вывод с использованием правила 8 (stmts)]
    VVARIABLE  [вывод с использованием правила 8 (stmts)]
    MVARIABLE  [вывод с использованием правила 8 (stmts)]
    FVARIABLE  вывод с использованием правила 8 (stmts)
    CINT       вывод с использованием правила 8 (stmts)
    VINT       вывод с использованием правила 8 (stmts)
    MINT       вывод с использованием правила 8 (stmts)
    INT        вывод с использованием правила 8 (stmts)
    CVINT      вывод с использованием правила 8 (stmts)
    CMINT      вывод с использованием правила 8 (stmts)
    BOOLEAN    вывод с использованием правила 8 (stmts)
    CBOOLEAN   вывод с использованием правила 8 (stmts)
    VBOOLEAN   вывод с использованием правила 8 (stmts)
    MBOOLEAN   вывод с использованием правила 8 (stmts)
    CVBOOLEAN  вывод с использованием правила 8 (stmts)
    CMBOOLEAN  вывод с использованием правила 8 (stmts)
    NEWLINE    [вывод с использованием правила 8 (stmts)]
    PRINT      вывод с использованием правила 8 (stmts)
    IF         вывод с использованием правила 8 (stmts)
    FORR       вывод с использованием правила 8 (stmts)
    ENDIF      вывод с использованием правила 8 (stmts)
    ENDFOR     вывод с использованием правила 8 (stmts)
    E          [вывод с использованием правила 8 (stmts)]
    MOVE       [вывод с использованием правила 8 (stmts)]
    RIGHT      вывод с использованием правила 8 (stmts)
    LEFT       вывод с использованием правила 8 (stmts)
    ROBEX      [вывод с использованием правила 8 (stmts)]
    WALL       [вывод с использованием правила 8 (stmts)]
    '-'        [вывод с использованием правила 8 (stmts)]
    '!'        [вывод с использованием правила 8 (stmts)]
    '('        [вывод с использованием правила 8 (stmts)]
    ')'        вывод с использованием правила 8 (stmts)
    '['        [вывод с использованием правила 8 (stmts)]
    '{'        [вывод с использованием правила 8 (stmts)]

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 87

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   22     | '(' stmts . ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   32    | . IF error ENDIF
   33 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   34     | . FORR error ENDFOR
   42 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   43         | . error E
   52 callfunction: . FVARIABLE '[' callfunc_args ']'
   53             | . error '[' callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   87 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   88              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   89              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   90              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   91              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   92              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   93              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   94              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   95 declaration: . type VAR DECLARE expr
   96            | . type VAR DECLARE vector
   97            | . type VAR DECLARE matrix
   98 assignment: . VARIABLE ASSIGN expr
   99           | . VVARIABLE ASSIGN vector
  100           | . MVARIABLE ASSIGN matrix
  101 print: . PRINT '(' expr ')'
  102      | . PRINT '(' VVARIABLE ')'
  103      | . PRINT '(' MVARIABLE ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 98
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    ')'        сдвиг, и переход в состояние 163
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 99
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 88

   10 stmt: expr . NEWLINE
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr
  117     | '(' expr . ')'

    NEWLINE      сдвиг, и переход в состояние 120
    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 164


State 89

   36 return_func: return_func . ',' type VAR
   37            | return_func . error
   42 function: '[' return_func . ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E

    error  сдвиг, и переход в состояние 165
    ','    сдвиг, и переход в состояние 166
    ']'    сдвиг, и переход в состояние 167


State 90

   35 return_func: type . VAR

    VAR  сдвиг, и переход в состояние 168


State 91

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   82       | error . vector
   83       | . error expr
   83       | error . expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  120     | error . expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 169
    expr       переход в состояние 170
    const      переход в состояние 57


State 92

   75 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   76       | MVARIABLE . '(' '[' ']' ',' expr ')'
  119 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 171


State 93

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   73 vector: '{' . exprs '}'
   84 exprs: . expr ',' expr
   85      | . exprs ',' expr
   86      | . exprs error
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    exprs      переход в состояние 96
    expr       переход в состояние 97
    const      переход в состояние 57


State 94

   54 matrix: '{' listexprs . '}'
   71 listexprs: listexprs . ',' vector
   72          | listexprs . error

    error  сдвиг, и переход в состояние 172
    ','    сдвиг, и переход в состояние 173
    '}'    сдвиг, и переход в состояние 174


State 95

   70 listexprs: vector . ',' vector
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 175


State 96

   73 vector: '{' exprs . '}'
   85 exprs: exprs . ',' expr
   86      | exprs . error

    error  сдвиг, и переход в состояние 176
    ','    сдвиг, и переход в состояние 177
    '}'    сдвиг, и переход в состояние 178


State 97

   84 exprs: expr . ',' expr
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 179
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 98

    7 stmts: stmts error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, ENDIF, ENDFOR, E, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', ')', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   43 function: error . E
   53 callfunction: error . '[' callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   67       | error . matrix
   68       | . error vector
   68       | error . vector
   69       | . error expr
   69       | error . expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   82       | error . vector
   83       | . error expr
   83       | error . expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  120     | error . expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    NEWLINE    сдвиг, и переход в состояние 62
    E          сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 36

    $end       вывод с использованием правила 7 (stmts)
    error      [вывод с использованием правила 7 (stmts)]
    BOOL       [вывод с использованием правила 7 (stmts)]
    INTEGER    [вывод с использованием правила 7 (stmts)]
    VARIABLE   [вывод с использованием правила 7 (stmts)]
    VVARIABLE  [вывод с использованием правила 7 (stmts)]
    MVARIABLE  [вывод с использованием правила 7 (stmts)]
    FVARIABLE  вывод с использованием правила 7 (stmts)
    CINT       вывод с использованием правила 7 (stmts)
    VINT       вывод с использованием правила 7 (stmts)
    MINT       вывод с использованием правила 7 (stmts)
    INT        вывод с использованием правила 7 (stmts)
    CVINT      вывод с использованием правила 7 (stmts)
    CMINT      вывод с использованием правила 7 (stmts)
    BOOLEAN    вывод с использованием правила 7 (stmts)
    CBOOLEAN   вывод с использованием правила 7 (stmts)
    VBOOLEAN   вывод с использованием правила 7 (stmts)
    MBOOLEAN   вывод с использованием правила 7 (stmts)
    CVBOOLEAN  вывод с использованием правила 7 (stmts)
    CMBOOLEAN  вывод с использованием правила 7 (stmts)
    NEWLINE    [вывод с использованием правила 7 (stmts)]
    PRINT      вывод с использованием правила 7 (stmts)
    IF         вывод с использованием правила 7 (stmts)
    FORR       вывод с использованием правила 7 (stmts)
    ENDIF      вывод с использованием правила 7 (stmts)
    ENDFOR     вывод с использованием правила 7 (stmts)
    E          [вывод с использованием правила 7 (stmts)]
    MOVE       [вывод с использованием правила 7 (stmts)]
    RIGHT      вывод с использованием правила 7 (stmts)
    LEFT       вывод с использованием правила 7 (stmts)
    ROBEX      [вывод с использованием правила 7 (stmts)]
    WALL       [вывод с использованием правила 7 (stmts)]
    '-'        [вывод с использованием правила 7 (stmts)]
    '!'        [вывод с использованием правила 7 (stmts)]
    '('        [вывод с использованием правила 7 (stmts)]
    ')'        вывод с использованием правила 7 (stmts)
    '['        [вывод с использованием правила 7 (stmts)]
    '{'        [вывод с использованием правила 7 (stmts)]

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 99

    6 stmts: stmts stmt .

    $default  вывод с использованием правила 6 (stmts)


State 100

   21 stmt: robotactions NEWLINE .

    $default  вывод с использованием правила 21 (stmt)


State 101

   17 stmt: iff NEWLINE .

    $default  вывод с использованием правила 17 (stmt)


State 102

   18 stmt: forr NEWLINE .

    $default  вывод с использованием правила 18 (stmt)


State 103

   19 stmt: function NEWLINE .

    $default  вывод с использованием правила 19 (stmt)


State 104

   20 stmt: callfunction NEWLINE .

    $default  вывод с использованием правила 20 (stmt)


State 105

   12 stmt: matrix NEWLINE .

    $default  вывод с использованием правила 12 (stmt)


State 106

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   60       | matrix ELEMMULT . matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   65       | matrix ELEMMULT . vector
   66       | . matrix ELEMMULT expr
   66       | matrix ELEMMULT . expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 180
    vector     переход в состояние 181
    expr       переход в состояние 182
    const      переход в состояние 57


State 107

   61 matrix: matrix '\'' .

    $default  вывод с использованием правила 61 (matrix)


State 108

   63 matrix: matrix LEFTSHIFT .

    $default  вывод с использованием правила 63 (matrix)


State 109

   62 matrix: matrix RIGHTSHIFT .

    $default  вывод с использованием правила 62 (matrix)


State 110

   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   59       | matrix '*' . matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 183
    vector  переход в состояние 146


State 111

   11 stmt: vector NEWLINE .

    $default  вывод с использованием правила 11 (stmt)


State 112

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   78       | vector ELEMMULT . vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   81       | vector ELEMMULT . expr
   82       | . error vector
   83       | . error expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 184
    expr       переход в состояние 185
    const      переход в состояние 57


State 113

   64 matrix: vector '\'' .

    $default  вывод с использованием правила 64 (matrix)


State 114

   80 vector: vector LEFTSHIFT .

    $default  вывод с использованием правила 80 (vector)


State 115

   79 vector: vector RIGHTSHIFT .

    $default  вывод с использованием правила 79 (vector)


State 116

   14 stmt: vmdeclaration NEWLINE .

    $default  вывод с использованием правила 14 (stmt)


State 117

   15 stmt: declaration NEWLINE .

    $default  вывод с использованием правила 15 (stmt)


State 118

   16 stmt: assignment NEWLINE .

    $default  вывод с использованием правила 16 (stmt)


State 119

   13 stmt: print NEWLINE .

    $default  вывод с использованием правила 13 (stmt)


State 120

   10 stmt: expr NEWLINE .

    $default  вывод с использованием правила 10 (stmt)


State 121

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  116     | expr CONJUNCTION . expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 186
    const      переход в состояние 57


State 122

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  113     | expr '<' . expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 187
    const      переход в состояние 57


State 123

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  114     | expr '>' . expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 188
    const      переход в состояние 57


State 124

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  110     | expr '+' . expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 189
    const      переход в состояние 57


State 125

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  111     | expr '-' . expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 190
    const      переход в состояние 57


State 126

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  112     | expr '/' . expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 191
    const      переход в состояние 57


State 127

   95 declaration: type VAR . DECLARE expr
   96            | type VAR . DECLARE vector
   97            | type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 192


State 128

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   74       | VVARIABLE '(' . vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  118     | VVARIABLE '(' . expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 193
    expr       переход в состояние 194
    const      переход в состояние 57


State 129

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   55       | MVARIABLE '(' . vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   56       | MVARIABLE '(' . '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   57       | MVARIABLE '(' . matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   75       | MVARIABLE '(' . expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   76       | MVARIABLE '(' . '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  119     | MVARIABLE '(' . expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 195
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 196
    vector     переход в состояние 197
    expr       переход в состояние 198
    const      переход в состояние 57


State 130

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr
  117     | '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 164


State 131

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   51 callfunc_args: error .  [error, ',', ']']
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   67       | error . matrix
   68       | . error vector
   68       | error . vector
   69       | . error expr
   69       | error . expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   82       | error . vector
   83       | . error expr
   83       | error . expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  120     | error . expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    error  [вывод с использованием правила 51 (callfunc_args)]
    ','    вывод с использованием правила 51 (callfunc_args)
    ']'    вывод с использованием правила 51 (callfunc_args)

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 132

   47 callfunc_args: callfunc_args . ',' expr
   48              | callfunc_args . ',' vector
   49              | callfunc_args . ',' matrix
   50              | callfunc_args . error
   53 callfunction: error '[' callfunc_args . ']'

    error  сдвиг, и переход в состояние 199
    ','    сдвиг, и переход в состояние 200
    ']'    сдвиг, и переход в состояние 201


State 133

   46 callfunc_args: matrix .  [error, ',', ']']
   59 matrix: matrix . '*' matrix
   60       | matrix . ELEMMULT matrix
   61       | matrix . '\''
   62       | matrix . RIGHTSHIFT
   63       | matrix . LEFTSHIFT
   65       | matrix . ELEMMULT vector
   66       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 46 (callfunc_args)


State 134

   45 callfunc_args: vector .  [error, ',', ']']
   64 matrix: vector . '\''
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 45 (callfunc_args)


State 135

   44 callfunc_args: expr .  [error, ',', ']']
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 44 (callfunc_args)


State 136

   98 assignment: VARIABLE ASSIGN expr .  [NEWLINE]
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 98 (assignment)


State 137

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   82       | error . vector
   83       | . error expr
   83       | error . expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 169
    expr       переход в состояние 202
    const      переход в состояние 57


State 138

   74 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   77       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '}']

    '('  сдвиг, и переход в состояние 203

    $default  вывод с использованием правила 77 (vector)


State 139

   75 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   76       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 204


State 140

   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr
   99 assignment: VVARIABLE ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 99 (assignment)


State 141

   74 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   78       | vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr
   88 vmdeclaration: VVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN vector

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 205


State 142

   87 vmdeclaration: VVARIABLE '(' expr . ')' ASSIGN expr
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr
  118     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 206


State 143

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   67       | error . matrix
   68       | . error vector
   68       | error . vector
   69       | . error expr
   69       | error . expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   82       | error . vector
   83       | . error expr
   83       | error . expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 207
    const      переход в состояние 57


State 144

   55 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   56       | MVARIABLE . '(' '[' ']' ',' vector ')'
   57       | MVARIABLE . '(' matrix ')'
   58       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   75 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   76       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 208

    $default  вывод с использованием правила 58 (matrix)


State 145

   59 matrix: matrix . '*' matrix
   60       | matrix . ELEMMULT matrix
   61       | matrix . '\''
   62       | matrix . RIGHTSHIFT
   63       | matrix . LEFTSHIFT
   65       | matrix . ELEMMULT vector
   66       | matrix . ELEMMULT expr
  100 assignment: MVARIABLE ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 100 (assignment)


State 146

   64 matrix: vector . '\''
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115


State 147

   56 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   76 vector: MVARIABLE '(' '[' . ']' ',' expr ')'
   91 vmdeclaration: MVARIABLE '(' '[' . ']' ',' expr ')' ASSIGN vector
   93              | MVARIABLE '(' '[' . ']' ',' vector ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 209


State 148

   57 matrix: MVARIABLE '(' matrix . ')'
   59       | matrix . '*' matrix
   60       | matrix . ELEMMULT matrix
   61       | matrix . '\''
   62       | matrix . RIGHTSHIFT
   63       | matrix . LEFTSHIFT
   65       | matrix . ELEMMULT vector
   66       | matrix . ELEMMULT expr
   94 vmdeclaration: MVARIABLE '(' matrix . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110
    ')'         сдвиг, и переход в состояние 210


State 149

   55 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   64       | vector . '\''
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr
   92 vmdeclaration: MVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 211


State 150

   75 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
   89 vmdeclaration: MVARIABLE '(' expr . ',' expr ')' ASSIGN expr
   90              | MVARIABLE '(' expr . ',' '[' ']' ')' ASSIGN vector
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr
  119     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 212
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 151

   47 callfunc_args: callfunc_args . ',' expr
   48              | callfunc_args . ',' vector
   49              | callfunc_args . ',' matrix
   50              | callfunc_args . error
   52 callfunction: FVARIABLE '[' callfunc_args . ']'

    error  сдвиг, и переход в состояние 199
    ','    сдвиг, и переход в состояние 200
    ']'    сдвиг, и переход в состояние 213


State 152

  102 print: PRINT '(' VVARIABLE . ')'
  118 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 157
    ')'  сдвиг, и переход в состояние 214


State 153

  103 print: PRINT '(' MVARIABLE . ')'
  119 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 158
    ')'  сдвиг, и переход в состояние 215


State 154

  101 print: PRINT '(' expr . ')'
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 216


State 155

   32 iff: IF error ENDIF .

    $default  вывод с использованием правила 32 (iff)


State 156

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr
  120     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 120 (expr)]
    '<'          [вывод с использованием правила 120 (expr)]
    '>'          [вывод с использованием правила 120 (expr)]
    '+'          [вывод с использованием правила 120 (expr)]
    '-'          [вывод с использованием правила 120 (expr)]
    '/'          [вывод с использованием правила 120 (expr)]
    $default     вывод с использованием правила 120 (expr)


State 157

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  118     | VVARIABLE '(' . expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 194
    const      переход в состояние 57


State 158

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  119     | MVARIABLE '(' . expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 217
    const      переход в состояние 57


State 159

   31 iff: IF expr NEWLINE . BEGIF stmts ENDIF

    BEGIF  сдвиг, и переход в состояние 218


State 160

   34 forr: FORR error ENDFOR .

    $default  вывод с использованием правила 34 (forr)


State 161

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   33 forr: FORR declaration DOUBLEDOT . expr NEWLINE BEGFOR stmts ENDFOR
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 219
    const      переход в состояние 57


State 162

   26 robotmove: MOVE '(' expr . ')'
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 220


State 163

   22 stmt: '(' stmts ')' .

    $default  вывод с использованием правила 22 (stmt)


State 164

  117 expr: '(' expr ')' .

    $default  вывод с использованием правила 117 (expr)


State 165

   37 return_func: return_func error .

    $default  вывод с использованием правила 37 (return_func)


State 166

   36 return_func: return_func ',' . type VAR
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 221


State 167

   42 function: '[' return_func ']' . DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E

    DECLARE  сдвиг, и переход в состояние 222


State 168

   35 return_func: type VAR .

    $default  вывод с использованием правила 35 (return_func)


State 169

   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr
   82       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    ELEMMULT    [вывод с использованием правила 82 (vector)]
    LEFTSHIFT   [вывод с использованием правила 82 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 82 (vector)]
    $default    вывод с использованием правила 82 (vector)


State 170

   83 vector: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr
  120     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    error        вывод с использованием правила 83 (vector)
    error        [вывод с использованием правила 120 (expr)]
    NEWLINE      вывод с использованием правила 83 (vector)
    NEWLINE      [вывод с использованием правила 120 (expr)]
    CONJUNCTION  [вывод с использованием правила 120 (expr)]
    ELEMMULT     вывод с использованием правила 83 (vector)
    ELEMMULT     [вывод с использованием правила 120 (expr)]
    '\''         вывод с использованием правила 83 (vector)
    '\''         [вывод с использованием правила 120 (expr)]
    LEFTSHIFT    вывод с использованием правила 83 (vector)
    LEFTSHIFT    [вывод с использованием правила 120 (expr)]
    RIGHTSHIFT   вывод с использованием правила 83 (vector)
    RIGHTSHIFT   [вывод с использованием правила 120 (expr)]
    ','          вывод с использованием правила 83 (vector)
    ','          [вывод с использованием правила 120 (expr)]
    DOUBLEDOT    вывод с использованием правила 83 (vector)
    DOUBLEDOT    [вывод с использованием правила 120 (expr)]
    '<'          [вывод с использованием правила 120 (expr)]
    '>'          [вывод с использованием правила 120 (expr)]
    '+'          [вывод с использованием правила 120 (expr)]
    '-'          [вывод с использованием правила 120 (expr)]
    '*'          вывод с использованием правила 83 (vector)
    '*'          [вывод с использованием правила 120 (expr)]
    '/'          [вывод с использованием правила 120 (expr)]
    ')'          вывод с использованием правила 83 (vector)
    ')'          [вывод с использованием правила 120 (expr)]
    ']'          вывод с использованием правила 83 (vector)
    ']'          [вывод с использованием правила 120 (expr)]
    '}'          вывод с использованием правила 83 (vector)
    '}'          [вывод с использованием правила 120 (expr)]
    $default     вывод с использованием правила 83 (vector)


State 171

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   75 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   76       | MVARIABLE '(' . '[' ']' ',' expr ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  119     | MVARIABLE '(' . expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 223

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 198
    const      переход в состояние 57


State 172

   72 listexprs: listexprs error .

    $default  вывод с использованием правила 72 (listexprs)


State 173

   71 listexprs: listexprs ',' . vector
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 224


State 174

   54 matrix: '{' listexprs '}' .

    $default  вывод с использованием правила 54 (matrix)


State 175

   70 listexprs: vector ',' . vector
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 225


State 176

   86 exprs: exprs error .

    $default  вывод с использованием правила 86 (exprs)


State 177

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   85 exprs: exprs ',' . expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 226
    const      переход в состояние 57


State 178

   73 vector: '{' exprs '}' .

    $default  вывод с использованием правила 73 (vector)


State 179

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   84 exprs: expr ',' . expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 227
    const      переход в состояние 57


State 180

   59 matrix: matrix . '*' matrix
   60       | matrix . ELEMMULT matrix
   60       | matrix ELEMMULT matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   61       | matrix . '\''
   62       | matrix . RIGHTSHIFT
   63       | matrix . LEFTSHIFT
   65       | matrix . ELEMMULT vector
   66       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    ELEMMULT    [вывод с использованием правила 60 (matrix)]
    '\''        [вывод с использованием правила 60 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 60 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 60 (matrix)]
    '*'         [вывод с использованием правила 60 (matrix)]
    $default    вывод с использованием правила 60 (matrix)


State 181

   64 matrix: vector . '\''
   65       | matrix ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    ELEMMULT    [вывод с использованием правила 65 (matrix)]
    '\''        [вывод с использованием правила 65 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 65 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 65 (matrix)]
    $default    вывод с использованием правила 65 (matrix)


State 182

   66 matrix: matrix ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 66 (matrix)


State 183

   59 matrix: matrix . '*' matrix
   59       | matrix '*' matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   60       | matrix . ELEMMULT matrix
   61       | matrix . '\''
   62       | matrix . RIGHTSHIFT
   63       | matrix . LEFTSHIFT
   65       | matrix . ELEMMULT vector
   66       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    ELEMMULT    [вывод с использованием правила 59 (matrix)]
    '\''        [вывод с использованием правила 59 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 59 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 59 (matrix)]
    $default    вывод с использованием правила 59 (matrix)

    Конфликт между правилом 59 и лексемой '*' разрешен выводом (%left '*').


State 184

   78 vector: vector . ELEMMULT vector
   78       | vector ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    ELEMMULT    [вывод с использованием правила 78 (vector)]
    LEFTSHIFT   [вывод с использованием правила 78 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 78 (vector)]
    $default    вывод с использованием правила 78 (vector)


State 185

   81 vector: vector ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 81 (vector)


State 186

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr
  116     | expr CONJUNCTION expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 116 (expr)]
    '<'          [вывод с использованием правила 116 (expr)]
    '>'          [вывод с использованием правила 116 (expr)]
    '+'          [вывод с использованием правила 116 (expr)]
    '-'          [вывод с использованием правила 116 (expr)]
    '/'          [вывод с использованием правила 116 (expr)]
    $default     вывод с использованием правила 116 (expr)


State 187

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  113     | expr '<' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 113 (expr)]
    $default     вывод с использованием правила 113 (expr)

    Конфликт между правилом 113 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 113 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 113 и лексемой '+' разрешен сдвигом ('<' < '+').
    Конфликт между правилом 113 и лексемой '-' разрешен сдвигом ('<' < '-').
    Конфликт между правилом 113 и лексемой '/' разрешен сдвигом ('<' < '/').


State 188

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  114     | expr '>' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 114 (expr)]
    $default     вывод с использованием правила 114 (expr)

    Конфликт между правилом 114 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 114 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 114 и лексемой '+' разрешен сдвигом ('>' < '+').
    Конфликт между правилом 114 и лексемой '-' разрешен сдвигом ('>' < '-').
    Конфликт между правилом 114 и лексемой '/' разрешен сдвигом ('>' < '/').


State 189

  110 expr: expr . '+' expr
  110     | expr '+' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 110 (expr)]
    $default     вывод с использованием правила 110 (expr)

    Конфликт между правилом 110 и лексемой '<' разрешен выводом ('<' < '+').
    Конфликт между правилом 110 и лексемой '>' разрешен выводом ('>' < '+').
    Конфликт между правилом 110 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 110 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 110 и лексемой '/' разрешен сдвигом ('+' < '/').


State 190

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  111     | expr '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 111 (expr)]
    $default     вывод с использованием правила 111 (expr)

    Конфликт между правилом 111 и лексемой '<' разрешен выводом ('<' < '-').
    Конфликт между правилом 111 и лексемой '>' разрешен выводом ('>' < '-').
    Конфликт между правилом 111 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 111 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 111 и лексемой '/' разрешен сдвигом ('-' < '/').


State 191

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  112     | expr '/' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 112 (expr)]
    $default     вывод с использованием правила 112 (expr)

    Конфликт между правилом 112 и лексемой '<' разрешен выводом ('<' < '/').
    Конфликт между правилом 112 и лексемой '>' разрешен выводом ('>' < '/').
    Конфликт между правилом 112 и лексемой '+' разрешен выводом ('+' < '/').
    Конфликт между правилом 112 и лексемой '-' разрешен выводом ('-' < '/').
    Конфликт между правилом 112 и лексемой '/' разрешен выводом (%left '/').


State 192

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   95 declaration: type VAR DECLARE . expr
   96            | type VAR DECLARE . vector
   97            | type VAR DECLARE . matrix
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 228
    vector     переход в состояние 229
    expr       переход в состояние 230
    const      переход в состояние 57


State 193

   74 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   78       | vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 231


State 194

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr
  118     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 232


State 195

   56 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   76 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 233


State 196

   57 matrix: MVARIABLE '(' matrix . ')'
   59       | matrix . '*' matrix
   60       | matrix . ELEMMULT matrix
   61       | matrix . '\''
   62       | matrix . RIGHTSHIFT
   63       | matrix . LEFTSHIFT
   65       | matrix . ELEMMULT vector
   66       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110
    ')'         сдвиг, и переход в состояние 234


State 197

   55 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   64       | vector . '\''
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 235


State 198

   75 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr
  119     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 236
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 199

   50 callfunc_args: callfunc_args error .

    $default  вывод с использованием правила 50 (callfunc_args)


State 200

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   47 callfunc_args: callfunc_args ',' . expr
   48              | callfunc_args ',' . vector
   49              | callfunc_args ',' . matrix
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 237
    vector     переход в состояние 238
    expr       переход в состояние 239
    const      переход в состояние 57


State 201

   53 callfunction: error '[' callfunc_args ']' .

    $default  вывод с использованием правила 53 (callfunction)


State 202

   83 vector: error expr .  [error, NEWLINE, ELEMMULT, LEFTSHIFT, RIGHTSHIFT, ',', '}']
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 83 (vector)


State 203

   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   74       | VVARIABLE '(' . vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 193


State 204

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   75 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   76       | MVARIABLE '(' . '[' ']' ',' expr ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 223

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 240
    const      переход в состояние 57


State 205

   74 vector: VVARIABLE '(' vector ',' . '[' ']' ')'
   88 vmdeclaration: VVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN vector

    '['  сдвиг, и переход в состояние 241


State 206

   87 vmdeclaration: VVARIABLE '(' expr ')' . ASSIGN expr
  118 expr: VVARIABLE '(' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 242

    $default  вывод с использованием правила 118 (expr)


State 207

   69 matrix: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   83 vector: error expr .  [ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    ELEMMULT    вывод с использованием правила 69 (matrix)
    ELEMMULT    [вывод с использованием правила 83 (vector)]
    '\''        вывод с использованием правила 69 (matrix)
    '\''        [вывод с использованием правила 83 (vector)]
    LEFTSHIFT   вывод с использованием правила 69 (matrix)
    LEFTSHIFT   [вывод с использованием правила 83 (vector)]
    RIGHTSHIFT  вывод с использованием правила 69 (matrix)
    RIGHTSHIFT  [вывод с использованием правила 83 (vector)]
    $default    вывод с использованием правила 69 (matrix)


State 208

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   55       | MVARIABLE '(' . vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   56       | MVARIABLE '(' . '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   57       | MVARIABLE '(' . matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   75       | MVARIABLE '(' . expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   76       | MVARIABLE '(' . '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 195
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 196
    vector     переход в состояние 197
    expr       переход в состояние 240
    const      переход в состояние 57


State 209

   56 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   76 vector: MVARIABLE '(' '[' ']' . ',' expr ')'
   91 vmdeclaration: MVARIABLE '(' '[' ']' . ',' expr ')' ASSIGN vector
   93              | MVARIABLE '(' '[' ']' . ',' vector ')' ASSIGN matrix

    ','  сдвиг, и переход в состояние 243


State 210

   57 matrix: MVARIABLE '(' matrix ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   94 vmdeclaration: MVARIABLE '(' matrix ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 244

    $default  вывод с использованием правила 57 (matrix)


State 211

   55 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'
   92 vmdeclaration: MVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN matrix

    '['  сдвиг, и переход в состояние 245


State 212

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   75 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
   89 vmdeclaration: MVARIABLE '(' expr ',' . expr ')' ASSIGN expr
   90              | MVARIABLE '(' expr ',' . '[' ']' ')' ASSIGN vector
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  119     | MVARIABLE '(' expr ',' . expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 246

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 247
    const      переход в состояние 57


State 213

   52 callfunction: FVARIABLE '[' callfunc_args ']' .

    $default  вывод с использованием правила 52 (callfunction)


State 214

  102 print: PRINT '(' VVARIABLE ')' .

    $default  вывод с использованием правила 102 (print)


State 215

  103 print: PRINT '(' MVARIABLE ')' .

    $default  вывод с использованием правила 103 (print)


State 216

  101 print: PRINT '(' expr ')' .

    $default  вывод с использованием правила 101 (print)


State 217

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr
  119     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 248
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 218

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   31    | IF expr NEWLINE BEGIF . stmts ENDIF
   32    | . IF error ENDIF
   33 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   34     | . FORR error ENDFOR
   42 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   43         | . error E
   52 callfunction: . FVARIABLE '[' callfunc_args ']'
   53             | . error '[' callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   87 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   88              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   89              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   90              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   91              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   92              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   93              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   94              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   95 declaration: . type VAR DECLARE expr
   96            | . type VAR DECLARE vector
   97            | . type VAR DECLARE matrix
   98 assignment: . VARIABLE ASSIGN expr
   99           | . VVARIABLE ASSIGN vector
  100           | . MVARIABLE ASSIGN matrix
  101 print: . PRINT '(' expr ')'
  102      | . PRINT '(' VVARIABLE ')'
  103      | . PRINT '(' MVARIABLE ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 86
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 249
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 219

   33 forr: FORR declaration DOUBLEDOT expr . NEWLINE BEGFOR stmts ENDFOR
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 250
    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 220

   26 robotmove: MOVE '(' expr ')' .

    $default  вывод с использованием правила 26 (robotmove)


State 221

   36 return_func: return_func ',' type . VAR

    VAR  сдвиг, и переход в состояние 251


State 222

   42 function: '[' return_func ']' DECLARE . FUNC VAR '(' args_func ')' B NEWLINE stmts E

    FUNC  сдвиг, и переход в состояние 252


State 223

   76 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 253


State 224

   71 listexprs: listexprs ',' vector .  [error, ',', '}']
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 71 (listexprs)


State 225

   70 listexprs: vector ',' vector .  [error, ',', '}']
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 70 (listexprs)


State 226

   85 exprs: exprs ',' expr .  [error, ',', '}']
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 85 (exprs)


State 227

   84 exprs: expr ',' expr .  [error, ',', '}']
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 84 (exprs)


State 228

   59 matrix: matrix . '*' matrix
   60       | matrix . ELEMMULT matrix
   61       | matrix . '\''
   62       | matrix . RIGHTSHIFT
   63       | matrix . LEFTSHIFT
   65       | matrix . ELEMMULT vector
   66       | matrix . ELEMMULT expr
   97 declaration: type VAR DECLARE matrix .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 97 (declaration)


State 229

   64 matrix: vector . '\''
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr
   96 declaration: type VAR DECLARE vector .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 96 (declaration)


State 230

   95 declaration: type VAR DECLARE expr .  [NEWLINE, DOUBLEDOT]
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 95 (declaration)


State 231

   74 vector: VVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 254


State 232

  118 expr: VVARIABLE '(' expr ')' .

    $default  вывод с использованием правила 118 (expr)


State 233

   56 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   76 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 255


State 234

   57 matrix: MVARIABLE '(' matrix ')' .

    $default  вывод с использованием правила 57 (matrix)


State 235

   55 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 256


State 236

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   75 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  119     | MVARIABLE '(' expr ',' . expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 257

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 258
    const      переход в состояние 57


State 237

   49 callfunc_args: callfunc_args ',' matrix .  [error, ',', ']']
   59 matrix: matrix . '*' matrix
   60       | matrix . ELEMMULT matrix
   61       | matrix . '\''
   62       | matrix . RIGHTSHIFT
   63       | matrix . LEFTSHIFT
   65       | matrix . ELEMMULT vector
   66       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 49 (callfunc_args)


State 238

   48 callfunc_args: callfunc_args ',' vector .  [error, ',', ']']
   64 matrix: vector . '\''
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 48 (callfunc_args)


State 239

   47 callfunc_args: callfunc_args ',' expr .  [error, ',', ']']
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 47 (callfunc_args)


State 240

   75 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 259
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 241

   74 vector: VVARIABLE '(' vector ',' '[' . ']' ')'
   88 vmdeclaration: VVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 260


State 242

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   87 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN . expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 261
    const      переход в состояние 57


State 243

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   56 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   76       | MVARIABLE '(' '[' ']' ',' . expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   91 vmdeclaration: MVARIABLE '(' '[' ']' ',' . expr ')' ASSIGN vector
   93              | MVARIABLE '(' '[' ']' ',' . vector ')' ASSIGN matrix
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 262
    expr       переход в состояние 263
    const      переход в состояние 57


State 244

   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   94 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 264
    vector  переход в состояние 146


State 245

   55 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'
   92 vmdeclaration: MVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 265


State 246

   75 vector: MVARIABLE '(' expr ',' '[' . ']' ')'
   90 vmdeclaration: MVARIABLE '(' expr ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 266


State 247

   89 vmdeclaration: MVARIABLE '(' expr ',' expr . ')' ASSIGN expr
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr
  119     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 267


State 248

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  119     | MVARIABLE '(' expr ',' . expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 258
    const      переход в состояние 57


State 249

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   31    | IF expr NEWLINE BEGIF stmts . ENDIF
   32    | . IF error ENDIF
   33 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   34     | . FORR error ENDFOR
   42 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   43         | . error E
   52 callfunction: . FVARIABLE '[' callfunc_args ']'
   53             | . error '[' callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   87 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   88              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   89              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   90              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   91              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   92              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   93              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   94              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   95 declaration: . type VAR DECLARE expr
   96            | . type VAR DECLARE vector
   97            | . type VAR DECLARE matrix
   98 assignment: . VARIABLE ASSIGN expr
   99           | . VVARIABLE ASSIGN vector
  100           | . MVARIABLE ASSIGN matrix
  101 print: . PRINT '(' expr ')'
  102      | . PRINT '(' VVARIABLE ')'
  103      | . PRINT '(' MVARIABLE ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 98
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    ENDIF      сдвиг, и переход в состояние 268
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 99
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 250

   33 forr: FORR declaration DOUBLEDOT expr NEWLINE . BEGFOR stmts ENDFOR

    BEGFOR  сдвиг, и переход в состояние 269


State 251

   36 return_func: return_func ',' type VAR .

    $default  вывод с использованием правила 36 (return_func)


State 252

   42 function: '[' return_func ']' DECLARE FUNC . VAR '(' args_func ')' B NEWLINE stmts E

    VAR  сдвиг, и переход в состояние 270


State 253

   76 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 271


State 254

   74 vector: VVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 272


State 255

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   56 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   76       | MVARIABLE '(' '[' ']' ',' . expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 273
    expr       переход в состояние 274
    const      переход в состояние 57


State 256

   55 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 275


State 257

   75 vector: MVARIABLE '(' expr ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 276


State 258

  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr
  119     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 277


State 259

   75 vector: MVARIABLE '(' expr ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 257


State 260

   74 vector: VVARIABLE '(' vector ',' '[' ']' . ')'
   88 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 278


State 261

   87 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr .  [NEWLINE]
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 87 (vmdeclaration)


State 262

   56 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr
   93 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ')'         сдвиг, и переход в состояние 279


State 263

   76 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
   91 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr . ')' ASSIGN vector
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 280


State 264

   59 matrix: matrix . '*' matrix
   60       | matrix . ELEMMULT matrix
   61       | matrix . '\''
   62       | matrix . RIGHTSHIFT
   63       | matrix . LEFTSHIFT
   65       | matrix . ELEMMULT vector
   66       | matrix . ELEMMULT expr
   94 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 94 (vmdeclaration)


State 265

   55 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'
   92 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN matrix

    ')'  сдвиг, и переход в состояние 281


State 266

   75 vector: MVARIABLE '(' expr ',' '[' ']' . ')'
   90 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 282


State 267

   89 vmdeclaration: MVARIABLE '(' expr ',' expr ')' . ASSIGN expr
  119 expr: MVARIABLE '(' expr ',' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 283

    $default  вывод с использованием правила 119 (expr)


State 268

   31 iff: IF expr NEWLINE BEGIF stmts ENDIF .

    $default  вывод с использованием правила 31 (iff)


State 269

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   32    | . IF error ENDIF
   33 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   33     | FORR declaration DOUBLEDOT expr NEWLINE BEGFOR . stmts ENDFOR
   34     | . FORR error ENDFOR
   42 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   43         | . error E
   52 callfunction: . FVARIABLE '[' callfunc_args ']'
   53             | . error '[' callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   87 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   88              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   89              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   90              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   91              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   92              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   93              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   94              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   95 declaration: . type VAR DECLARE expr
   96            | . type VAR DECLARE vector
   97            | . type VAR DECLARE matrix
   98 assignment: . VARIABLE ASSIGN expr
   99           | . VVARIABLE ASSIGN vector
  100           | . MVARIABLE ASSIGN matrix
  101 print: . PRINT '(' expr ')'
  102      | . PRINT '(' VVARIABLE ')'
  103      | . PRINT '(' MVARIABLE ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 86
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 284
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 270

   42 function: '[' return_func ']' DECLARE FUNC VAR . '(' args_func ')' B NEWLINE stmts E

    '('  сдвиг, и переход в состояние 285


State 271

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   76 vector: MVARIABLE '(' '[' ']' ',' . expr ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 274
    const      переход в состояние 57


State 272

   74 vector: VVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 286


State 273

   56 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ')'         сдвиг, и переход в состояние 287


State 274

   76 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 288


State 275

   55 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 289


State 276

   75 vector: MVARIABLE '(' expr ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 290


State 277

  119 expr: MVARIABLE '(' expr ',' expr ')' .

    $default  вывод с использованием правила 119 (expr)


State 278

   74 vector: VVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   88 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 291

    $default  вывод с использованием правила 74 (vector)


State 279

   56 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   93 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 292

    $default  вывод с использованием правила 56 (matrix)


State 280

   76 vector: MVARIABLE '(' '[' ']' ',' expr ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   91 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 293

    $default  вывод с использованием правила 76 (vector)


State 281

   55 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   92 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 294

    $default  вывод с использованием правила 55 (matrix)


State 282

   75 vector: MVARIABLE '(' expr ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   90 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 295

    $default  вывод с использованием правила 75 (vector)


State 283

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   89 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN . expr
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 296
    const      переход в состояние 57


State 284

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   32    | . IF error ENDIF
   33 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   33     | FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts . ENDFOR
   34     | . FORR error ENDFOR
   42 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   43         | . error E
   52 callfunction: . FVARIABLE '[' callfunc_args ']'
   53             | . error '[' callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   87 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   88              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   89              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   90              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   91              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   92              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   93              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   94              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   95 declaration: . type VAR DECLARE expr
   96            | . type VAR DECLARE vector
   97            | . type VAR DECLARE matrix
   98 assignment: . VARIABLE ASSIGN expr
   99           | . VVARIABLE ASSIGN vector
  100           | . MVARIABLE ASSIGN matrix
  101 print: . PRINT '(' expr ')'
  102      | . PRINT '(' VVARIABLE ')'
  103      | . PRINT '(' MVARIABLE ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 98
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    ENDFOR     сдвиг, и переход в состояние 297
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 99
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 285

   38 args_func: . '[' type VAR ']'
   39          | . args_func ',' '[' type VAR ']'
   40          | . args_func error
   41          | . error
   42 function: '[' return_func ']' DECLARE FUNC VAR '(' . args_func ')' B NEWLINE stmts E

    error  сдвиг, и переход в состояние 298
    '['    сдвиг, и переход в состояние 299

    args_func  переход в состояние 300


State 286

   74 vector: VVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 74 (vector)


State 287

   56 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .

    $default  вывод с использованием правила 56 (matrix)


State 288

   76 vector: MVARIABLE '(' '[' ']' ',' expr ')' .

    $default  вывод с использованием правила 76 (vector)


State 289

   55 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 55 (matrix)


State 290

   75 vector: MVARIABLE '(' expr ',' '[' ']' ')' .

    $default  вывод с использованием правила 75 (vector)


State 291

   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   88 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 301


State 292

   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   93 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 302
    vector  переход в состояние 146


State 293

   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   91 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 303


State 294

   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   92 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 304
    vector  переход в состояние 146


State 295

   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   90 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 305


State 296

   89 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN expr .  [NEWLINE]
  110 expr: expr . '+' expr
  111     | expr . '-' expr
  112     | expr . '/' expr
  113     | expr . '<' expr
  114     | expr . '>' expr
  116     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 89 (vmdeclaration)


State 297

   33 forr: FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR .

    $default  вывод с использованием правила 33 (forr)


State 298

   41 args_func: error .

    $default  вывод с использованием правила 41 (args_func)


State 299

   38 args_func: '[' . type VAR ']'
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 306


State 300

   39 args_func: args_func . ',' '[' type VAR ']'
   40          | args_func . error
   42 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func . ')' B NEWLINE stmts E

    error  сдвиг, и переход в состояние 307
    ','    сдвиг, и переход в состояние 308
    ')'    сдвиг, и переход в состояние 309


State 301

   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr
   88 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 88 (vmdeclaration)


State 302

   59 matrix: matrix . '*' matrix
   60       | matrix . ELEMMULT matrix
   61       | matrix . '\''
   62       | matrix . RIGHTSHIFT
   63       | matrix . LEFTSHIFT
   65       | matrix . ELEMMULT vector
   66       | matrix . ELEMMULT expr
   93 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 93 (vmdeclaration)


State 303

   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr
   91 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 91 (vmdeclaration)


State 304

   59 matrix: matrix . '*' matrix
   60       | matrix . ELEMMULT matrix
   61       | matrix . '\''
   62       | matrix . RIGHTSHIFT
   63       | matrix . LEFTSHIFT
   65       | matrix . ELEMMULT vector
   66       | matrix . ELEMMULT expr
   92 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 92 (vmdeclaration)


State 305

   78 vector: vector . ELEMMULT vector
   79       | vector . RIGHTSHIFT
   80       | vector . LEFTSHIFT
   81       | vector . ELEMMULT expr
   90 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 90 (vmdeclaration)


State 306

   38 args_func: '[' type . VAR ']'

    VAR  сдвиг, и переход в состояние 310


State 307

   40 args_func: args_func error .

    $default  вывод с использованием правила 40 (args_func)


State 308

   39 args_func: args_func ',' . '[' type VAR ']'

    '['  сдвиг, и переход в состояние 311


State 309

   42 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' . B NEWLINE stmts E

    B  сдвиг, и переход в состояние 312


State 310

   38 args_func: '[' type VAR . ']'

    ']'  сдвиг, и переход в состояние 313


State 311

   39 args_func: args_func ',' '[' . type VAR ']'
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 314


State 312

   42 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B . NEWLINE stmts E

    NEWLINE  сдвиг, и переход в состояние 315


State 313

   38 args_func: '[' type VAR ']' .

    $default  вывод с использованием правила 38 (args_func)


State 314

   39 args_func: args_func ',' '[' type . VAR ']'

    VAR  сдвиг, и переход в состояние 316


State 315

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   32    | . IF error ENDIF
   33 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   34     | . FORR error ENDFOR
   42 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   42         | '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE . stmts E
   43         | . error E
   52 callfunction: . FVARIABLE '[' callfunc_args ']'
   53             | . error '[' callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   87 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   88              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   89              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   90              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   91              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   92              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   93              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   94              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   95 declaration: . type VAR DECLARE expr
   96            | . type VAR DECLARE vector
   97            | . type VAR DECLARE matrix
   98 assignment: . VARIABLE ASSIGN expr
   99           | . VVARIABLE ASSIGN vector
  100           | . MVARIABLE ASSIGN matrix
  101 print: . PRINT '(' expr ')'
  102      | . PRINT '(' VVARIABLE ')'
  103      | . PRINT '(' MVARIABLE ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 86
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 317
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 316

   39 args_func: args_func ',' '[' type VAR . ']'

    ']'  сдвиг, и переход в состояние 318


State 317

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   32    | . IF error ENDIF
   33 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   34     | . FORR error ENDFOR
   42 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   42         | '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts . E
   43         | . error E
   52 callfunction: . FVARIABLE '[' callfunc_args ']'
   53             | . error '[' callfunc_args ']'
   54 matrix: . '{' listexprs '}'
   55       | . MVARIABLE '(' vector ',' '[' ']' ')'
   56       | . MVARIABLE '(' '[' ']' ',' vector ')'
   57       | . MVARIABLE '(' matrix ')'
   58       | . MVARIABLE
   59       | . matrix '*' matrix
   60       | . matrix ELEMMULT matrix
   61       | . matrix '\''
   62       | . matrix RIGHTSHIFT
   63       | . matrix LEFTSHIFT
   64       | . vector '\''
   65       | . matrix ELEMMULT vector
   66       | . matrix ELEMMULT expr
   67       | . error matrix
   68       | . error vector
   69       | . error expr
   73 vector: . '{' exprs '}'
   74       | . VVARIABLE '(' vector ',' '[' ']' ')'
   75       | . MVARIABLE '(' expr ',' '[' ']' ')'
   76       | . MVARIABLE '(' '[' ']' ',' expr ')'
   77       | . VVARIABLE
   78       | . vector ELEMMULT vector
   79       | . vector RIGHTSHIFT
   80       | . vector LEFTSHIFT
   81       | . vector ELEMMULT expr
   82       | . error vector
   83       | . error expr
   87 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   88              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   89              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   90              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   91              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   92              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   93              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   94              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   95 declaration: . type VAR DECLARE expr
   96            | . type VAR DECLARE vector
   97            | . type VAR DECLARE matrix
   98 assignment: . VARIABLE ASSIGN expr
   99           | . VVARIABLE ASSIGN vector
  100           | . MVARIABLE ASSIGN matrix
  101 print: . PRINT '(' expr ')'
  102      | . PRINT '(' VVARIABLE ')'
  103      | . PRINT '(' MVARIABLE ')'
  104 expr: . const
  105     | . robotexit
  106     | . robotmove
  107     | . robotwall
  108     | . VARIABLE
  109     | . '-' expr
  110     | . expr '+' expr
  111     | . expr '-' expr
  112     | . expr '/' expr
  113     | . expr '<' expr
  114     | . expr '>' expr
  115     | . '!' expr
  116     | . expr CONJUNCTION expr
  117     | . '(' expr ')'
  118     | . VVARIABLE '(' expr ')'
  119     | . MVARIABLE '(' expr ',' expr ')'
  120     | . error expr
  121 type: . INT
  122     | . CINT
  123     | . VINT
  124     | . MINT
  125     | . CVINT
  126     | . CMINT
  127     | . BOOLEAN
  128     | . CBOOLEAN
  129     | . VBOOLEAN
  130     | . MBOOLEAN
  131     | . CVBOOLEAN
  132     | . CMBOOLEAN
  133 const: . INTEGER
  134      | . BOOL

    error      сдвиг, и переход в состояние 98
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    E          сдвиг, и переход в состояние 319
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 99
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 318

   39 args_func: args_func ',' '[' type VAR ']' .

    $default  вывод с использованием правила 39 (args_func)


State 319

   42 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E .

    $default  вывод с использованием правила 42 (function)
