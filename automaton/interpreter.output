Терминалы не используются в грамматике

   END


Состояние 42 конфликты: 1 сдвига/вывода
Состояние 43 конфликты: 1 сдвига/вывода
Состояние 92 конфликты: 5 сдвига/вывода
Состояние 93 конфликты: 4 сдвига/вывода
Состояние 94 конфликты: 3 сдвига/вывода
Состояние 95 конфликты: 6 сдвига/вывода
Состояние 96 конфликты: 1 сдвига/вывода
Состояние 97 конфликты: 1 сдвига/вывода
Состояние 98 конфликты: 1 сдвига/вывода
Состояние 99 конфликты: 1 сдвига/вывода
Состояние 100 конфликты: 1 сдвига/вывода


Грамматика

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | %empty

    4 stmts: stmt
    5      | stmts stmt

    6 stmt: NEWLINE
    7     | expr NEWLINE
    8     | vector NEWLINE
    9     | matrix NEWLINE
   10     | print NEWLINE
   11     | declaration NEWLINE
   12     | assignment NEWLINE
   13     | '(' stmts ')'

   14 matrix: '{' listexprs '}'
   15       | MVARIABLE
   16       | matrix '*' matrix
   17       | matrix ELEMMULT matrix
   18       | matrix '\''
   19       | matrix RIGHTSHIFT
   20       | matrix LEFTSHIFT

   21 listexprs: vector ',' vector
   22          | listexprs ',' vector

   23 vector: '{' exprs '}'
   24       | VVARIABLE
   25       | vector ELEMMULT vector
   26       | vector RIGHTSHIFT
   27       | vector LEFTSHIFT

   28 exprs: expr ',' expr
   29      | exprs ',' expr

   30 declaration: type VARIABLE DECLARE expr
   31            | type VARIABLE DECLARE vector
   32            | type VARIABLE DECLARE matrix

   33 assignment: VARIABLE ASSIGN expr
   34           | VVARIABLE ASSIGN vector
   35           | MVARIABLE ASSIGN matrix

   36 print: PRINT '(' expr ')'
   37      | PRINT '(' VVARIABLE ')'
   38      | PRINT '(' MVARIABLE ')'

   39 expr: const
   40     | VARIABLE
   41     | '-' expr
   42     | expr '+' expr
   43     | expr '-' expr
   44     | expr '/' expr
   45     | expr '<' expr
   46     | expr '>' expr
   47     | '!' expr
   48     | expr CONJUNCTION expr
   49     | '(' expr ')'

   50 type: INT
   51     | CINT
   52     | VINT
   53     | MINT
   54     | CVINT
   55     | CMINT
   56     | BOOLEAN
   57     | CBOOLEAN
   58     | VBOOLEAN
   59     | MBOOLEAN
   60     | CVBOOLEAN
   61     | CMBOOLEAN

   62 const: INTEGER
   63      | BOOL


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'!' (33) 47
'\'' (39) 18
'(' (40) 13 36 37 38 49
')' (41) 13 36 37 38 49
'*' (42) 16
'+' (43) 42
',' (44) 21 22 28 29
'-' (45) 41 43
'/' (47) 44
'<' (60) 45
'>' (62) 46
'{' (123) 14 23
'}' (125) 14 23
error (256)
END (258)
BOOL <boolPtr> (259) 63
INTEGER <intPtr> (260) 62
VARIABLE <varName> (261) 30 31 32 33 40
VVARIABLE <varName> (262) 24 34 37
MVARIABLE <varName> (263) 15 35 38
CINT <vtype> (264) 51
VINT <vtype> (265) 52
MINT <vtype> (266) 53
INT <vtype> (267) 50
CVINT <vtype> (268) 54
CMINT <vtype> (269) 55
BOOLEAN <vtype> (270) 56
CBOOLEAN <vtype> (271) 57
VBOOLEAN <vtype> (272) 58
MBOOLEAN <vtype> (273) 59
CVBOOLEAN <vtype> (274) 60
CMBOOLEAN <vtype> (275) 61
NEWLINE (276) 6 7 8 9 10 11 12
PRINT (277) 36 37 38
CONJUNCTION (278) 48
ELEMMULT (279) 17 25
LEFTSHIFT (280) 20 27
RIGHTSHIFT (281) 19 26
ASSIGN (282) 33 34 35
DECLARE (283) 30 31 32
UMINUS (284)


Нетерминальные символы с правилами, в которых они появляются

$accept (43)
    налево: 0
program (44)
    налево: 1, направо: 0
function (45)
    налево: 2 3, направо: 1 2
stmts <ptr> (46)
    налево: 4 5, направо: 5 13
stmt <ptr> (47)
    налево: 6 7 8 9 10 11 12 13, направо: 2 4 5
matrix <ptr> (48)
    налево: 14 15 16 17 18 19 20, направо: 9 16 17 18
    19 20 32 35
listexprs <ptr> (49)
    налево: 21 22, направо: 14 22
vector <ptr> (50)
    налево: 23 24 25 26 27, направо: 8 21 22 25 26 27
    31 34
exprs <ptr> (51)
    налево: 28 29, направо: 23 29
declaration <varOpPtr> (52)
    налево: 30 31 32, направо: 11
assignment <varOpPtr> (53)
    налево: 33 34 35, направо: 12
print <ptr> (54)
    налево: 36 37 38, направо: 10
expr <ptr> (55)
    налево: 39 40 41 42 43 44 45 46 47 48 49, направо:
    7 28 29 30 33 36 41 42 43 44 45 46 47 48 49
type <vtype> (56)
    налево: 50 51 52 53 54 55 56 57 58 59 60 61, направо:
    30 31 32
const <ptr> (57)
    налево: 62 63, направо: 39


State 0

    0 $accept: . program $end
    1 program: . function
    2 function: . function stmt
    3         | . %empty

    $default  вывод с использованием правила 3 (function)

    program   переход в состояние 1
    function  переход в состояние 2


State 1

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 3


State 2

    1 program: function .  [$end]
    2 function: function . stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . declaration NEWLINE
   12     | . assignment NEWLINE
   13     | . '(' stmts ')'
   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   17       | . matrix ELEMMULT matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT
   23 vector: . '{' exprs '}'
   24       | . VVARIABLE
   25       | . vector ELEMMULT vector
   26       | . vector RIGHTSHIFT
   27       | . vector LEFTSHIFT
   30 declaration: . type VARIABLE DECLARE expr
   31            | . type VARIABLE DECLARE vector
   32            | . type VARIABLE DECLARE matrix
   33 assignment: . VARIABLE ASSIGN expr
   34           | . VVARIABLE ASSIGN vector
   35           | . MVARIABLE ASSIGN matrix
   36 print: . PRINT '(' expr ')'
   37      | . PRINT '(' VVARIABLE ')'
   38      | . PRINT '(' MVARIABLE ')'
   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   50 type: . INT
   51     | . CINT
   52     | . VINT
   53     | . MINT
   54     | . CVINT
   55     | . CMINT
   56     | . BOOLEAN
   57     | . CBOOLEAN
   58     | . VBOOLEAN
   59     | . MBOOLEAN
   60     | . CVBOOLEAN
   61     | . CMBOOLEAN
   62 const: . INTEGER
   63      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    CINT       сдвиг, и переход в состояние 9
    VINT       сдвиг, и переход в состояние 10
    MINT       сдвиг, и переход в состояние 11
    INT        сдвиг, и переход в состояние 12
    CVINT      сдвиг, и переход в состояние 13
    CMINT      сдвиг, и переход в состояние 14
    BOOLEAN    сдвиг, и переход в состояние 15
    CBOOLEAN   сдвиг, и переход в состояние 16
    VBOOLEAN   сдвиг, и переход в состояние 17
    MBOOLEAN   сдвиг, и переход в состояние 18
    CVBOOLEAN  сдвиг, и переход в состояние 19
    CMBOOLEAN  сдвиг, и переход в состояние 20
    NEWLINE    сдвиг, и переход в состояние 21
    PRINT      сдвиг, и переход в состояние 22
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 25
    '{'        сдвиг, и переход в состояние 26

    $default  вывод с использованием правила 1 (program)

    stmt         переход в состояние 27
    matrix       переход в состояние 28
    vector       переход в состояние 29
    declaration  переход в состояние 30
    assignment   переход в состояние 31
    print        переход в состояние 32
    expr         переход в состояние 33
    type         переход в состояние 34
    const        переход в состояние 35


State 3

    0 $accept: program $end .

    $default  принять


State 4

   63 const: BOOL .

    $default  вывод с использованием правила 63 (const)


State 5

   62 const: INTEGER .

    $default  вывод с использованием правила 62 (const)


State 6

   33 assignment: VARIABLE . ASSIGN expr
   40 expr: VARIABLE .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 36

    $default  вывод с использованием правила 40 (expr)


State 7

   24 vector: VVARIABLE .  [NEWLINE, ELEMMULT, LEFTSHIFT, RIGHTSHIFT]
   34 assignment: VVARIABLE . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 37

    $default  вывод с использованием правила 24 (vector)


State 8

   15 matrix: MVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   35 assignment: MVARIABLE . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 38

    $default  вывод с использованием правила 15 (matrix)


State 9

   51 type: CINT .

    $default  вывод с использованием правила 51 (type)


State 10

   52 type: VINT .

    $default  вывод с использованием правила 52 (type)


State 11

   53 type: MINT .

    $default  вывод с использованием правила 53 (type)


State 12

   50 type: INT .

    $default  вывод с использованием правила 50 (type)


State 13

   54 type: CVINT .

    $default  вывод с использованием правила 54 (type)


State 14

   55 type: CMINT .

    $default  вывод с использованием правила 55 (type)


State 15

   56 type: BOOLEAN .

    $default  вывод с использованием правила 56 (type)


State 16

   57 type: CBOOLEAN .

    $default  вывод с использованием правила 57 (type)


State 17

   58 type: VBOOLEAN .

    $default  вывод с использованием правила 58 (type)


State 18

   59 type: MBOOLEAN .

    $default  вывод с использованием правила 59 (type)


State 19

   60 type: CVBOOLEAN .

    $default  вывод с использованием правила 60 (type)


State 20

   61 type: CMBOOLEAN .

    $default  вывод с использованием правила 61 (type)


State 21

    6 stmt: NEWLINE .

    $default  вывод с использованием правила 6 (stmt)


State 22

   36 print: PRINT . '(' expr ')'
   37      | PRINT . '(' VVARIABLE ')'
   38      | PRINT . '(' MVARIABLE ')'

    '('  сдвиг, и переход в состояние 39


State 23

   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   41     | '-' . expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 42
    const  переход в состояние 35


State 24

   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   47     | '!' . expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 43
    const  переход в состояние 35


State 25

    4 stmts: . stmt
    5      | . stmts stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . declaration NEWLINE
   12     | . assignment NEWLINE
   13     | . '(' stmts ')'
   13     | '(' . stmts ')'
   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   17       | . matrix ELEMMULT matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT
   23 vector: . '{' exprs '}'
   24       | . VVARIABLE
   25       | . vector ELEMMULT vector
   26       | . vector RIGHTSHIFT
   27       | . vector LEFTSHIFT
   30 declaration: . type VARIABLE DECLARE expr
   31            | . type VARIABLE DECLARE vector
   32            | . type VARIABLE DECLARE matrix
   33 assignment: . VARIABLE ASSIGN expr
   34           | . VVARIABLE ASSIGN vector
   35           | . MVARIABLE ASSIGN matrix
   36 print: . PRINT '(' expr ')'
   37      | . PRINT '(' VVARIABLE ')'
   38      | . PRINT '(' MVARIABLE ')'
   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   49     | '(' . expr ')'
   50 type: . INT
   51     | . CINT
   52     | . VINT
   53     | . MINT
   54     | . CVINT
   55     | . CMINT
   56     | . BOOLEAN
   57     | . CBOOLEAN
   58     | . VBOOLEAN
   59     | . MBOOLEAN
   60     | . CVBOOLEAN
   61     | . CMBOOLEAN
   62 const: . INTEGER
   63      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    CINT       сдвиг, и переход в состояние 9
    VINT       сдвиг, и переход в состояние 10
    MINT       сдвиг, и переход в состояние 11
    INT        сдвиг, и переход в состояние 12
    CVINT      сдвиг, и переход в состояние 13
    CMINT      сдвиг, и переход в состояние 14
    BOOLEAN    сдвиг, и переход в состояние 15
    CBOOLEAN   сдвиг, и переход в состояние 16
    VBOOLEAN   сдвиг, и переход в состояние 17
    MBOOLEAN   сдвиг, и переход в состояние 18
    CVBOOLEAN  сдвиг, и переход в состояние 19
    CMBOOLEAN  сдвиг, и переход в состояние 20
    NEWLINE    сдвиг, и переход в состояние 21
    PRINT      сдвиг, и переход в состояние 22
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 25
    '{'        сдвиг, и переход в состояние 26

    stmts        переход в состояние 44
    stmt         переход в состояние 45
    matrix       переход в состояние 28
    vector       переход в состояние 29
    declaration  переход в состояние 30
    assignment   переход в состояние 31
    print        переход в состояние 32
    expr         переход в состояние 46
    type         переход в состояние 34
    const        переход в состояние 35


State 26

   14 matrix: '{' . listexprs '}'
   21 listexprs: . vector ',' vector
   22          | . listexprs ',' vector
   23 vector: . '{' exprs '}'
   23       | '{' . exprs '}'
   24       | . VVARIABLE
   25       | . vector ELEMMULT vector
   26       | . vector RIGHTSHIFT
   27       | . vector LEFTSHIFT
   28 exprs: . expr ',' expr
   29      | . exprs ',' expr
   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 40
    VVARIABLE  сдвиг, и переход в состояние 47
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 41
    '{'        сдвиг, и переход в состояние 48

    listexprs  переход в состояние 49
    vector     переход в состояние 50
    exprs      переход в состояние 51
    expr       переход в состояние 52
    const      переход в состояние 35


State 27

    2 function: function stmt .

    $default  вывод с использованием правила 2 (function)


State 28

    9 stmt: matrix . NEWLINE
   16 matrix: matrix . '*' matrix
   17       | matrix . ELEMMULT matrix
   18       | matrix . '\''
   19       | matrix . RIGHTSHIFT
   20       | matrix . LEFTSHIFT

    NEWLINE     сдвиг, и переход в состояние 53
    ELEMMULT    сдвиг, и переход в состояние 54
    '\''        сдвиг, и переход в состояние 55
    LEFTSHIFT   сдвиг, и переход в состояние 56
    RIGHTSHIFT  сдвиг, и переход в состояние 57
    '*'         сдвиг, и переход в состояние 58


State 29

    8 stmt: vector . NEWLINE
   25 vector: vector . ELEMMULT vector
   26       | vector . RIGHTSHIFT
   27       | vector . LEFTSHIFT

    NEWLINE     сдвиг, и переход в состояние 59
    ELEMMULT    сдвиг, и переход в состояние 60
    LEFTSHIFT   сдвиг, и переход в состояние 61
    RIGHTSHIFT  сдвиг, и переход в состояние 62


State 30

   11 stmt: declaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 63


State 31

   12 stmt: assignment . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 64


State 32

   10 stmt: print . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 65


State 33

    7 stmt: expr . NEWLINE
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 66
    CONJUNCTION  сдвиг, и переход в состояние 67
    '<'          сдвиг, и переход в состояние 68
    '>'          сдвиг, и переход в состояние 69
    '+'          сдвиг, и переход в состояние 70
    '-'          сдвиг, и переход в состояние 71
    '/'          сдвиг, и переход в состояние 72


State 34

   30 declaration: type . VARIABLE DECLARE expr
   31            | type . VARIABLE DECLARE vector
   32            | type . VARIABLE DECLARE matrix

    VARIABLE  сдвиг, и переход в состояние 73


State 35

   39 expr: const .

    $default  вывод с использованием правила 39 (expr)


State 36

   33 assignment: VARIABLE ASSIGN . expr
   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 74
    const  переход в состояние 35


State 37

   23 vector: . '{' exprs '}'
   24       | . VVARIABLE
   25       | . vector ELEMMULT vector
   26       | . vector RIGHTSHIFT
   27       | . vector LEFTSHIFT
   34 assignment: VVARIABLE ASSIGN . vector

    VVARIABLE  сдвиг, и переход в состояние 47
    '{'        сдвиг, и переход в состояние 48

    vector  переход в состояние 75


State 38

   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   17       | . matrix ELEMMULT matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT
   35 assignment: MVARIABLE ASSIGN . matrix

    MVARIABLE  сдвиг, и переход в состояние 76
    '{'        сдвиг, и переход в состояние 77

    matrix  переход в состояние 78


State 39

   36 print: PRINT '(' . expr ')'
   37      | PRINT '(' . VVARIABLE ')'
   38      | PRINT '(' . MVARIABLE ')'
   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 40
    VVARIABLE  сдвиг, и переход в состояние 79
    MVARIABLE  сдвиг, и переход в состояние 80
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 41

    expr   переход в состояние 81
    const  переход в состояние 35


State 40

   40 expr: VARIABLE .

    $default  вывод с использованием правила 40 (expr)


State 41

   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   49     | '(' . expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 82
    const  переход в состояние 35


State 42

   41 expr: '-' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', '+', '-', '/', ')', '}']
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 67

    CONJUNCTION  [вывод с использованием правила 41 (expr)]
    $default     вывод с использованием правила 41 (expr)

    Конфликт между правилом 41 и лексемой '<' разрешен выводом ('<' < UMINUS).
    Конфликт между правилом 41 и лексемой '>' разрешен выводом ('>' < UMINUS).
    Конфликт между правилом 41 и лексемой '+' разрешен выводом ('+' < UMINUS).
    Конфликт между правилом 41 и лексемой '-' разрешен выводом ('-' < UMINUS).
    Конфликт между правилом 41 и лексемой '/' разрешен выводом ('/' < UMINUS).


State 43

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | '!' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', '+', '-', '/', ')', '}']
   48     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 67

    CONJUNCTION  [вывод с использованием правила 47 (expr)]
    $default     вывод с использованием правила 47 (expr)

    Конфликт между правилом 47 и лексемой '<' разрешен выводом ('<' < '!').
    Конфликт между правилом 47 и лексемой '>' разрешен выводом ('>' < '!').
    Конфликт между правилом 47 и лексемой '+' разрешен выводом ('+' < '!').
    Конфликт между правилом 47 и лексемой '-' разрешен выводом ('-' < '!').
    Конфликт между правилом 47 и лексемой '/' разрешен выводом ('/' < '!').


State 44

    5 stmts: stmts . stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . declaration NEWLINE
   12     | . assignment NEWLINE
   13     | . '(' stmts ')'
   13     | '(' stmts . ')'
   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   17       | . matrix ELEMMULT matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT
   23 vector: . '{' exprs '}'
   24       | . VVARIABLE
   25       | . vector ELEMMULT vector
   26       | . vector RIGHTSHIFT
   27       | . vector LEFTSHIFT
   30 declaration: . type VARIABLE DECLARE expr
   31            | . type VARIABLE DECLARE vector
   32            | . type VARIABLE DECLARE matrix
   33 assignment: . VARIABLE ASSIGN expr
   34           | . VVARIABLE ASSIGN vector
   35           | . MVARIABLE ASSIGN matrix
   36 print: . PRINT '(' expr ')'
   37      | . PRINT '(' VVARIABLE ')'
   38      | . PRINT '(' MVARIABLE ')'
   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   50 type: . INT
   51     | . CINT
   52     | . VINT
   53     | . MINT
   54     | . CVINT
   55     | . CMINT
   56     | . BOOLEAN
   57     | . CBOOLEAN
   58     | . VBOOLEAN
   59     | . MBOOLEAN
   60     | . CVBOOLEAN
   61     | . CMBOOLEAN
   62 const: . INTEGER
   63      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    CINT       сдвиг, и переход в состояние 9
    VINT       сдвиг, и переход в состояние 10
    MINT       сдвиг, и переход в состояние 11
    INT        сдвиг, и переход в состояние 12
    CVINT      сдвиг, и переход в состояние 13
    CMINT      сдвиг, и переход в состояние 14
    BOOLEAN    сдвиг, и переход в состояние 15
    CBOOLEAN   сдвиг, и переход в состояние 16
    VBOOLEAN   сдвиг, и переход в состояние 17
    MBOOLEAN   сдвиг, и переход в состояние 18
    CVBOOLEAN  сдвиг, и переход в состояние 19
    CMBOOLEAN  сдвиг, и переход в состояние 20
    NEWLINE    сдвиг, и переход в состояние 21
    PRINT      сдвиг, и переход в состояние 22
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 25
    ')'        сдвиг, и переход в состояние 83
    '{'        сдвиг, и переход в состояние 26

    stmt         переход в состояние 84
    matrix       переход в состояние 28
    vector       переход в состояние 29
    declaration  переход в состояние 30
    assignment   переход в состояние 31
    print        переход в состояние 32
    expr         переход в состояние 33
    type         переход в состояние 34
    const        переход в состояние 35


State 45

    4 stmts: stmt .

    $default  вывод с использованием правила 4 (stmts)


State 46

    7 stmt: expr . NEWLINE
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr
   49     | '(' expr . ')'

    NEWLINE      сдвиг, и переход в состояние 66
    CONJUNCTION  сдвиг, и переход в состояние 67
    '<'          сдвиг, и переход в состояние 68
    '>'          сдвиг, и переход в состояние 69
    '+'          сдвиг, и переход в состояние 70
    '-'          сдвиг, и переход в состояние 71
    '/'          сдвиг, и переход в состояние 72
    ')'          сдвиг, и переход в состояние 85


State 47

   24 vector: VVARIABLE .

    $default  вывод с использованием правила 24 (vector)


State 48

   23 vector: '{' . exprs '}'
   28 exprs: . expr ',' expr
   29      | . exprs ',' expr
   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    exprs  переход в состояние 51
    expr   переход в состояние 52
    const  переход в состояние 35


State 49

   14 matrix: '{' listexprs . '}'
   22 listexprs: listexprs . ',' vector

    ','  сдвиг, и переход в состояние 86
    '}'  сдвиг, и переход в состояние 87


State 50

   21 listexprs: vector . ',' vector
   25 vector: vector . ELEMMULT vector
   26       | vector . RIGHTSHIFT
   27       | vector . LEFTSHIFT

    ELEMMULT    сдвиг, и переход в состояние 60
    LEFTSHIFT   сдвиг, и переход в состояние 61
    RIGHTSHIFT  сдвиг, и переход в состояние 62
    ','         сдвиг, и переход в состояние 88


State 51

   23 vector: '{' exprs . '}'
   29 exprs: exprs . ',' expr

    ','  сдвиг, и переход в состояние 89
    '}'  сдвиг, и переход в состояние 90


State 52

   28 exprs: expr . ',' expr
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 67
    ','          сдвиг, и переход в состояние 91
    '<'          сдвиг, и переход в состояние 68
    '>'          сдвиг, и переход в состояние 69
    '+'          сдвиг, и переход в состояние 70
    '-'          сдвиг, и переход в состояние 71
    '/'          сдвиг, и переход в состояние 72


State 53

    9 stmt: matrix NEWLINE .

    $default  вывод с использованием правила 9 (stmt)


State 54

   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   17       | . matrix ELEMMULT matrix
   17       | matrix ELEMMULT . matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT

    MVARIABLE  сдвиг, и переход в состояние 76
    '{'        сдвиг, и переход в состояние 77

    matrix  переход в состояние 92


State 55

   18 matrix: matrix '\'' .

    $default  вывод с использованием правила 18 (matrix)


State 56

   20 matrix: matrix LEFTSHIFT .

    $default  вывод с использованием правила 20 (matrix)


State 57

   19 matrix: matrix RIGHTSHIFT .

    $default  вывод с использованием правила 19 (matrix)


State 58

   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   16       | matrix '*' . matrix
   17       | . matrix ELEMMULT matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT

    MVARIABLE  сдвиг, и переход в состояние 76
    '{'        сдвиг, и переход в состояние 77

    matrix  переход в состояние 93


State 59

    8 stmt: vector NEWLINE .

    $default  вывод с использованием правила 8 (stmt)


State 60

   23 vector: . '{' exprs '}'
   24       | . VVARIABLE
   25       | . vector ELEMMULT vector
   25       | vector ELEMMULT . vector
   26       | . vector RIGHTSHIFT
   27       | . vector LEFTSHIFT

    VVARIABLE  сдвиг, и переход в состояние 47
    '{'        сдвиг, и переход в состояние 48

    vector  переход в состояние 94


State 61

   27 vector: vector LEFTSHIFT .

    $default  вывод с использованием правила 27 (vector)


State 62

   26 vector: vector RIGHTSHIFT .

    $default  вывод с использованием правила 26 (vector)


State 63

   11 stmt: declaration NEWLINE .

    $default  вывод с использованием правила 11 (stmt)


State 64

   12 stmt: assignment NEWLINE .

    $default  вывод с использованием правила 12 (stmt)


State 65

   10 stmt: print NEWLINE .

    $default  вывод с использованием правила 10 (stmt)


State 66

    7 stmt: expr NEWLINE .

    $default  вывод с использованием правила 7 (stmt)


State 67

   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   48     | expr CONJUNCTION . expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 95
    const  переход в состояние 35


State 68

   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   45     | expr '<' . expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 96
    const  переход в состояние 35


State 69

   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   46     | expr '>' . expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 97
    const  переход в состояние 35


State 70

   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   42     | expr '+' . expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 98
    const  переход в состояние 35


State 71

   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   43     | expr '-' . expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 99
    const  переход в состояние 35


State 72

   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   44     | expr '/' . expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 100
    const  переход в состояние 35


State 73

   30 declaration: type VARIABLE . DECLARE expr
   31            | type VARIABLE . DECLARE vector
   32            | type VARIABLE . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 101


State 74

   33 assignment: VARIABLE ASSIGN expr .  [NEWLINE]
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 67
    '<'          сдвиг, и переход в состояние 68
    '>'          сдвиг, и переход в состояние 69
    '+'          сдвиг, и переход в состояние 70
    '-'          сдвиг, и переход в состояние 71
    '/'          сдвиг, и переход в состояние 72

    $default  вывод с использованием правила 33 (assignment)


State 75

   25 vector: vector . ELEMMULT vector
   26       | vector . RIGHTSHIFT
   27       | vector . LEFTSHIFT
   34 assignment: VVARIABLE ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 60
    LEFTSHIFT   сдвиг, и переход в состояние 61
    RIGHTSHIFT  сдвиг, и переход в состояние 62

    $default  вывод с использованием правила 34 (assignment)


State 76

   15 matrix: MVARIABLE .

    $default  вывод с использованием правила 15 (matrix)


State 77

   14 matrix: '{' . listexprs '}'
   21 listexprs: . vector ',' vector
   22          | . listexprs ',' vector
   23 vector: . '{' exprs '}'
   24       | . VVARIABLE
   25       | . vector ELEMMULT vector
   26       | . vector RIGHTSHIFT
   27       | . vector LEFTSHIFT

    VVARIABLE  сдвиг, и переход в состояние 47
    '{'        сдвиг, и переход в состояние 48

    listexprs  переход в состояние 49
    vector     переход в состояние 50


State 78

   16 matrix: matrix . '*' matrix
   17       | matrix . ELEMMULT matrix
   18       | matrix . '\''
   19       | matrix . RIGHTSHIFT
   20       | matrix . LEFTSHIFT
   35 assignment: MVARIABLE ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 54
    '\''        сдвиг, и переход в состояние 55
    LEFTSHIFT   сдвиг, и переход в состояние 56
    RIGHTSHIFT  сдвиг, и переход в состояние 57
    '*'         сдвиг, и переход в состояние 58

    $default  вывод с использованием правила 35 (assignment)


State 79

   37 print: PRINT '(' VVARIABLE . ')'

    ')'  сдвиг, и переход в состояние 102


State 80

   38 print: PRINT '(' MVARIABLE . ')'

    ')'  сдвиг, и переход в состояние 103


State 81

   36 print: PRINT '(' expr . ')'
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 67
    '<'          сдвиг, и переход в состояние 68
    '>'          сдвиг, и переход в состояние 69
    '+'          сдвиг, и переход в состояние 70
    '-'          сдвиг, и переход в состояние 71
    '/'          сдвиг, и переход в состояние 72
    ')'          сдвиг, и переход в состояние 104


State 82

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr
   49     | '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 67
    '<'          сдвиг, и переход в состояние 68
    '>'          сдвиг, и переход в состояние 69
    '+'          сдвиг, и переход в состояние 70
    '-'          сдвиг, и переход в состояние 71
    '/'          сдвиг, и переход в состояние 72
    ')'          сдвиг, и переход в состояние 85


State 83

   13 stmt: '(' stmts ')' .

    $default  вывод с использованием правила 13 (stmt)


State 84

    5 stmts: stmts stmt .

    $default  вывод с использованием правила 5 (stmts)


State 85

   49 expr: '(' expr ')' .

    $default  вывод с использованием правила 49 (expr)


State 86

   22 listexprs: listexprs ',' . vector
   23 vector: . '{' exprs '}'
   24       | . VVARIABLE
   25       | . vector ELEMMULT vector
   26       | . vector RIGHTSHIFT
   27       | . vector LEFTSHIFT

    VVARIABLE  сдвиг, и переход в состояние 47
    '{'        сдвиг, и переход в состояние 48

    vector  переход в состояние 105


State 87

   14 matrix: '{' listexprs '}' .

    $default  вывод с использованием правила 14 (matrix)


State 88

   21 listexprs: vector ',' . vector
   23 vector: . '{' exprs '}'
   24       | . VVARIABLE
   25       | . vector ELEMMULT vector
   26       | . vector RIGHTSHIFT
   27       | . vector LEFTSHIFT

    VVARIABLE  сдвиг, и переход в состояние 47
    '{'        сдвиг, и переход в состояние 48

    vector  переход в состояние 106


State 89

   29 exprs: exprs ',' . expr
   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 107
    const  переход в состояние 35


State 90

   23 vector: '{' exprs '}' .

    $default  вывод с использованием правила 23 (vector)


State 91

   28 exprs: expr ',' . expr
   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 108
    const  переход в состояние 35


State 92

   16 matrix: matrix . '*' matrix
   17       | matrix . ELEMMULT matrix
   17       | matrix ELEMMULT matrix .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   18       | matrix . '\''
   19       | matrix . RIGHTSHIFT
   20       | matrix . LEFTSHIFT

    ELEMMULT    сдвиг, и переход в состояние 54
    '\''        сдвиг, и переход в состояние 55
    LEFTSHIFT   сдвиг, и переход в состояние 56
    RIGHTSHIFT  сдвиг, и переход в состояние 57
    '*'         сдвиг, и переход в состояние 58

    ELEMMULT    [вывод с использованием правила 17 (matrix)]
    '\''        [вывод с использованием правила 17 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 17 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 17 (matrix)]
    '*'         [вывод с использованием правила 17 (matrix)]
    $default    вывод с использованием правила 17 (matrix)


State 93

   16 matrix: matrix . '*' matrix
   16       | matrix '*' matrix .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   17       | matrix . ELEMMULT matrix
   18       | matrix . '\''
   19       | matrix . RIGHTSHIFT
   20       | matrix . LEFTSHIFT

    ELEMMULT    сдвиг, и переход в состояние 54
    '\''        сдвиг, и переход в состояние 55
    LEFTSHIFT   сдвиг, и переход в состояние 56
    RIGHTSHIFT  сдвиг, и переход в состояние 57

    ELEMMULT    [вывод с использованием правила 16 (matrix)]
    '\''        [вывод с использованием правила 16 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 16 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 16 (matrix)]
    $default    вывод с использованием правила 16 (matrix)

    Конфликт между правилом 16 и лексемой '*' разрешен выводом (%left '*').


State 94

   25 vector: vector . ELEMMULT vector
   25       | vector ELEMMULT vector .  [NEWLINE, ELEMMULT, LEFTSHIFT, RIGHTSHIFT, ',', '}']
   26       | vector . RIGHTSHIFT
   27       | vector . LEFTSHIFT

    ELEMMULT    сдвиг, и переход в состояние 60
    LEFTSHIFT   сдвиг, и переход в состояние 61
    RIGHTSHIFT  сдвиг, и переход в состояние 62

    ELEMMULT    [вывод с использованием правила 25 (vector)]
    LEFTSHIFT   [вывод с использованием правила 25 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 25 (vector)]
    $default    вывод с использованием правила 25 (vector)


State 95

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr
   48     | expr CONJUNCTION expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', '+', '-', '/', ')', '}']

    CONJUNCTION  сдвиг, и переход в состояние 67
    '<'          сдвиг, и переход в состояние 68
    '>'          сдвиг, и переход в состояние 69
    '+'          сдвиг, и переход в состояние 70
    '-'          сдвиг, и переход в состояние 71
    '/'          сдвиг, и переход в состояние 72

    CONJUNCTION  [вывод с использованием правила 48 (expr)]
    '<'          [вывод с использованием правила 48 (expr)]
    '>'          [вывод с использованием правила 48 (expr)]
    '+'          [вывод с использованием правила 48 (expr)]
    '-'          [вывод с использованием правила 48 (expr)]
    '/'          [вывод с использованием правила 48 (expr)]
    $default     вывод с использованием правила 48 (expr)


State 96

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   45     | expr '<' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', ')', '}']
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 67
    '+'          сдвиг, и переход в состояние 70
    '-'          сдвиг, и переход в состояние 71
    '/'          сдвиг, и переход в состояние 72

    CONJUNCTION  [вывод с использованием правила 45 (expr)]
    $default     вывод с использованием правила 45 (expr)

    Конфликт между правилом 45 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 45 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 45 и лексемой '+' разрешен сдвигом ('<' < '+').
    Конфликт между правилом 45 и лексемой '-' разрешен сдвигом ('<' < '-').
    Конфликт между правилом 45 и лексемой '/' разрешен сдвигом ('<' < '/').


State 97

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   46     | expr '>' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', ')', '}']
   48     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 67
    '+'          сдвиг, и переход в состояние 70
    '-'          сдвиг, и переход в состояние 71
    '/'          сдвиг, и переход в состояние 72

    CONJUNCTION  [вывод с использованием правила 46 (expr)]
    $default     вывод с использованием правила 46 (expr)

    Конфликт между правилом 46 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 46 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 46 и лексемой '+' разрешен сдвигом ('>' < '+').
    Конфликт между правилом 46 и лексемой '-' разрешен сдвигом ('>' < '-').
    Конфликт между правилом 46 и лексемой '/' разрешен сдвигом ('>' < '/').


State 98

   42 expr: expr . '+' expr
   42     | expr '+' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', '+', '-', ')', '}']
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 67
    '/'          сдвиг, и переход в состояние 72

    CONJUNCTION  [вывод с использованием правила 42 (expr)]
    $default     вывод с использованием правила 42 (expr)

    Конфликт между правилом 42 и лексемой '<' разрешен выводом ('<' < '+').
    Конфликт между правилом 42 и лексемой '>' разрешен выводом ('>' < '+').
    Конфликт между правилом 42 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 42 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 42 и лексемой '/' разрешен сдвигом ('+' < '/').


State 99

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   43     | expr '-' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', '+', '-', ')', '}']
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 67
    '/'          сдвиг, и переход в состояние 72

    CONJUNCTION  [вывод с использованием правила 43 (expr)]
    $default     вывод с использованием правила 43 (expr)

    Конфликт между правилом 43 и лексемой '<' разрешен выводом ('<' < '-').
    Конфликт между правилом 43 и лексемой '>' разрешен выводом ('>' < '-').
    Конфликт между правилом 43 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 43 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 43 и лексемой '/' разрешен сдвигом ('-' < '/').


State 100

   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   44     | expr '/' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', '+', '-', '/', ')', '}']
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 67

    CONJUNCTION  [вывод с использованием правила 44 (expr)]
    $default     вывод с использованием правила 44 (expr)

    Конфликт между правилом 44 и лексемой '<' разрешен выводом ('<' < '/').
    Конфликт между правилом 44 и лексемой '>' разрешен выводом ('>' < '/').
    Конфликт между правилом 44 и лексемой '+' разрешен выводом ('+' < '/').
    Конфликт между правилом 44 и лексемой '-' разрешен выводом ('-' < '/').
    Конфликт между правилом 44 и лексемой '/' разрешен выводом (%left '/').


State 101

   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   17       | . matrix ELEMMULT matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT
   23 vector: . '{' exprs '}'
   24       | . VVARIABLE
   25       | . vector ELEMMULT vector
   26       | . vector RIGHTSHIFT
   27       | . vector LEFTSHIFT
   30 declaration: type VARIABLE DECLARE . expr
   31            | type VARIABLE DECLARE . vector
   32            | type VARIABLE DECLARE . matrix
   39 expr: . const
   40     | . VARIABLE
   41     | . '-' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '/' expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . '!' expr
   48     | . expr CONJUNCTION expr
   49     | . '(' expr ')'
   62 const: . INTEGER
   63      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 40
    VVARIABLE  сдвиг, и переход в состояние 47
    MVARIABLE  сдвиг, и переход в состояние 76
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 41
    '{'        сдвиг, и переход в состояние 26

    matrix  переход в состояние 109
    vector  переход в состояние 110
    expr    переход в состояние 111
    const   переход в состояние 35


State 102

   37 print: PRINT '(' VVARIABLE ')' .

    $default  вывод с использованием правила 37 (print)


State 103

   38 print: PRINT '(' MVARIABLE ')' .

    $default  вывод с использованием правила 38 (print)


State 104

   36 print: PRINT '(' expr ')' .

    $default  вывод с использованием правила 36 (print)


State 105

   22 listexprs: listexprs ',' vector .  [',', '}']
   25 vector: vector . ELEMMULT vector
   26       | vector . RIGHTSHIFT
   27       | vector . LEFTSHIFT

    ELEMMULT    сдвиг, и переход в состояние 60
    LEFTSHIFT   сдвиг, и переход в состояние 61
    RIGHTSHIFT  сдвиг, и переход в состояние 62

    $default  вывод с использованием правила 22 (listexprs)


State 106

   21 listexprs: vector ',' vector .  [',', '}']
   25 vector: vector . ELEMMULT vector
   26       | vector . RIGHTSHIFT
   27       | vector . LEFTSHIFT

    ELEMMULT    сдвиг, и переход в состояние 60
    LEFTSHIFT   сдвиг, и переход в состояние 61
    RIGHTSHIFT  сдвиг, и переход в состояние 62

    $default  вывод с использованием правила 21 (listexprs)


State 107

   29 exprs: exprs ',' expr .  [',', '}']
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 67
    '<'          сдвиг, и переход в состояние 68
    '>'          сдвиг, и переход в состояние 69
    '+'          сдвиг, и переход в состояние 70
    '-'          сдвиг, и переход в состояние 71
    '/'          сдвиг, и переход в состояние 72

    $default  вывод с использованием правила 29 (exprs)


State 108

   28 exprs: expr ',' expr .  [',', '}']
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 67
    '<'          сдвиг, и переход в состояние 68
    '>'          сдвиг, и переход в состояние 69
    '+'          сдвиг, и переход в состояние 70
    '-'          сдвиг, и переход в состояние 71
    '/'          сдвиг, и переход в состояние 72

    $default  вывод с использованием правила 28 (exprs)


State 109

   16 matrix: matrix . '*' matrix
   17       | matrix . ELEMMULT matrix
   18       | matrix . '\''
   19       | matrix . RIGHTSHIFT
   20       | matrix . LEFTSHIFT
   32 declaration: type VARIABLE DECLARE matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 54
    '\''        сдвиг, и переход в состояние 55
    LEFTSHIFT   сдвиг, и переход в состояние 56
    RIGHTSHIFT  сдвиг, и переход в состояние 57
    '*'         сдвиг, и переход в состояние 58

    $default  вывод с использованием правила 32 (declaration)


State 110

   25 vector: vector . ELEMMULT vector
   26       | vector . RIGHTSHIFT
   27       | vector . LEFTSHIFT
   31 declaration: type VARIABLE DECLARE vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 60
    LEFTSHIFT   сдвиг, и переход в состояние 61
    RIGHTSHIFT  сдвиг, и переход в состояние 62

    $default  вывод с использованием правила 31 (declaration)


State 111

   30 declaration: type VARIABLE DECLARE expr .  [NEWLINE]
   42 expr: expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '/' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   48     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 67
    '<'          сдвиг, и переход в состояние 68
    '>'          сдвиг, и переход в состояние 69
    '+'          сдвиг, и переход в состояние 70
    '-'          сдвиг, и переход в состояние 71
    '/'          сдвиг, и переход в состояние 72

    $default  вывод с использованием правила 30 (declaration)
