Терминалы не используются в грамматике

   END
   ER


Состояние 4 конфликты: 15 сдвига/вывода, 34 вывода/вывода
Состояние 37 конфликты: 33 сдвига/вывода
Состояние 66 конфликты: 5 сдвига/вывода
Состояние 67 конфликты: 4 сдвига/вывода, 11 вывода/вывода
Состояние 68 конфликты: 6 сдвига/вывода, 22 вывода/вывода
Состояние 82 конфликты: 1 сдвига/вывода
Состояние 83 конфликты: 1 сдвига/вывода
Состояние 84 конфликты: 15 сдвига/вывода
Состояние 96 конфликты: 15 сдвига/вывода
Состояние 131 конфликты: 1 сдвига/вывода
Состояние 155 конфликты: 6 сдвига/вывода
Состояние 167 конфликты: 3 сдвига/вывода
Состояние 168 конфликты: 6 сдвига/вывода, 12 вывода/вывода
Состояние 179 конфликты: 5 сдвига/вывода
Состояние 180 конфликты: 4 сдвига/вывода
Состояние 182 конфликты: 4 сдвига/вывода
Состояние 183 конфликты: 3 сдвига/вывода
Состояние 185 конфликты: 6 сдвига/вывода
Состояние 186 конфликты: 1 сдвига/вывода
Состояние 187 конфликты: 1 сдвига/вывода
Состояние 188 конфликты: 1 сдвига/вывода
Состояние 189 конфликты: 1 сдвига/вывода
Состояние 190 конфликты: 1 сдвига/вывода
Состояние 206 конфликты: 4 вывода/вывода


Грамматика

    0 $accept: program $end

    1 program: func

    2 func: func stmts
    3     | func error
    4     | %empty

    5 stmts: stmt
    6      | stmts stmt
    7      | stmts error
    8      | error

    9 stmt: NEWLINE
   10     | expr NEWLINE
   11     | vector NEWLINE
   12     | matrix NEWLINE
   13     | print NEWLINE
   14     | vmdeclaration NEWLINE
   15     | declaration NEWLINE
   16     | assignment NEWLINE
   17     | iff NEWLINE
   18     | forr NEWLINE
   19     | function NEWLINE
   20     | callfunction NEWLINE
   21     | robotactions NEWLINE
   22     | '(' stmts ')'
   23     | error NEWLINE

   24 robotactions: robotright
   25             | robotleft

   26 robotmove: MOVE '(' expr ')'

   27 robotright: RIGHT

   28 robotleft: LEFT

   29 robotwall: WALL

   30 robotexit: ROBEX

   31 iff: IF expr NEWLINE begif stmts endif

   32 begif: B
   33      | BEGIF

   34 endif: E
   35      | ENDIF

   36 begfor: B
   37       | BEGFOR

   38 endfor: E
   39       | ENDFOR

   40 forr: FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor

   41 return_func: type VAR
   42            | return_func ',' type VAR
   43            | return_func error

   44 args_func: '[' type VAR ']'
   45          | args_func ',' '[' type VAR ']'
   46          | args_func error
   47          | error

   48 function_head: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'

   49 function_body: B NEWLINE stmts E

   50 function: function_head function_body

   51 callfunc_args: expr
   52              | vector
   53              | matrix
   54              | callfunc_args ',' expr
   55              | callfunc_args ',' vector
   56              | callfunc_args ',' matrix
   57              | callfunc_args error
   58              | error

   59 callfunction: FVARIABLE '[' callfunc_args ']'
   60             | error '[' callfunc_args ']'

   61 matrix: '{' listexprs '}'
   62       | MVARIABLE '(' vector ',' '[' ']' ')'
   63       | MVARIABLE '(' '[' ']' ',' vector ')'
   64       | MVARIABLE '(' matrix ')'
   65       | MVARIABLE
   66       | matrix '*' matrix
   67       | matrix ELEMMULT matrix
   68       | matrix '\''
   69       | matrix RIGHTSHIFT
   70       | matrix LEFTSHIFT
   71       | vector '\''
   72       | matrix ELEMMULT vector
   73       | matrix ELEMMULT expr
   74       | error matrix
   75       | error vector
   76       | error expr

   77 listexprs: vector ',' vector
   78          | listexprs ',' vector
   79          | listexprs error

   80 vector: '{' exprs '}'
   81       | VVARIABLE '(' vector ',' '[' ']' ')'
   82       | MVARIABLE '(' expr ',' '[' ']' ')'
   83       | MVARIABLE '(' '[' ']' ',' expr ')'
   84       | VVARIABLE
   85       | vector ELEMMULT vector
   86       | vector RIGHTSHIFT
   87       | vector LEFTSHIFT
   88       | vector ELEMMULT expr
   89       | error vector
   90       | error expr

   91 exprs: expr ',' expr
   92      | exprs ',' expr
   93      | exprs error

   94 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr
   95              | VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | MVARIABLE '(' matrix ')' ASSIGN matrix

  102 declaration: type VAR DECLARE expr
  103            | type VAR DECLARE vector
  104            | type VAR DECLARE matrix

  105 assignment: VARIABLE ASSIGN expr
  106           | VVARIABLE ASSIGN vector
  107           | MVARIABLE ASSIGN matrix

  108 print: PRINT '(' expr ')'
  109      | PRINT '(' VVARIABLE ')'
  110      | PRINT '(' MVARIABLE ')'

  111 expr: const
  112     | robotexit
  113     | robotmove
  114     | robotwall
  115     | VARIABLE
  116     | '-' expr
  117     | expr '+' expr
  118     | expr '-' expr
  119     | expr '/' expr
  120     | expr '<' expr
  121     | expr '>' expr
  122     | '!' expr
  123     | expr CONJUNCTION expr
  124     | '(' expr ')'
  125     | VVARIABLE '(' expr ')'
  126     | MVARIABLE '(' expr ',' expr ')'
  127     | error expr

  128 type: INT
  129     | CINT
  130     | VINT
  131     | MINT
  132     | CVINT
  133     | CMINT
  134     | BOOLEAN
  135     | CBOOLEAN
  136     | VBOOLEAN
  137     | MBOOLEAN
  138     | CVBOOLEAN
  139     | CMBOOLEAN

  140 const: INTEGER
  141      | BOOL


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'!' (33) 122
'\'' (39) 68 71
'(' (40) 22 26 48 62 63 64 81 82 83 94 95 96 97 98 99 100 101 108 109
    110 124 125 126
')' (41) 22 26 48 62 63 64 81 82 83 94 95 96 97 98 99 100 101 108 109
    110 124 125 126
'*' (42) 66
'+' (43) 117
',' (44) 42 45 54 55 56 62 63 77 78 81 82 83 91 92 95 96 97 98 99 100
    126
'-' (45) 116 118
'/' (47) 119
'<' (60) 120
'>' (62) 121
'[' (91) 44 45 48 59 60 62 63 81 82 83 95 97 98 99 100
']' (93) 44 45 48 59 60 62 63 81 82 83 95 97 98 99 100
'{' (123) 61 80
'}' (125) 61 80
error (256) 3 7 8 23 43 46 47 57 58 60 74 75 76 79 89 90 93 127
END (258)
BOOL <boolPtr> (259) 141
INTEGER <intPtr> (260) 140
VARIABLE <varName> (261) 105 115
VVARIABLE <varName> (262) 81 84 94 95 106 109 125
MVARIABLE <varName> (263) 62 63 64 65 82 83 96 97 98 99 100 101 107
    110 126
VAR <varName> (264) 41 42 44 45 48 102 103 104
FVARIABLE <varName> (265) 59
CINT <vtype> (266) 129
VINT <vtype> (267) 130
MINT <vtype> (268) 131
INT <vtype> (269) 128
CVINT <vtype> (270) 132
CMINT <vtype> (271) 133
BOOLEAN <vtype> (272) 134
CBOOLEAN <vtype> (273) 135
VBOOLEAN <vtype> (274) 136
MBOOLEAN <vtype> (275) 137
CVBOOLEAN <vtype> (276) 138
CMBOOLEAN <vtype> (277) 139
NEWLINE (278) 9 10 11 12 13 14 15 16 17 18 19 20 21 23 31 40 49
PRINT (279) 108 109 110
CONJUNCTION (280) 123
ELEMMULT (281) 67 72 73 85 88
LEFTSHIFT (282) 70 87
RIGHTSHIFT (283) 69 86
IF (284) 31
FORR (285) 40
ER (286)
DOUBLEDOT (287) 40
B (288) 32 36 49
E (289) 34 38 49
FUNC (290) 48
MOVE (291) 26
RIGHT (292) 27
LEFT (293) 28
ROBEX (294) 30
WALL (295) 29
BEGFOR (296) 37
BEGIF (297) 33
ENDIF (298) 35
ENDFOR (299) 39
ASSIGN (300) 94 95 96 97 98 99 100 101 105 106 107
DECLARE (301) 48 102 103 104
UMINUS (302)


Нетерминальные символы с правилами, в которых они появляются

$accept (63)
    налево: 0
program (64)
    налево: 1, направо: 0
func (65)
    налево: 2 3 4, направо: 1 2 3
stmts <ptr> (66)
    налево: 5 6 7 8, направо: 2 6 7 22 31 40 49
stmt <ptr> (67)
    налево: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23, направо:
    5 6
robotactions <ptr> (68)
    налево: 24 25, направо: 21
robotmove <ptr> (69)
    налево: 26, направо: 113
robotright <ptr> (70)
    налево: 27, направо: 24
robotleft <ptr> (71)
    налево: 28, направо: 25
robotwall <ptr> (72)
    налево: 29, направо: 114
robotexit <ptr> (73)
    налево: 30, направо: 112
iff <ptr> (74)
    налево: 31, направо: 17
begif (75)
    налево: 32 33, направо: 31
endif (76)
    налево: 34 35, направо: 31
begfor (77)
    налево: 36 37, направо: 40
endfor (78)
    налево: 38 39, направо: 40
forr <ptr> (79)
    налево: 40, направо: 18
return_func <ptr> (80)
    налево: 41 42 43, направо: 42 43 48
args_func <ptr> (81)
    налево: 44 45 46 47, направо: 45 46 48
function_head <ptr> (82)
    налево: 48, направо: 50
function_body <ptr> (83)
    налево: 49, направо: 50
function <ptr> (84)
    налево: 50, направо: 19
callfunc_args <ptr> (85)
    налево: 51 52 53 54 55 56 57 58, направо: 54 55 56
    57 59 60
callfunction <ptr> (86)
    налево: 59 60, направо: 20
matrix <ptr> (87)
    налево: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76,
    направо: 12 53 56 64 66 67 68 69 70 72 73 74 99 100 101
    104 107
listexprs <ptr> (88)
    налево: 77 78 79, направо: 61 78 79
vector <ptr> (89)
    налево: 80 81 82 83 84 85 86 87 88 89 90, направо:
    11 52 55 62 63 71 72 75 77 78 81 85 86 87 88 89 95 97 98 99 100
    103 106
exprs <ptr> (90)
    налево: 91 92 93, направо: 80 92 93
vmdeclaration <ptr> (91)
    налево: 94 95 96 97 98 99 100 101, направо: 14
declaration <varOpPtr> (92)
    налево: 102 103 104, направо: 15 40
assignment <varOpPtr> (93)
    налево: 105 106 107, направо: 16
print <ptr> (94)
    налево: 108 109 110, направо: 13
expr <ptr> (95)
    налево: 111 112 113 114 115 116 117 118 119 120 121 122 123
    124 125 126 127, направо: 10 26 31 40 51 54 73 76 82 83
    88 90 91 92 94 96 97 98 102 105 108 116 117 118 119 120 121 122
    123 124 125 126 127
type <vtype> (96)
    налево: 128 129 130 131 132 133 134 135 136 137 138 139,
    направо: 41 42 44 45 102 103 104
const <ptr> (97)
    налево: 140 141, направо: 111


State 0

    0 $accept: . program $end
    1 program: . func
    2 func: . func stmts
    3     | . func error
    4     | . %empty

    $default  вывод с использованием правила 4 (func)

    program  переход в состояние 1
    func     переход в состояние 2


State 1

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 3


State 2

    1 program: func .  [$end]
    2 func: func . stmts
    3     | func . error
    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   50 function: . function_head function_body
   59 callfunction: . FVARIABLE '[' callfunc_args ']'
   60             | . error '[' callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105 assignment: . VARIABLE ASSIGN expr
  106           | . VVARIABLE ASSIGN vector
  107           | . MVARIABLE ASSIGN matrix
  108 print: . PRINT '(' expr ')'
  109      | . PRINT '(' VVARIABLE ')'
  110      | . PRINT '(' MVARIABLE ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 4
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    $end  вывод с использованием правила 1 (program)

    stmts          переход в состояние 37
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 3

    0 $accept: program $end .

    $default  принять


State 4

    3 func: func error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    8 stmts: error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   60 callfunction: error . '[' callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   74       | error . matrix
   75       | . error vector
   75       | error . vector
   76       | . error expr
   76       | error . expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   89       | error . vector
   90       | . error expr
   90       | error . expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  127     | error . expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    NEWLINE    сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 36

    $end       вывод с использованием правила 3 (func)
    $end       [вывод с использованием правила 8 (stmts)]
    error      [вывод с использованием правила 3 (func)]
    error      [вывод с использованием правила 8 (stmts)]
    BOOL       [вывод с использованием правила 3 (func)]
    BOOL       [вывод с использованием правила 8 (stmts)]
    INTEGER    [вывод с использованием правила 3 (func)]
    INTEGER    [вывод с использованием правила 8 (stmts)]
    VARIABLE   [вывод с использованием правила 3 (func)]
    VARIABLE   [вывод с использованием правила 8 (stmts)]
    VVARIABLE  [вывод с использованием правила 3 (func)]
    VVARIABLE  [вывод с использованием правила 8 (stmts)]
    MVARIABLE  [вывод с использованием правила 3 (func)]
    MVARIABLE  [вывод с использованием правила 8 (stmts)]
    FVARIABLE  вывод с использованием правила 3 (func)
    FVARIABLE  [вывод с использованием правила 8 (stmts)]
    CINT       вывод с использованием правила 3 (func)
    CINT       [вывод с использованием правила 8 (stmts)]
    VINT       вывод с использованием правила 3 (func)
    VINT       [вывод с использованием правила 8 (stmts)]
    MINT       вывод с использованием правила 3 (func)
    MINT       [вывод с использованием правила 8 (stmts)]
    INT        вывод с использованием правила 3 (func)
    INT        [вывод с использованием правила 8 (stmts)]
    CVINT      вывод с использованием правила 3 (func)
    CVINT      [вывод с использованием правила 8 (stmts)]
    CMINT      вывод с использованием правила 3 (func)
    CMINT      [вывод с использованием правила 8 (stmts)]
    BOOLEAN    вывод с использованием правила 3 (func)
    BOOLEAN    [вывод с использованием правила 8 (stmts)]
    CBOOLEAN   вывод с использованием правила 3 (func)
    CBOOLEAN   [вывод с использованием правила 8 (stmts)]
    VBOOLEAN   вывод с использованием правила 3 (func)
    VBOOLEAN   [вывод с использованием правила 8 (stmts)]
    MBOOLEAN   вывод с использованием правила 3 (func)
    MBOOLEAN   [вывод с использованием правила 8 (stmts)]
    CVBOOLEAN  вывод с использованием правила 3 (func)
    CVBOOLEAN  [вывод с использованием правила 8 (stmts)]
    CMBOOLEAN  вывод с использованием правила 3 (func)
    CMBOOLEAN  [вывод с использованием правила 8 (stmts)]
    NEWLINE    [вывод с использованием правила 3 (func)]
    NEWLINE    [вывод с использованием правила 8 (stmts)]
    PRINT      вывод с использованием правила 3 (func)
    PRINT      [вывод с использованием правила 8 (stmts)]
    IF         вывод с использованием правила 3 (func)
    IF         [вывод с использованием правила 8 (stmts)]
    FORR       вывод с использованием правила 3 (func)
    FORR       [вывод с использованием правила 8 (stmts)]
    MOVE       [вывод с использованием правила 3 (func)]
    MOVE       [вывод с использованием правила 8 (stmts)]
    RIGHT      вывод с использованием правила 3 (func)
    RIGHT      [вывод с использованием правила 8 (stmts)]
    LEFT       вывод с использованием правила 3 (func)
    LEFT       [вывод с использованием правила 8 (stmts)]
    ROBEX      [вывод с использованием правила 3 (func)]
    ROBEX      [вывод с использованием правила 8 (stmts)]
    WALL       [вывод с использованием правила 3 (func)]
    WALL       [вывод с использованием правила 8 (stmts)]
    '-'        [вывод с использованием правила 3 (func)]
    '-'        [вывод с использованием правила 8 (stmts)]
    '!'        [вывод с использованием правила 3 (func)]
    '!'        [вывод с использованием правила 8 (stmts)]
    '('        [вывод с использованием правила 3 (func)]
    '('        [вывод с использованием правила 8 (stmts)]
    '['        [вывод с использованием правила 3 (func)]
    '['        [вывод с использованием правила 8 (stmts)]
    '{'        [вывод с использованием правила 3 (func)]
    '{'        [вывод с использованием правила 8 (stmts)]

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 58


State 5

  141 const: BOOL .

    $default  вывод с использованием правила 141 (const)


State 6

  140 const: INTEGER .

    $default  вывод с использованием правила 140 (const)


State 7

  105 assignment: VARIABLE . ASSIGN expr
  115 expr: VARIABLE .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 69

    $default  вывод с использованием правила 115 (expr)


State 8

   81 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   84       | VVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   94 vmdeclaration: VVARIABLE . '(' expr ')' ASSIGN expr
   95              | VVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN vector
  106 assignment: VVARIABLE . ASSIGN vector
  125 expr: VVARIABLE . '(' expr ')'

    ASSIGN  сдвиг, и переход в состояние 70
    '('     сдвиг, и переход в состояние 71

    $default  вывод с использованием правила 84 (vector)


State 9

   62 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   63       | MVARIABLE . '(' '[' ']' ',' vector ')'
   64       | MVARIABLE . '(' matrix ')'
   65       | MVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   82 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   83       | MVARIABLE . '(' '[' ']' ',' expr ')'
   96 vmdeclaration: MVARIABLE . '(' expr ',' expr ')' ASSIGN expr
   97              | MVARIABLE . '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | MVARIABLE . '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | MVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | MVARIABLE . '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | MVARIABLE . '(' matrix ')' ASSIGN matrix
  107 assignment: MVARIABLE . ASSIGN matrix
  126 expr: MVARIABLE . '(' expr ',' expr ')'

    ASSIGN  сдвиг, и переход в состояние 72
    '('     сдвиг, и переход в состояние 73

    $default  вывод с использованием правила 65 (matrix)


State 10

   59 callfunction: FVARIABLE . '[' callfunc_args ']'

    '['  сдвиг, и переход в состояние 74


State 11

  129 type: CINT .

    $default  вывод с использованием правила 129 (type)


State 12

  130 type: VINT .

    $default  вывод с использованием правила 130 (type)


State 13

  131 type: MINT .

    $default  вывод с использованием правила 131 (type)


State 14

  128 type: INT .

    $default  вывод с использованием правила 128 (type)


State 15

  132 type: CVINT .

    $default  вывод с использованием правила 132 (type)


State 16

  133 type: CMINT .

    $default  вывод с использованием правила 133 (type)


State 17

  134 type: BOOLEAN .

    $default  вывод с использованием правила 134 (type)


State 18

  135 type: CBOOLEAN .

    $default  вывод с использованием правила 135 (type)


State 19

  136 type: VBOOLEAN .

    $default  вывод с использованием правила 136 (type)


State 20

  137 type: MBOOLEAN .

    $default  вывод с использованием правила 137 (type)


State 21

  138 type: CVBOOLEAN .

    $default  вывод с использованием правила 138 (type)


State 22

  139 type: CMBOOLEAN .

    $default  вывод с использованием правила 139 (type)


State 23

    9 stmt: NEWLINE .

    $default  вывод с использованием правила 9 (stmt)


State 24

  108 print: PRINT . '(' expr ')'
  109      | PRINT . '(' VVARIABLE ')'
  110      | PRINT . '(' MVARIABLE ')'

    '('  сдвиг, и переход в состояние 75


State 25

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: IF . expr NEWLINE begif stmts endif
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 79
    const      переход в состояние 58


State 26

   40 forr: FORR . declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    declaration  переход в состояние 80
    type         переход в состояние 57


State 27

   26 robotmove: MOVE . '(' expr ')'

    '('  сдвиг, и переход в состояние 81


State 28

   27 robotright: RIGHT .

    $default  вывод с использованием правила 27 (robotright)


State 29

   28 robotleft: LEFT .

    $default  вывод с использованием правила 28 (robotleft)


State 30

   30 robotexit: ROBEX .

    $default  вывод с использованием правила 30 (robotexit)


State 31

   29 robotwall: WALL .

    $default  вывод с использованием правила 29 (robotwall)


State 32

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  116     | '-' . expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 82
    const      переход в состояние 58


State 33

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  122     | '!' . expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 83
    const      переход в состояние 58


State 34

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   22     | '(' . stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   50 function: . function_head function_body
   59 callfunction: . FVARIABLE '[' callfunc_args ']'
   60             | . error '[' callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105 assignment: . VARIABLE ASSIGN expr
  106           | . VVARIABLE ASSIGN vector
  107           | . MVARIABLE ASSIGN matrix
  108 print: . PRINT '(' expr ')'
  109      | . PRINT '(' VVARIABLE ')'
  110      | . PRINT '(' MVARIABLE ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  124     | '(' . expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 84
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 85
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 86
    type           переход в состояние 57
    const          переход в состояние 58


State 35

   41 return_func: . type VAR
   42            | . return_func ',' type VAR
   43            | . return_func error
   48 function_head: '[' . return_func ']' DECLARE FUNC VAR '(' args_func ')'
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    return_func  переход в состояние 87
    type         переход в состояние 88


State 36

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   61 matrix: '{' . listexprs '}'
   77 listexprs: . vector ',' vector
   78          | . listexprs ',' vector
   79          | . listexprs error
   80 vector: . '{' exprs '}'
   80       | '{' . exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   91 exprs: . expr ',' expr
   92      | . exprs ',' expr
   93      | . exprs error
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    listexprs  переход в состояние 92
    vector     переход в состояние 93
    exprs      переход в состояние 94
    expr       переход в состояние 95
    const      переход в состояние 58


State 37

    2 func: func stmts .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   50 function: . function_head function_body
   59 callfunction: . FVARIABLE '[' callfunc_args ']'
   60             | . error '[' callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105 assignment: . VARIABLE ASSIGN expr
  106           | . VVARIABLE ASSIGN vector
  107           | . MVARIABLE ASSIGN matrix
  108 print: . PRINT '(' expr ')'
  109      | . PRINT '(' VVARIABLE ')'
  110      | . PRINT '(' MVARIABLE ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    $end       вывод с использованием правила 2 (func)
    error      [вывод с использованием правила 2 (func)]
    BOOL       [вывод с использованием правила 2 (func)]
    INTEGER    [вывод с использованием правила 2 (func)]
    VARIABLE   [вывод с использованием правила 2 (func)]
    VVARIABLE  [вывод с использованием правила 2 (func)]
    MVARIABLE  [вывод с использованием правила 2 (func)]
    FVARIABLE  [вывод с использованием правила 2 (func)]
    CINT       [вывод с использованием правила 2 (func)]
    VINT       [вывод с использованием правила 2 (func)]
    MINT       [вывод с использованием правила 2 (func)]
    INT        [вывод с использованием правила 2 (func)]
    CVINT      [вывод с использованием правила 2 (func)]
    CMINT      [вывод с использованием правила 2 (func)]
    BOOLEAN    [вывод с использованием правила 2 (func)]
    CBOOLEAN   [вывод с использованием правила 2 (func)]
    VBOOLEAN   [вывод с использованием правила 2 (func)]
    MBOOLEAN   [вывод с использованием правила 2 (func)]
    CVBOOLEAN  [вывод с использованием правила 2 (func)]
    CMBOOLEAN  [вывод с использованием правила 2 (func)]
    NEWLINE    [вывод с использованием правила 2 (func)]
    PRINT      [вывод с использованием правила 2 (func)]
    IF         [вывод с использованием правила 2 (func)]
    FORR       [вывод с использованием правила 2 (func)]
    MOVE       [вывод с использованием правила 2 (func)]
    RIGHT      [вывод с использованием правила 2 (func)]
    LEFT       [вывод с использованием правила 2 (func)]
    ROBEX      [вывод с использованием правила 2 (func)]
    WALL       [вывод с использованием правила 2 (func)]
    '-'        [вывод с использованием правила 2 (func)]
    '!'        [вывод с использованием правила 2 (func)]
    '('        [вывод с использованием правила 2 (func)]
    '['        [вывод с использованием правила 2 (func)]
    '{'        [вывод с использованием правила 2 (func)]

    stmt           переход в состояние 97
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 38

    5 stmts: stmt .

    $default  вывод с использованием правила 5 (stmts)


State 39

   21 stmt: robotactions . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 98


State 40

  113 expr: robotmove .

    $default  вывод с использованием правила 113 (expr)


State 41

   24 robotactions: robotright .

    $default  вывод с использованием правила 24 (robotactions)


State 42

   25 robotactions: robotleft .

    $default  вывод с использованием правила 25 (robotactions)


State 43

  114 expr: robotwall .

    $default  вывод с использованием правила 114 (expr)


State 44

  112 expr: robotexit .

    $default  вывод с использованием правила 112 (expr)


State 45

   17 stmt: iff . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 99


State 46

   18 stmt: forr . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 100


State 47

   49 function_body: . B NEWLINE stmts E
   50 function: function_head . function_body

    B  сдвиг, и переход в состояние 101

    function_body  переход в состояние 102


State 48

   19 stmt: function . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 103


State 49

   20 stmt: callfunction . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 104


State 50

   12 stmt: matrix . NEWLINE
   66 matrix: matrix . '*' matrix
   67       | matrix . ELEMMULT matrix
   68       | matrix . '\''
   69       | matrix . RIGHTSHIFT
   70       | matrix . LEFTSHIFT
   72       | matrix . ELEMMULT vector
   73       | matrix . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 105
    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110


State 51

   11 stmt: vector . NEWLINE
   71 matrix: vector . '\''
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 111
    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115


State 52

   14 stmt: vmdeclaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 116


State 53

   15 stmt: declaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 117


State 54

   16 stmt: assignment . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 118


State 55

   13 stmt: print . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 119


State 56

   10 stmt: expr . NEWLINE
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 120
    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 57

  102 declaration: type . VAR DECLARE expr
  103            | type . VAR DECLARE vector
  104            | type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 127


State 58

  111 expr: const .

    $default  вывод с использованием правила 111 (expr)


State 59

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   74       | error . matrix
   75       | . error vector
   75       | error . vector
   76       | . error expr
   76       | error . expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   89       | error . vector
   90       | . error expr
   90       | error . expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  127     | error . expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 58


State 60

  115 expr: VARIABLE .

    $default  вывод с использованием правила 115 (expr)


State 61

   81 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   84       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  125 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 84 (vector)


State 62

   62 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   63       | MVARIABLE . '(' '[' ']' ',' vector ')'
   64       | MVARIABLE . '(' matrix ')'
   65       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   82 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   83       | MVARIABLE . '(' '[' ']' ',' expr ')'
  126 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 129

    $default  вывод с использованием правила 65 (matrix)


State 63

   23 stmt: error NEWLINE .

    $default  вывод с использованием правила 23 (stmt)


State 64

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  124     | '(' . expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 130
    const      переход в состояние 58


State 65

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   51 callfunc_args: . expr
   52              | . vector
   53              | . matrix
   54              | . callfunc_args ',' expr
   55              | . callfunc_args ',' vector
   56              | . callfunc_args ',' matrix
   57              | . callfunc_args error
   58              | . error
   60 callfunction: error '[' . callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 131
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove      переход в состояние 40
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    callfunc_args  переход в состояние 132
    matrix         переход в состояние 133
    vector         переход в состояние 134
    expr           переход в состояние 135
    const          переход в состояние 58


State 66

   66 matrix: matrix . '*' matrix
   67       | matrix . ELEMMULT matrix
   68       | matrix . '\''
   69       | matrix . RIGHTSHIFT
   70       | matrix . LEFTSHIFT
   72       | matrix . ELEMMULT vector
   73       | matrix . ELEMMULT expr
   74       | error matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    ELEMMULT    [вывод с использованием правила 74 (matrix)]
    '\''        [вывод с использованием правила 74 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 74 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 74 (matrix)]
    '*'         [вывод с использованием правила 74 (matrix)]
    $default    вывод с использованием правила 74 (matrix)


State 67

   71 matrix: vector . '\''
   75       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr
   89       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    error       вывод с использованием правила 75 (matrix)
    error       [вывод с использованием правила 89 (vector)]
    NEWLINE     вывод с использованием правила 75 (matrix)
    NEWLINE     [вывод с использованием правила 89 (vector)]
    ELEMMULT    [вывод с использованием правила 75 (matrix)]
    ELEMMULT    [вывод с использованием правила 89 (vector)]
    '\''        [вывод с использованием правила 75 (matrix)]
    '\''        [вывод с использованием правила 89 (vector)]
    LEFTSHIFT   [вывод с использованием правила 75 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 89 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 75 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 89 (vector)]
    ','         вывод с использованием правила 75 (matrix)
    ','         [вывод с использованием правила 89 (vector)]
    DOUBLEDOT   вывод с использованием правила 75 (matrix)
    DOUBLEDOT   [вывод с использованием правила 89 (vector)]
    '*'         вывод с использованием правила 75 (matrix)
    '*'         [вывод с использованием правила 89 (vector)]
    ')'         вывод с использованием правила 75 (matrix)
    ')'         [вывод с использованием правила 89 (vector)]
    ']'         вывод с использованием правила 75 (matrix)
    ']'         [вывод с использованием правила 89 (vector)]
    $default    вывод с использованием правила 75 (matrix)


State 68

   76 matrix: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   90 vector: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr
  127     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']']

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    error        вывод с использованием правила 76 (matrix)
    error        [вывод с использованием правила 90 (vector)]
    error        [вывод с использованием правила 127 (expr)]
    NEWLINE      вывод с использованием правила 76 (matrix)
    NEWLINE      [вывод с использованием правила 90 (vector)]
    NEWLINE      [вывод с использованием правила 127 (expr)]
    CONJUNCTION  [вывод с использованием правила 127 (expr)]
    ELEMMULT     вывод с использованием правила 76 (matrix)
    ELEMMULT     [вывод с использованием правила 90 (vector)]
    ELEMMULT     [вывод с использованием правила 127 (expr)]
    '\''         вывод с использованием правила 76 (matrix)
    '\''         [вывод с использованием правила 90 (vector)]
    '\''         [вывод с использованием правила 127 (expr)]
    LEFTSHIFT    вывод с использованием правила 76 (matrix)
    LEFTSHIFT    [вывод с использованием правила 90 (vector)]
    LEFTSHIFT    [вывод с использованием правила 127 (expr)]
    RIGHTSHIFT   вывод с использованием правила 76 (matrix)
    RIGHTSHIFT   [вывод с использованием правила 90 (vector)]
    RIGHTSHIFT   [вывод с использованием правила 127 (expr)]
    ','          вывод с использованием правила 76 (matrix)
    ','          [вывод с использованием правила 90 (vector)]
    ','          [вывод с использованием правила 127 (expr)]
    DOUBLEDOT    вывод с использованием правила 76 (matrix)
    DOUBLEDOT    [вывод с использованием правила 90 (vector)]
    DOUBLEDOT    [вывод с использованием правила 127 (expr)]
    '<'          [вывод с использованием правила 127 (expr)]
    '>'          [вывод с использованием правила 127 (expr)]
    '+'          [вывод с использованием правила 127 (expr)]
    '-'          [вывод с использованием правила 127 (expr)]
    '*'          вывод с использованием правила 76 (matrix)
    '*'          [вывод с использованием правила 90 (vector)]
    '*'          [вывод с использованием правила 127 (expr)]
    '/'          [вывод с использованием правила 127 (expr)]
    ')'          вывод с использованием правила 76 (matrix)
    ')'          [вывод с использованием правила 90 (vector)]
    ')'          [вывод с использованием правила 127 (expr)]
    ']'          вывод с использованием правила 76 (matrix)
    ']'          [вывод с использованием правила 90 (vector)]
    ']'          [вывод с использованием правила 127 (expr)]
    $default     вывод с использованием правила 76 (matrix)


State 69

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  105 assignment: VARIABLE ASSIGN . expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 136
    const      переход в состояние 58


State 70

   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
  106 assignment: VVARIABLE ASSIGN . vector

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 140


State 71

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | VVARIABLE '(' . vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   94 vmdeclaration: VVARIABLE '(' . expr ')' ASSIGN expr
   95              | VVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN vector
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  125     | VVARIABLE '(' . expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 141
    expr       переход в состояние 142
    const      переход в состояние 58


State 72

   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
  107 assignment: MVARIABLE ASSIGN . matrix

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 145
    vector  переход в состояние 146


State 73

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | MVARIABLE '(' . vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | MVARIABLE '(' . '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   64       | MVARIABLE '(' . matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | MVARIABLE '(' . expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | MVARIABLE '(' . '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   96 vmdeclaration: MVARIABLE '(' . expr ',' expr ')' ASSIGN expr
   97              | MVARIABLE '(' . expr ',' '[' ']' ')' ASSIGN vector
   98              | MVARIABLE '(' . '[' ']' ',' expr ')' ASSIGN vector
   99              | MVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN matrix
  100              | MVARIABLE '(' . '[' ']' ',' vector ')' ASSIGN matrix
  101              | MVARIABLE '(' . matrix ')' ASSIGN matrix
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  126     | MVARIABLE '(' . expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 147
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 148
    vector     переход в состояние 149
    expr       переход в состояние 150
    const      переход в состояние 58


State 74

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   51 callfunc_args: . expr
   52              | . vector
   53              | . matrix
   54              | . callfunc_args ',' expr
   55              | . callfunc_args ',' vector
   56              | . callfunc_args ',' matrix
   57              | . callfunc_args error
   58              | . error
   59 callfunction: FVARIABLE '[' . callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 131
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove      переход в состояние 40
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    callfunc_args  переход в состояние 151
    matrix         переход в состояние 133
    vector         переход в состояние 134
    expr           переход в состояние 135
    const          переход в состояние 58


State 75

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  108 print: PRINT '(' . expr ')'
  109      | PRINT '(' . VVARIABLE ')'
  110      | PRINT '(' . MVARIABLE ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 152
    MVARIABLE  сдвиг, и переход в состояние 153
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 154
    const      переход в состояние 58


State 76

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  127     | error . expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 155
    const      переход в состояние 58


State 77

  125 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 156


State 78

  126 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 157


State 79

   31 iff: IF expr . NEWLINE begif stmts endif
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 158
    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 80

   40 forr: FORR declaration . DOUBLEDOT expr NEWLINE begfor stmts endfor

    DOUBLEDOT  сдвиг, и переход в состояние 159


State 81

   26 robotmove: . MOVE '(' expr ')'
   26          | MOVE '(' . expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 160
    const      переход в состояние 58


State 82

  116 expr: '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  117     | expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 116 (expr)]
    $default     вывод с использованием правила 116 (expr)

    Конфликт между правилом 116 и лексемой '<' разрешен выводом ('<' < UMINUS).
    Конфликт между правилом 116 и лексемой '>' разрешен выводом ('>' < UMINUS).
    Конфликт между правилом 116 и лексемой '+' разрешен выводом ('+' < UMINUS).
    Конфликт между правилом 116 и лексемой '-' разрешен выводом ('-' < UMINUS).
    Конфликт между правилом 116 и лексемой '/' разрешен выводом ('/' < UMINUS).


State 83

  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  122     | '!' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 122 (expr)]
    $default     вывод с использованием правила 122 (expr)

    Конфликт между правилом 122 и лексемой '<' разрешен выводом ('<' < '!').
    Конфликт между правилом 122 и лексемой '>' разрешен выводом ('>' < '!').
    Конфликт между правилом 122 и лексемой '+' разрешен выводом ('+' < '!').
    Конфликт между правилом 122 и лексемой '-' разрешен выводом ('-' < '!').
    Конфликт между правилом 122 и лексемой '/' разрешен выводом ('/' < '!').


State 84

    8 stmts: error .  [error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, E, MOVE, RIGHT, LEFT, ROBEX, WALL, ENDIF, ENDFOR, '-', '!', '(', ')', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   60 callfunction: error . '[' callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   74       | error . matrix
   75       | . error vector
   75       | error . vector
   76       | . error expr
   76       | error . expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   89       | error . vector
   90       | . error expr
   90       | error . expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  127     | error . expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    NEWLINE    сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 36

    error      [вывод с использованием правила 8 (stmts)]
    BOOL       [вывод с использованием правила 8 (stmts)]
    INTEGER    [вывод с использованием правила 8 (stmts)]
    VARIABLE   [вывод с использованием правила 8 (stmts)]
    VVARIABLE  [вывод с использованием правила 8 (stmts)]
    MVARIABLE  [вывод с использованием правила 8 (stmts)]
    FVARIABLE  вывод с использованием правила 8 (stmts)
    CINT       вывод с использованием правила 8 (stmts)
    VINT       вывод с использованием правила 8 (stmts)
    MINT       вывод с использованием правила 8 (stmts)
    INT        вывод с использованием правила 8 (stmts)
    CVINT      вывод с использованием правила 8 (stmts)
    CMINT      вывод с использованием правила 8 (stmts)
    BOOLEAN    вывод с использованием правила 8 (stmts)
    CBOOLEAN   вывод с использованием правила 8 (stmts)
    VBOOLEAN   вывод с использованием правила 8 (stmts)
    MBOOLEAN   вывод с использованием правила 8 (stmts)
    CVBOOLEAN  вывод с использованием правила 8 (stmts)
    CMBOOLEAN  вывод с использованием правила 8 (stmts)
    NEWLINE    [вывод с использованием правила 8 (stmts)]
    PRINT      вывод с использованием правила 8 (stmts)
    IF         вывод с использованием правила 8 (stmts)
    FORR       вывод с использованием правила 8 (stmts)
    E          вывод с использованием правила 8 (stmts)
    MOVE       [вывод с использованием правила 8 (stmts)]
    RIGHT      вывод с использованием правила 8 (stmts)
    LEFT       вывод с использованием правила 8 (stmts)
    ROBEX      [вывод с использованием правила 8 (stmts)]
    WALL       [вывод с использованием правила 8 (stmts)]
    ENDIF      вывод с использованием правила 8 (stmts)
    ENDFOR     вывод с использованием правила 8 (stmts)
    '-'        [вывод с использованием правила 8 (stmts)]
    '!'        [вывод с использованием правила 8 (stmts)]
    '('        [вывод с использованием правила 8 (stmts)]
    ')'        вывод с использованием правила 8 (stmts)
    '['        [вывод с использованием правила 8 (stmts)]
    '{'        [вывод с использованием правила 8 (stmts)]

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 58


State 85

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   22     | '(' stmts . ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   50 function: . function_head function_body
   59 callfunction: . FVARIABLE '[' callfunc_args ']'
   60             | . error '[' callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105 assignment: . VARIABLE ASSIGN expr
  106           | . VVARIABLE ASSIGN vector
  107           | . MVARIABLE ASSIGN matrix
  108 print: . PRINT '(' expr ')'
  109      | . PRINT '(' VVARIABLE ')'
  110      | . PRINT '(' MVARIABLE ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    ')'        сдвиг, и переход в состояние 161
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 97
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 86

   10 stmt: expr . NEWLINE
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr
  124     | '(' expr . ')'

    NEWLINE      сдвиг, и переход в состояние 120
    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 162


State 87

   42 return_func: return_func . ',' type VAR
   43            | return_func . error
   48 function_head: '[' return_func . ']' DECLARE FUNC VAR '(' args_func ')'

    error  сдвиг, и переход в состояние 163
    ','    сдвиг, и переход в состояние 164
    ']'    сдвиг, и переход в состояние 165


State 88

   41 return_func: type . VAR

    VAR  сдвиг, и переход в состояние 166


State 89

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   89       | error . vector
   90       | . error expr
   90       | error . expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  127     | error . expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 167
    expr       переход в состояние 168
    const      переход в состояние 58


State 90

   82 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   83       | MVARIABLE . '(' '[' ']' ',' expr ')'
  126 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 169


State 91

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   80 vector: '{' . exprs '}'
   91 exprs: . expr ',' expr
   92      | . exprs ',' expr
   93      | . exprs error
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    exprs      переход в состояние 94
    expr       переход в состояние 95
    const      переход в состояние 58


State 92

   61 matrix: '{' listexprs . '}'
   78 listexprs: listexprs . ',' vector
   79          | listexprs . error

    error  сдвиг, и переход в состояние 170
    ','    сдвиг, и переход в состояние 171
    '}'    сдвиг, и переход в состояние 172


State 93

   77 listexprs: vector . ',' vector
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 173


State 94

   80 vector: '{' exprs . '}'
   92 exprs: exprs . ',' expr
   93      | exprs . error

    error  сдвиг, и переход в состояние 174
    ','    сдвиг, и переход в состояние 175
    '}'    сдвиг, и переход в состояние 176


State 95

   91 exprs: expr . ',' expr
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 177
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 96

    7 stmts: stmts error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, E, MOVE, RIGHT, LEFT, ROBEX, WALL, ENDIF, ENDFOR, '-', '!', '(', ')', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   60 callfunction: error . '[' callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   74       | error . matrix
   75       | . error vector
   75       | error . vector
   76       | . error expr
   76       | error . expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   89       | error . vector
   90       | . error expr
   90       | error . expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  127     | error . expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    NEWLINE    сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 36

    $end       вывод с использованием правила 7 (stmts)
    error      [вывод с использованием правила 7 (stmts)]
    BOOL       [вывод с использованием правила 7 (stmts)]
    INTEGER    [вывод с использованием правила 7 (stmts)]
    VARIABLE   [вывод с использованием правила 7 (stmts)]
    VVARIABLE  [вывод с использованием правила 7 (stmts)]
    MVARIABLE  [вывод с использованием правила 7 (stmts)]
    FVARIABLE  вывод с использованием правила 7 (stmts)
    CINT       вывод с использованием правила 7 (stmts)
    VINT       вывод с использованием правила 7 (stmts)
    MINT       вывод с использованием правила 7 (stmts)
    INT        вывод с использованием правила 7 (stmts)
    CVINT      вывод с использованием правила 7 (stmts)
    CMINT      вывод с использованием правила 7 (stmts)
    BOOLEAN    вывод с использованием правила 7 (stmts)
    CBOOLEAN   вывод с использованием правила 7 (stmts)
    VBOOLEAN   вывод с использованием правила 7 (stmts)
    MBOOLEAN   вывод с использованием правила 7 (stmts)
    CVBOOLEAN  вывод с использованием правила 7 (stmts)
    CMBOOLEAN  вывод с использованием правила 7 (stmts)
    NEWLINE    [вывод с использованием правила 7 (stmts)]
    PRINT      вывод с использованием правила 7 (stmts)
    IF         вывод с использованием правила 7 (stmts)
    FORR       вывод с использованием правила 7 (stmts)
    E          вывод с использованием правила 7 (stmts)
    MOVE       [вывод с использованием правила 7 (stmts)]
    RIGHT      вывод с использованием правила 7 (stmts)
    LEFT       вывод с использованием правила 7 (stmts)
    ROBEX      [вывод с использованием правила 7 (stmts)]
    WALL       [вывод с использованием правила 7 (stmts)]
    ENDIF      вывод с использованием правила 7 (stmts)
    ENDFOR     вывод с использованием правила 7 (stmts)
    '-'        [вывод с использованием правила 7 (stmts)]
    '!'        [вывод с использованием правила 7 (stmts)]
    '('        [вывод с использованием правила 7 (stmts)]
    ')'        вывод с использованием правила 7 (stmts)
    '['        [вывод с использованием правила 7 (stmts)]
    '{'        [вывод с использованием правила 7 (stmts)]

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 58


State 97

    6 stmts: stmts stmt .

    $default  вывод с использованием правила 6 (stmts)


State 98

   21 stmt: robotactions NEWLINE .

    $default  вывод с использованием правила 21 (stmt)


State 99

   17 stmt: iff NEWLINE .

    $default  вывод с использованием правила 17 (stmt)


State 100

   18 stmt: forr NEWLINE .

    $default  вывод с использованием правила 18 (stmt)


State 101

   49 function_body: B . NEWLINE stmts E

    NEWLINE  сдвиг, и переход в состояние 178


State 102

   50 function: function_head function_body .

    $default  вывод с использованием правила 50 (function)


State 103

   19 stmt: function NEWLINE .

    $default  вывод с использованием правила 19 (stmt)


State 104

   20 stmt: callfunction NEWLINE .

    $default  вывод с использованием правила 20 (stmt)


State 105

   12 stmt: matrix NEWLINE .

    $default  вывод с использованием правила 12 (stmt)


State 106

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   67       | matrix ELEMMULT . matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   72       | matrix ELEMMULT . vector
   73       | . matrix ELEMMULT expr
   73       | matrix ELEMMULT . expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 179
    vector     переход в состояние 180
    expr       переход в состояние 181
    const      переход в состояние 58


State 107

   68 matrix: matrix '\'' .

    $default  вывод с использованием правила 68 (matrix)


State 108

   70 matrix: matrix LEFTSHIFT .

    $default  вывод с использованием правила 70 (matrix)


State 109

   69 matrix: matrix RIGHTSHIFT .

    $default  вывод с использованием правила 69 (matrix)


State 110

   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   66       | matrix '*' . matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 182
    vector  переход в состояние 146


State 111

   11 stmt: vector NEWLINE .

    $default  вывод с использованием правила 11 (stmt)


State 112

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   85       | vector ELEMMULT . vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   88       | vector ELEMMULT . expr
   89       | . error vector
   90       | . error expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 183
    expr       переход в состояние 184
    const      переход в состояние 58


State 113

   71 matrix: vector '\'' .

    $default  вывод с использованием правила 71 (matrix)


State 114

   87 vector: vector LEFTSHIFT .

    $default  вывод с использованием правила 87 (vector)


State 115

   86 vector: vector RIGHTSHIFT .

    $default  вывод с использованием правила 86 (vector)


State 116

   14 stmt: vmdeclaration NEWLINE .

    $default  вывод с использованием правила 14 (stmt)


State 117

   15 stmt: declaration NEWLINE .

    $default  вывод с использованием правила 15 (stmt)


State 118

   16 stmt: assignment NEWLINE .

    $default  вывод с использованием правила 16 (stmt)


State 119

   13 stmt: print NEWLINE .

    $default  вывод с использованием правила 13 (stmt)


State 120

   10 stmt: expr NEWLINE .

    $default  вывод с использованием правила 10 (stmt)


State 121

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  123     | expr CONJUNCTION . expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 185
    const      переход в состояние 58


State 122

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  120     | expr '<' . expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 186
    const      переход в состояние 58


State 123

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  121     | expr '>' . expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 187
    const      переход в состояние 58


State 124

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  117     | expr '+' . expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 188
    const      переход в состояние 58


State 125

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  118     | expr '-' . expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 189
    const      переход в состояние 58


State 126

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  119     | expr '/' . expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 190
    const      переход в состояние 58


State 127

  102 declaration: type VAR . DECLARE expr
  103            | type VAR . DECLARE vector
  104            | type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 191


State 128

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | VVARIABLE '(' . vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  125     | VVARIABLE '(' . expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 192
    expr       переход в состояние 193
    const      переход в состояние 58


State 129

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | MVARIABLE '(' . vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | MVARIABLE '(' . '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   64       | MVARIABLE '(' . matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | MVARIABLE '(' . expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | MVARIABLE '(' . '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  126     | MVARIABLE '(' . expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 194
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 195
    vector     переход в состояние 196
    expr       переход в состояние 197
    const      переход в состояние 58


State 130

  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr
  124     | '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 162


State 131

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   58 callfunc_args: error .  [error, ',', ']']
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   74       | error . matrix
   75       | . error vector
   75       | error . vector
   76       | . error expr
   76       | error . expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   89       | error . vector
   90       | . error expr
   90       | error . expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  127     | error . expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    error  [вывод с использованием правила 58 (callfunc_args)]
    ','    вывод с использованием правила 58 (callfunc_args)
    ']'    вывод с использованием правила 58 (callfunc_args)

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 58


State 132

   54 callfunc_args: callfunc_args . ',' expr
   55              | callfunc_args . ',' vector
   56              | callfunc_args . ',' matrix
   57              | callfunc_args . error
   60 callfunction: error '[' callfunc_args . ']'

    error  сдвиг, и переход в состояние 198
    ','    сдвиг, и переход в состояние 199
    ']'    сдвиг, и переход в состояние 200


State 133

   53 callfunc_args: matrix .  [error, ',', ']']
   66 matrix: matrix . '*' matrix
   67       | matrix . ELEMMULT matrix
   68       | matrix . '\''
   69       | matrix . RIGHTSHIFT
   70       | matrix . LEFTSHIFT
   72       | matrix . ELEMMULT vector
   73       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 53 (callfunc_args)


State 134

   52 callfunc_args: vector .  [error, ',', ']']
   71 matrix: vector . '\''
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 52 (callfunc_args)


State 135

   51 callfunc_args: expr .  [error, ',', ']']
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 51 (callfunc_args)


State 136

  105 assignment: VARIABLE ASSIGN expr .  [NEWLINE]
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 105 (assignment)


State 137

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   89       | error . vector
   90       | . error expr
   90       | error . expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 167
    expr       переход в состояние 201
    const      переход в состояние 58


State 138

   81 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   84       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '}']

    '('  сдвиг, и переход в состояние 202

    $default  вывод с использованием правила 84 (vector)


State 139

   82 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   83       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 203


State 140

   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr
  106 assignment: VVARIABLE ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 106 (assignment)


State 141

   81 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   85       | vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr
   95 vmdeclaration: VVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN vector

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 204


State 142

   94 vmdeclaration: VVARIABLE '(' expr . ')' ASSIGN expr
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr
  125     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 205


State 143

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   74       | error . matrix
   75       | . error vector
   75       | error . vector
   76       | . error expr
   76       | error . expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   89       | error . vector
   90       | . error expr
   90       | error . expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 206
    const      переход в состояние 58


State 144

   62 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   63       | MVARIABLE . '(' '[' ']' ',' vector ')'
   64       | MVARIABLE . '(' matrix ')'
   65       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   82 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   83       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 207

    $default  вывод с использованием правила 65 (matrix)


State 145

   66 matrix: matrix . '*' matrix
   67       | matrix . ELEMMULT matrix
   68       | matrix . '\''
   69       | matrix . RIGHTSHIFT
   70       | matrix . LEFTSHIFT
   72       | matrix . ELEMMULT vector
   73       | matrix . ELEMMULT expr
  107 assignment: MVARIABLE ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 107 (assignment)


State 146

   71 matrix: vector . '\''
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115


State 147

   63 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   83 vector: MVARIABLE '(' '[' . ']' ',' expr ')'
   98 vmdeclaration: MVARIABLE '(' '[' . ']' ',' expr ')' ASSIGN vector
  100              | MVARIABLE '(' '[' . ']' ',' vector ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 208


State 148

   64 matrix: MVARIABLE '(' matrix . ')'
   66       | matrix . '*' matrix
   67       | matrix . ELEMMULT matrix
   68       | matrix . '\''
   69       | matrix . RIGHTSHIFT
   70       | matrix . LEFTSHIFT
   72       | matrix . ELEMMULT vector
   73       | matrix . ELEMMULT expr
  101 vmdeclaration: MVARIABLE '(' matrix . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110
    ')'         сдвиг, и переход в состояние 209


State 149

   62 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   71       | vector . '\''
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr
   99 vmdeclaration: MVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 210


State 150

   82 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
   96 vmdeclaration: MVARIABLE '(' expr . ',' expr ')' ASSIGN expr
   97              | MVARIABLE '(' expr . ',' '[' ']' ')' ASSIGN vector
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr
  126     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 211
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 151

   54 callfunc_args: callfunc_args . ',' expr
   55              | callfunc_args . ',' vector
   56              | callfunc_args . ',' matrix
   57              | callfunc_args . error
   59 callfunction: FVARIABLE '[' callfunc_args . ']'

    error  сдвиг, и переход в состояние 198
    ','    сдвиг, и переход в состояние 199
    ']'    сдвиг, и переход в состояние 212


State 152

  109 print: PRINT '(' VVARIABLE . ')'
  125 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 156
    ')'  сдвиг, и переход в состояние 213


State 153

  110 print: PRINT '(' MVARIABLE . ')'
  126 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 157
    ')'  сдвиг, и переход в состояние 214


State 154

  108 print: PRINT '(' expr . ')'
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 215


State 155

  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr
  127     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 127 (expr)]
    '<'          [вывод с использованием правила 127 (expr)]
    '>'          [вывод с использованием правила 127 (expr)]
    '+'          [вывод с использованием правила 127 (expr)]
    '-'          [вывод с использованием правила 127 (expr)]
    '/'          [вывод с использованием правила 127 (expr)]
    $default     вывод с использованием правила 127 (expr)


State 156

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  125     | VVARIABLE '(' . expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 193
    const      переход в состояние 58


State 157

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  126     | MVARIABLE '(' . expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 216
    const      переход в состояние 58


State 158

   31 iff: IF expr NEWLINE . begif stmts endif
   32 begif: . B
   33      | . BEGIF

    B      сдвиг, и переход в состояние 217
    BEGIF  сдвиг, и переход в состояние 218

    begif  переход в состояние 219


State 159

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   40 forr: FORR declaration DOUBLEDOT . expr NEWLINE begfor stmts endfor
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 220
    const      переход в состояние 58


State 160

   26 robotmove: MOVE '(' expr . ')'
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 221


State 161

   22 stmt: '(' stmts ')' .

    $default  вывод с использованием правила 22 (stmt)


State 162

  124 expr: '(' expr ')' .

    $default  вывод с использованием правила 124 (expr)


State 163

   43 return_func: return_func error .

    $default  вывод с использованием правила 43 (return_func)


State 164

   42 return_func: return_func ',' . type VAR
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 222


State 165

   48 function_head: '[' return_func ']' . DECLARE FUNC VAR '(' args_func ')'

    DECLARE  сдвиг, и переход в состояние 223


State 166

   41 return_func: type VAR .

    $default  вывод с использованием правила 41 (return_func)


State 167

   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr
   89       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    ELEMMULT    [вывод с использованием правила 89 (vector)]
    LEFTSHIFT   [вывод с использованием правила 89 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 89 (vector)]
    $default    вывод с использованием правила 89 (vector)


State 168

   90 vector: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr
  127     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    error        вывод с использованием правила 90 (vector)
    error        [вывод с использованием правила 127 (expr)]
    NEWLINE      вывод с использованием правила 90 (vector)
    NEWLINE      [вывод с использованием правила 127 (expr)]
    CONJUNCTION  [вывод с использованием правила 127 (expr)]
    ELEMMULT     вывод с использованием правила 90 (vector)
    ELEMMULT     [вывод с использованием правила 127 (expr)]
    '\''         вывод с использованием правила 90 (vector)
    '\''         [вывод с использованием правила 127 (expr)]
    LEFTSHIFT    вывод с использованием правила 90 (vector)
    LEFTSHIFT    [вывод с использованием правила 127 (expr)]
    RIGHTSHIFT   вывод с использованием правила 90 (vector)
    RIGHTSHIFT   [вывод с использованием правила 127 (expr)]
    ','          вывод с использованием правила 90 (vector)
    ','          [вывод с использованием правила 127 (expr)]
    DOUBLEDOT    вывод с использованием правила 90 (vector)
    DOUBLEDOT    [вывод с использованием правила 127 (expr)]
    '<'          [вывод с использованием правила 127 (expr)]
    '>'          [вывод с использованием правила 127 (expr)]
    '+'          [вывод с использованием правила 127 (expr)]
    '-'          [вывод с использованием правила 127 (expr)]
    '*'          вывод с использованием правила 90 (vector)
    '*'          [вывод с использованием правила 127 (expr)]
    '/'          [вывод с использованием правила 127 (expr)]
    ')'          вывод с использованием правила 90 (vector)
    ')'          [вывод с использованием правила 127 (expr)]
    ']'          вывод с использованием правила 90 (vector)
    ']'          [вывод с использованием правила 127 (expr)]
    '}'          вывод с использованием правила 90 (vector)
    '}'          [вывод с использованием правила 127 (expr)]
    $default     вывод с использованием правила 90 (vector)


State 169

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   82 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   83       | MVARIABLE '(' . '[' ']' ',' expr ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  126     | MVARIABLE '(' . expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 224

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 197
    const      переход в состояние 58


State 170

   79 listexprs: listexprs error .

    $default  вывод с использованием правила 79 (listexprs)


State 171

   78 listexprs: listexprs ',' . vector
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 225


State 172

   61 matrix: '{' listexprs '}' .

    $default  вывод с использованием правила 61 (matrix)


State 173

   77 listexprs: vector ',' . vector
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 226


State 174

   93 exprs: exprs error .

    $default  вывод с использованием правила 93 (exprs)


State 175

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   92 exprs: exprs ',' . expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 227
    const      переход в состояние 58


State 176

   80 vector: '{' exprs '}' .

    $default  вывод с использованием правила 80 (vector)


State 177

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   91 exprs: expr ',' . expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 228
    const      переход в состояние 58


State 178

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   49 function_body: B NEWLINE . stmts E
   50 function: . function_head function_body
   59 callfunction: . FVARIABLE '[' callfunc_args ']'
   60             | . error '[' callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105 assignment: . VARIABLE ASSIGN expr
  106           | . VVARIABLE ASSIGN vector
  107           | . MVARIABLE ASSIGN matrix
  108 print: . PRINT '(' expr ')'
  109      | . PRINT '(' VVARIABLE ')'
  110      | . PRINT '(' MVARIABLE ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 84
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 229
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 179

   66 matrix: matrix . '*' matrix
   67       | matrix . ELEMMULT matrix
   67       | matrix ELEMMULT matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   68       | matrix . '\''
   69       | matrix . RIGHTSHIFT
   70       | matrix . LEFTSHIFT
   72       | matrix . ELEMMULT vector
   73       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    ELEMMULT    [вывод с использованием правила 67 (matrix)]
    '\''        [вывод с использованием правила 67 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 67 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 67 (matrix)]
    '*'         [вывод с использованием правила 67 (matrix)]
    $default    вывод с использованием правила 67 (matrix)


State 180

   71 matrix: vector . '\''
   72       | matrix ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    ELEMMULT    [вывод с использованием правила 72 (matrix)]
    '\''        [вывод с использованием правила 72 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 72 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 72 (matrix)]
    $default    вывод с использованием правила 72 (matrix)


State 181

   73 matrix: matrix ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 73 (matrix)


State 182

   66 matrix: matrix . '*' matrix
   66       | matrix '*' matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   67       | matrix . ELEMMULT matrix
   68       | matrix . '\''
   69       | matrix . RIGHTSHIFT
   70       | matrix . LEFTSHIFT
   72       | matrix . ELEMMULT vector
   73       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    ELEMMULT    [вывод с использованием правила 66 (matrix)]
    '\''        [вывод с использованием правила 66 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 66 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 66 (matrix)]
    $default    вывод с использованием правила 66 (matrix)

    Конфликт между правилом 66 и лексемой '*' разрешен выводом (%left '*').


State 183

   85 vector: vector . ELEMMULT vector
   85       | vector ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    ELEMMULT    [вывод с использованием правила 85 (vector)]
    LEFTSHIFT   [вывод с использованием правила 85 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 85 (vector)]
    $default    вывод с использованием правила 85 (vector)


State 184

   88 vector: vector ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 88 (vector)


State 185

  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr
  123     | expr CONJUNCTION expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 123 (expr)]
    '<'          [вывод с использованием правила 123 (expr)]
    '>'          [вывод с использованием правила 123 (expr)]
    '+'          [вывод с использованием правила 123 (expr)]
    '-'          [вывод с использованием правила 123 (expr)]
    '/'          [вывод с использованием правила 123 (expr)]
    $default     вывод с использованием правила 123 (expr)


State 186

  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  120     | expr '<' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 120 (expr)]
    $default     вывод с использованием правила 120 (expr)

    Конфликт между правилом 120 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 120 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 120 и лексемой '+' разрешен сдвигом ('<' < '+').
    Конфликт между правилом 120 и лексемой '-' разрешен сдвигом ('<' < '-').
    Конфликт между правилом 120 и лексемой '/' разрешен сдвигом ('<' < '/').


State 187

  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  121     | expr '>' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 121 (expr)]
    $default     вывод с использованием правила 121 (expr)

    Конфликт между правилом 121 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 121 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 121 и лексемой '+' разрешен сдвигом ('>' < '+').
    Конфликт между правилом 121 и лексемой '-' разрешен сдвигом ('>' < '-').
    Конфликт между правилом 121 и лексемой '/' разрешен сдвигом ('>' < '/').


State 188

  117 expr: expr . '+' expr
  117     | expr '+' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 117 (expr)]
    $default     вывод с использованием правила 117 (expr)

    Конфликт между правилом 117 и лексемой '<' разрешен выводом ('<' < '+').
    Конфликт между правилом 117 и лексемой '>' разрешен выводом ('>' < '+').
    Конфликт между правилом 117 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 117 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 117 и лексемой '/' разрешен сдвигом ('+' < '/').


State 189

  117 expr: expr . '+' expr
  118     | expr . '-' expr
  118     | expr '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 118 (expr)]
    $default     вывод с использованием правила 118 (expr)

    Конфликт между правилом 118 и лексемой '<' разрешен выводом ('<' < '-').
    Конфликт между правилом 118 и лексемой '>' разрешен выводом ('>' < '-').
    Конфликт между правилом 118 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 118 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 118 и лексемой '/' разрешен сдвигом ('-' < '/').


State 190

  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  119     | expr '/' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 119 (expr)]
    $default     вывод с использованием правила 119 (expr)

    Конфликт между правилом 119 и лексемой '<' разрешен выводом ('<' < '/').
    Конфликт между правилом 119 и лексемой '>' разрешен выводом ('>' < '/').
    Конфликт между правилом 119 и лексемой '+' разрешен выводом ('+' < '/').
    Конфликт между правилом 119 и лексемой '-' разрешен выводом ('-' < '/').
    Конфликт между правилом 119 и лексемой '/' разрешен выводом (%left '/').


State 191

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
  102 declaration: type VAR DECLARE . expr
  103            | type VAR DECLARE . vector
  104            | type VAR DECLARE . matrix
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 230
    vector     переход в состояние 231
    expr       переход в состояние 232
    const      переход в состояние 58


State 192

   81 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   85       | vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 233


State 193

  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr
  125     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 234


State 194

   63 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   83 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 235


State 195

   64 matrix: MVARIABLE '(' matrix . ')'
   66       | matrix . '*' matrix
   67       | matrix . ELEMMULT matrix
   68       | matrix . '\''
   69       | matrix . RIGHTSHIFT
   70       | matrix . LEFTSHIFT
   72       | matrix . ELEMMULT vector
   73       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110
    ')'         сдвиг, и переход в состояние 236


State 196

   62 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   71       | vector . '\''
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 237


State 197

   82 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr
  126     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 238
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 198

   57 callfunc_args: callfunc_args error .

    $default  вывод с использованием правила 57 (callfunc_args)


State 199

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   54 callfunc_args: callfunc_args ',' . expr
   55              | callfunc_args ',' . vector
   56              | callfunc_args ',' . matrix
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 239
    vector     переход в состояние 240
    expr       переход в состояние 241
    const      переход в состояние 58


State 200

   60 callfunction: error '[' callfunc_args ']' .

    $default  вывод с использованием правила 60 (callfunction)


State 201

   90 vector: error expr .  [error, NEWLINE, ELEMMULT, LEFTSHIFT, RIGHTSHIFT, ',', '}']
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 90 (vector)


State 202

   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | VVARIABLE '(' . vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 192


State 203

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   82 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   83       | MVARIABLE '(' . '[' ']' ',' expr ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 224

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 242
    const      переход в состояние 58


State 204

   81 vector: VVARIABLE '(' vector ',' . '[' ']' ')'
   95 vmdeclaration: VVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN vector

    '['  сдвиг, и переход в состояние 243


State 205

   94 vmdeclaration: VVARIABLE '(' expr ')' . ASSIGN expr
  125 expr: VVARIABLE '(' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 244

    $default  вывод с использованием правила 125 (expr)


State 206

   76 matrix: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   90 vector: error expr .  [ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    ELEMMULT    вывод с использованием правила 76 (matrix)
    ELEMMULT    [вывод с использованием правила 90 (vector)]
    '\''        вывод с использованием правила 76 (matrix)
    '\''        [вывод с использованием правила 90 (vector)]
    LEFTSHIFT   вывод с использованием правила 76 (matrix)
    LEFTSHIFT   [вывод с использованием правила 90 (vector)]
    RIGHTSHIFT  вывод с использованием правила 76 (matrix)
    RIGHTSHIFT  [вывод с использованием правила 90 (vector)]
    $default    вывод с использованием правила 76 (matrix)


State 207

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | MVARIABLE '(' . vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | MVARIABLE '(' . '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   64       | MVARIABLE '(' . matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | MVARIABLE '(' . expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | MVARIABLE '(' . '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 59
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 62
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 194
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 195
    vector     переход в состояние 196
    expr       переход в состояние 242
    const      переход в состояние 58


State 208

   63 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   83 vector: MVARIABLE '(' '[' ']' . ',' expr ')'
   98 vmdeclaration: MVARIABLE '(' '[' ']' . ',' expr ')' ASSIGN vector
  100              | MVARIABLE '(' '[' ']' . ',' vector ')' ASSIGN matrix

    ','  сдвиг, и переход в состояние 245


State 209

   64 matrix: MVARIABLE '(' matrix ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
  101 vmdeclaration: MVARIABLE '(' matrix ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 246

    $default  вывод с использованием правила 64 (matrix)


State 210

   62 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'
   99 vmdeclaration: MVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN matrix

    '['  сдвиг, и переход в состояние 247


State 211

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   82 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
   96 vmdeclaration: MVARIABLE '(' expr ',' . expr ')' ASSIGN expr
   97              | MVARIABLE '(' expr ',' . '[' ']' ')' ASSIGN vector
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  126     | MVARIABLE '(' expr ',' . expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 248

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 249
    const      переход в состояние 58


State 212

   59 callfunction: FVARIABLE '[' callfunc_args ']' .

    $default  вывод с использованием правила 59 (callfunction)


State 213

  109 print: PRINT '(' VVARIABLE ')' .

    $default  вывод с использованием правила 109 (print)


State 214

  110 print: PRINT '(' MVARIABLE ')' .

    $default  вывод с использованием правила 110 (print)


State 215

  108 print: PRINT '(' expr ')' .

    $default  вывод с использованием правила 108 (print)


State 216

  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr
  126     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 250
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 217

   32 begif: B .

    $default  вывод с использованием правила 32 (begif)


State 218

   33 begif: BEGIF .

    $default  вывод с использованием правила 33 (begif)


State 219

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   31    | IF expr NEWLINE begif . stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   50 function: . function_head function_body
   59 callfunction: . FVARIABLE '[' callfunc_args ']'
   60             | . error '[' callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105 assignment: . VARIABLE ASSIGN expr
  106           | . VVARIABLE ASSIGN vector
  107           | . MVARIABLE ASSIGN matrix
  108 print: . PRINT '(' expr ')'
  109      | . PRINT '(' VVARIABLE ')'
  110      | . PRINT '(' MVARIABLE ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 84
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 251
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 220

   40 forr: FORR declaration DOUBLEDOT expr . NEWLINE begfor stmts endfor
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 252
    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 221

   26 robotmove: MOVE '(' expr ')' .

    $default  вывод с использованием правила 26 (robotmove)


State 222

   42 return_func: return_func ',' type . VAR

    VAR  сдвиг, и переход в состояние 253


State 223

   48 function_head: '[' return_func ']' DECLARE . FUNC VAR '(' args_func ')'

    FUNC  сдвиг, и переход в состояние 254


State 224

   83 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 255


State 225

   78 listexprs: listexprs ',' vector .  [error, ',', '}']
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 78 (listexprs)


State 226

   77 listexprs: vector ',' vector .  [error, ',', '}']
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 77 (listexprs)


State 227

   92 exprs: exprs ',' expr .  [error, ',', '}']
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 92 (exprs)


State 228

   91 exprs: expr ',' expr .  [error, ',', '}']
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 91 (exprs)


State 229

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   49 function_body: B NEWLINE stmts . E
   50 function: . function_head function_body
   59 callfunction: . FVARIABLE '[' callfunc_args ']'
   60             | . error '[' callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105 assignment: . VARIABLE ASSIGN expr
  106           | . VVARIABLE ASSIGN vector
  107           | . MVARIABLE ASSIGN matrix
  108 print: . PRINT '(' expr ')'
  109      | . PRINT '(' VVARIABLE ')'
  110      | . PRINT '(' MVARIABLE ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    E          сдвиг, и переход в состояние 256
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 97
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 230

   66 matrix: matrix . '*' matrix
   67       | matrix . ELEMMULT matrix
   68       | matrix . '\''
   69       | matrix . RIGHTSHIFT
   70       | matrix . LEFTSHIFT
   72       | matrix . ELEMMULT vector
   73       | matrix . ELEMMULT expr
  104 declaration: type VAR DECLARE matrix .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 104 (declaration)


State 231

   71 matrix: vector . '\''
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr
  103 declaration: type VAR DECLARE vector .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 103 (declaration)


State 232

  102 declaration: type VAR DECLARE expr .  [NEWLINE, DOUBLEDOT]
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 102 (declaration)


State 233

   81 vector: VVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 257


State 234

  125 expr: VVARIABLE '(' expr ')' .

    $default  вывод с использованием правила 125 (expr)


State 235

   63 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   83 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 258


State 236

   64 matrix: MVARIABLE '(' matrix ')' .

    $default  вывод с использованием правила 64 (matrix)


State 237

   62 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 259


State 238

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   82 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  126     | MVARIABLE '(' expr ',' . expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 260

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 261
    const      переход в состояние 58


State 239

   56 callfunc_args: callfunc_args ',' matrix .  [error, ',', ']']
   66 matrix: matrix . '*' matrix
   67       | matrix . ELEMMULT matrix
   68       | matrix . '\''
   69       | matrix . RIGHTSHIFT
   70       | matrix . LEFTSHIFT
   72       | matrix . ELEMMULT vector
   73       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 56 (callfunc_args)


State 240

   55 callfunc_args: callfunc_args ',' vector .  [error, ',', ']']
   71 matrix: vector . '\''
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 55 (callfunc_args)


State 241

   54 callfunc_args: callfunc_args ',' expr .  [error, ',', ']']
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 54 (callfunc_args)


State 242

   82 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 262
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 243

   81 vector: VVARIABLE '(' vector ',' '[' . ']' ')'
   95 vmdeclaration: VVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 263


State 244

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   94 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN . expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 264
    const      переход в состояние 58


State 245

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   63 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | MVARIABLE '(' '[' ']' ',' . expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   98 vmdeclaration: MVARIABLE '(' '[' ']' ',' . expr ')' ASSIGN vector
  100              | MVARIABLE '(' '[' ']' ',' . vector ')' ASSIGN matrix
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 265
    expr       переход в состояние 266
    const      переход в состояние 58


State 246

   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
  101 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 267
    vector  переход в состояние 146


State 247

   62 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'
   99 vmdeclaration: MVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 268


State 248

   82 vector: MVARIABLE '(' expr ',' '[' . ']' ')'
   97 vmdeclaration: MVARIABLE '(' expr ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 269


State 249

   96 vmdeclaration: MVARIABLE '(' expr ',' expr . ')' ASSIGN expr
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr
  126     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 270


State 250

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  126     | MVARIABLE '(' expr ',' . expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 261
    const      переход в состояние 58


State 251

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   31    | IF expr NEWLINE begif stmts . endif
   34 endif: . E
   35      | . ENDIF
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   50 function: . function_head function_body
   59 callfunction: . FVARIABLE '[' callfunc_args ']'
   60             | . error '[' callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105 assignment: . VARIABLE ASSIGN expr
  106           | . VVARIABLE ASSIGN vector
  107           | . MVARIABLE ASSIGN matrix
  108 print: . PRINT '(' expr ')'
  109      | . PRINT '(' VVARIABLE ')'
  110      | . PRINT '(' MVARIABLE ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    E          сдвиг, и переход в состояние 271
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    ENDIF      сдвиг, и переход в состояние 272
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 97
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    endif          переход в состояние 273
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 252

   36 begfor: . B
   37       | . BEGFOR
   40 forr: FORR declaration DOUBLEDOT expr NEWLINE . begfor stmts endfor

    B       сдвиг, и переход в состояние 274
    BEGFOR  сдвиг, и переход в состояние 275

    begfor  переход в состояние 276


State 253

   42 return_func: return_func ',' type VAR .

    $default  вывод с использованием правила 42 (return_func)


State 254

   48 function_head: '[' return_func ']' DECLARE FUNC . VAR '(' args_func ')'

    VAR  сдвиг, и переход в состояние 277


State 255

   83 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 278


State 256

   49 function_body: B NEWLINE stmts E .

    $default  вывод с использованием правила 49 (function_body)


State 257

   81 vector: VVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 279


State 258

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   63 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | MVARIABLE '(' '[' ']' ',' . expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 61
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 280
    expr       переход в состояние 281
    const      переход в состояние 58


State 259

   62 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 282


State 260

   82 vector: MVARIABLE '(' expr ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 283


State 261

  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr
  126     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 284


State 262

   82 vector: MVARIABLE '(' expr ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 260


State 263

   81 vector: VVARIABLE '(' vector ',' '[' ']' . ')'
   95 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 285


State 264

   94 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr .  [NEWLINE]
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 94 (vmdeclaration)


State 265

   63 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr
  100 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ')'         сдвиг, и переход в состояние 286


State 266

   83 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
   98 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr . ')' ASSIGN vector
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 287


State 267

   66 matrix: matrix . '*' matrix
   67       | matrix . ELEMMULT matrix
   68       | matrix . '\''
   69       | matrix . RIGHTSHIFT
   70       | matrix . LEFTSHIFT
   72       | matrix . ELEMMULT vector
   73       | matrix . ELEMMULT expr
  101 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 101 (vmdeclaration)


State 268

   62 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'
   99 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN matrix

    ')'  сдвиг, и переход в состояние 288


State 269

   82 vector: MVARIABLE '(' expr ',' '[' ']' . ')'
   97 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 289


State 270

   96 vmdeclaration: MVARIABLE '(' expr ',' expr ')' . ASSIGN expr
  126 expr: MVARIABLE '(' expr ',' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 290

    $default  вывод с использованием правила 126 (expr)


State 271

   34 endif: E .

    $default  вывод с использованием правила 34 (endif)


State 272

   35 endif: ENDIF .

    $default  вывод с использованием правила 35 (endif)


State 273

   31 iff: IF expr NEWLINE begif stmts endif .

    $default  вывод с использованием правила 31 (iff)


State 274

   36 begfor: B .

    $default  вывод с использованием правила 36 (begfor)


State 275

   37 begfor: BEGFOR .

    $default  вывод с использованием правила 37 (begfor)


State 276

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   40     | FORR declaration DOUBLEDOT expr NEWLINE begfor . stmts endfor
   48 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   50 function: . function_head function_body
   59 callfunction: . FVARIABLE '[' callfunc_args ']'
   60             | . error '[' callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105 assignment: . VARIABLE ASSIGN expr
  106           | . VVARIABLE ASSIGN vector
  107           | . MVARIABLE ASSIGN matrix
  108 print: . PRINT '(' expr ')'
  109      | . PRINT '(' VVARIABLE ')'
  110      | . PRINT '(' MVARIABLE ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 84
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 291
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 277

   48 function_head: '[' return_func ']' DECLARE FUNC VAR . '(' args_func ')'

    '('  сдвиг, и переход в состояние 292


State 278

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   83 vector: MVARIABLE '(' '[' ']' ',' . expr ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 281
    const      переход в состояние 58


State 279

   81 vector: VVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 293


State 280

   63 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ')'         сдвиг, и переход в состояние 294


State 281

   83 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 295


State 282

   62 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 296


State 283

   82 vector: MVARIABLE '(' expr ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 297


State 284

  126 expr: MVARIABLE '(' expr ',' expr ')' .

    $default  вывод с использованием правила 126 (expr)


State 285

   81 vector: VVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   95 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 298

    $default  вывод с использованием правила 81 (vector)


State 286

   63 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
  100 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 299

    $default  вывод с использованием правила 63 (matrix)


State 287

   83 vector: MVARIABLE '(' '[' ']' ',' expr ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   98 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 300

    $default  вывод с использованием правила 83 (vector)


State 288

   62 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   99 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 301

    $default  вывод с использованием правила 62 (matrix)


State 289

   82 vector: MVARIABLE '(' expr ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   97 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 302

    $default  вывод с использованием правила 82 (vector)


State 290

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   96 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN . expr
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 60
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 303
    const      переход в состояние 58


State 291

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   38 endfor: . E
   39       | . ENDFOR
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   40     | FORR declaration DOUBLEDOT expr NEWLINE begfor stmts . endfor
   48 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   50 function: . function_head function_body
   59 callfunction: . FVARIABLE '[' callfunc_args ']'
   60             | . error '[' callfunc_args ']'
   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   94 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   95              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   96              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   97              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   98              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   99              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  100              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  101              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  102 declaration: . type VAR DECLARE expr
  103            | . type VAR DECLARE vector
  104            | . type VAR DECLARE matrix
  105 assignment: . VARIABLE ASSIGN expr
  106           | . VVARIABLE ASSIGN vector
  107           | . MVARIABLE ASSIGN matrix
  108 print: . PRINT '(' expr ')'
  109      | . PRINT '(' VVARIABLE ')'
  110      | . PRINT '(' MVARIABLE ')'
  111 expr: . const
  112     | . robotexit
  113     | . robotmove
  114     | . robotwall
  115     | . VARIABLE
  116     | . '-' expr
  117     | . expr '+' expr
  118     | . expr '-' expr
  119     | . expr '/' expr
  120     | . expr '<' expr
  121     | . expr '>' expr
  122     | . '!' expr
  123     | . expr CONJUNCTION expr
  124     | . '(' expr ')'
  125     | . VVARIABLE '(' expr ')'
  126     | . MVARIABLE '(' expr ',' expr ')'
  127     | . error expr
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN
  140 const: . INTEGER
  141      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    E          сдвиг, и переход в состояние 304
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    ENDFOR     сдвиг, и переход в состояние 305
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 97
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    endfor         переход в состояние 306
    forr           переход в состояние 46
    function_head  переход в состояние 47
    function       переход в состояние 48
    callfunction   переход в состояние 49
    matrix         переход в состояние 50
    vector         переход в состояние 51
    vmdeclaration  переход в состояние 52
    declaration    переход в состояние 53
    assignment     переход в состояние 54
    print          переход в состояние 55
    expr           переход в состояние 56
    type           переход в состояние 57
    const          переход в состояние 58


State 292

   44 args_func: . '[' type VAR ']'
   45          | . args_func ',' '[' type VAR ']'
   46          | . args_func error
   47          | . error
   48 function_head: '[' return_func ']' DECLARE FUNC VAR '(' . args_func ')'

    error  сдвиг, и переход в состояние 307
    '['    сдвиг, и переход в состояние 308

    args_func  переход в состояние 309


State 293

   81 vector: VVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 81 (vector)


State 294

   63 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .

    $default  вывод с использованием правила 63 (matrix)


State 295

   83 vector: MVARIABLE '(' '[' ']' ',' expr ')' .

    $default  вывод с использованием правила 83 (vector)


State 296

   62 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 62 (matrix)


State 297

   82 vector: MVARIABLE '(' expr ',' '[' ']' ')' .

    $default  вывод с использованием правила 82 (vector)


State 298

   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   95 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 310


State 299

   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
  100 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 311
    vector  переход в состояние 146


State 300

   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   98 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 312


State 301

   61 matrix: . '{' listexprs '}'
   62       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | . MVARIABLE '(' matrix ')'
   65       | . MVARIABLE
   66       | . matrix '*' matrix
   67       | . matrix ELEMMULT matrix
   68       | . matrix '\''
   69       | . matrix RIGHTSHIFT
   70       | . matrix LEFTSHIFT
   71       | . vector '\''
   72       | . matrix ELEMMULT vector
   73       | . matrix ELEMMULT expr
   74       | . error matrix
   75       | . error vector
   76       | . error expr
   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   99 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 313
    vector  переход в состояние 146


State 302

   80 vector: . '{' exprs '}'
   81       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | . VVARIABLE
   85       | . vector ELEMMULT vector
   86       | . vector RIGHTSHIFT
   87       | . vector LEFTSHIFT
   88       | . vector ELEMMULT expr
   89       | . error vector
   90       | . error expr
   97 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 314


State 303

   96 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN expr .  [NEWLINE]
  117 expr: expr . '+' expr
  118     | expr . '-' expr
  119     | expr . '/' expr
  120     | expr . '<' expr
  121     | expr . '>' expr
  123     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 96 (vmdeclaration)


State 304

   38 endfor: E .

    $default  вывод с использованием правила 38 (endfor)


State 305

   39 endfor: ENDFOR .

    $default  вывод с использованием правила 39 (endfor)


State 306

   40 forr: FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor .

    $default  вывод с использованием правила 40 (forr)


State 307

   47 args_func: error .

    $default  вывод с использованием правила 47 (args_func)


State 308

   44 args_func: '[' . type VAR ']'
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 315


State 309

   45 args_func: args_func . ',' '[' type VAR ']'
   46          | args_func . error
   48 function_head: '[' return_func ']' DECLARE FUNC VAR '(' args_func . ')'

    error  сдвиг, и переход в состояние 316
    ','    сдвиг, и переход в состояние 317
    ')'    сдвиг, и переход в состояние 318


State 310

   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr
   95 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 95 (vmdeclaration)


State 311

   66 matrix: matrix . '*' matrix
   67       | matrix . ELEMMULT matrix
   68       | matrix . '\''
   69       | matrix . RIGHTSHIFT
   70       | matrix . LEFTSHIFT
   72       | matrix . ELEMMULT vector
   73       | matrix . ELEMMULT expr
  100 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 100 (vmdeclaration)


State 312

   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr
   98 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 98 (vmdeclaration)


State 313

   66 matrix: matrix . '*' matrix
   67       | matrix . ELEMMULT matrix
   68       | matrix . '\''
   69       | matrix . RIGHTSHIFT
   70       | matrix . LEFTSHIFT
   72       | matrix . ELEMMULT vector
   73       | matrix . ELEMMULT expr
   99 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 99 (vmdeclaration)


State 314

   85 vector: vector . ELEMMULT vector
   86       | vector . RIGHTSHIFT
   87       | vector . LEFTSHIFT
   88       | vector . ELEMMULT expr
   97 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 97 (vmdeclaration)


State 315

   44 args_func: '[' type . VAR ']'

    VAR  сдвиг, и переход в состояние 319


State 316

   46 args_func: args_func error .

    $default  вывод с использованием правила 46 (args_func)


State 317

   45 args_func: args_func ',' . '[' type VAR ']'

    '['  сдвиг, и переход в состояние 320


State 318

   48 function_head: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' .

    $default  вывод с использованием правила 48 (function_head)


State 319

   44 args_func: '[' type VAR . ']'

    ']'  сдвиг, и переход в состояние 321


State 320

   45 args_func: args_func ',' '[' . type VAR ']'
  128 type: . INT
  129     | . CINT
  130     | . VINT
  131     | . MINT
  132     | . CVINT
  133     | . CMINT
  134     | . BOOLEAN
  135     | . CBOOLEAN
  136     | . VBOOLEAN
  137     | . MBOOLEAN
  138     | . CVBOOLEAN
  139     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 322


State 321

   44 args_func: '[' type VAR ']' .

    $default  вывод с использованием правила 44 (args_func)


State 322

   45 args_func: args_func ',' '[' type . VAR ']'

    VAR  сдвиг, и переход в состояние 323


State 323

   45 args_func: args_func ',' '[' type VAR . ']'

    ']'  сдвиг, и переход в состояние 324


State 324

   45 args_func: args_func ',' '[' type VAR ']' .

    $default  вывод с использованием правила 45 (args_func)
