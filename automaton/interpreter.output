Терминалы не используются в грамматике

   END


Состояние 42 конфликты: 1 сдвига/вывода
Состояние 43 конфликты: 1 сдвига/вывода
Состояние 93 конфликты: 5 сдвига/вывода
Состояние 94 конфликты: 4 сдвига/вывода
Состояние 96 конфликты: 4 сдвига/вывода
Состояние 97 конфликты: 3 сдвига/вывода
Состояние 99 конфликты: 6 сдвига/вывода
Состояние 100 конфликты: 1 сдвига/вывода
Состояние 101 конфликты: 1 сдвига/вывода
Состояние 102 конфликты: 1 сдвига/вывода
Состояние 103 конфликты: 1 сдвига/вывода
Состояние 104 конфликты: 1 сдвига/вывода


Грамматика

    0 $accept: program $end

    1 program: function

    2 function: function stmt
    3         | %empty

    4 stmts: stmt
    5      | stmts stmt

    6 stmt: NEWLINE
    7     | expr NEWLINE
    8     | vector NEWLINE
    9     | matrix NEWLINE
   10     | print NEWLINE
   11     | declaration NEWLINE
   12     | assignment NEWLINE
   13     | '(' stmts ')'

   14 matrix: '{' listexprs '}'
   15       | MVARIABLE
   16       | matrix '*' matrix
   17       | matrix ELEMMULT matrix
   18       | matrix '\''
   19       | matrix RIGHTSHIFT
   20       | matrix LEFTSHIFT
   21       | vector '\''
   22       | matrix ELEMMULT vector
   23       | matrix ELEMMULT expr

   24 listexprs: vector ',' vector
   25          | listexprs ',' vector

   26 vector: '{' exprs '}'
   27       | VVARIABLE
   28       | vector ELEMMULT vector
   29       | vector RIGHTSHIFT
   30       | vector LEFTSHIFT
   31       | vector ELEMMULT expr

   32 exprs: expr ',' expr
   33      | exprs ',' expr

   34 declaration: type VARIABLE DECLARE expr
   35            | type VARIABLE DECLARE vector
   36            | type VARIABLE DECLARE matrix

   37 assignment: VARIABLE ASSIGN expr
   38           | VVARIABLE ASSIGN vector
   39           | MVARIABLE ASSIGN matrix

   40 print: PRINT '(' expr ')'
   41      | PRINT '(' VVARIABLE ')'
   42      | PRINT '(' MVARIABLE ')'

   43 expr: const
   44     | VARIABLE
   45     | '-' expr
   46     | expr '+' expr
   47     | expr '-' expr
   48     | expr '/' expr
   49     | expr '<' expr
   50     | expr '>' expr
   51     | '!' expr
   52     | expr CONJUNCTION expr
   53     | '(' expr ')'

   54 type: INT
   55     | CINT
   56     | VINT
   57     | MINT
   58     | CVINT
   59     | CMINT
   60     | BOOLEAN
   61     | CBOOLEAN
   62     | VBOOLEAN
   63     | MBOOLEAN
   64     | CVBOOLEAN
   65     | CMBOOLEAN

   66 const: INTEGER
   67      | BOOL


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'!' (33) 51
'\'' (39) 18 21
'(' (40) 13 40 41 42 53
')' (41) 13 40 41 42 53
'*' (42) 16
'+' (43) 46
',' (44) 24 25 32 33
'-' (45) 45 47
'/' (47) 48
'<' (60) 49
'>' (62) 50
'{' (123) 14 26
'}' (125) 14 26
error (256)
END (258)
BOOL <boolPtr> (259) 67
INTEGER <intPtr> (260) 66
VARIABLE <varName> (261) 34 35 36 37 44
VVARIABLE <varName> (262) 27 38 41
MVARIABLE <varName> (263) 15 39 42
CINT <vtype> (264) 55
VINT <vtype> (265) 56
MINT <vtype> (266) 57
INT <vtype> (267) 54
CVINT <vtype> (268) 58
CMINT <vtype> (269) 59
BOOLEAN <vtype> (270) 60
CBOOLEAN <vtype> (271) 61
VBOOLEAN <vtype> (272) 62
MBOOLEAN <vtype> (273) 63
CVBOOLEAN <vtype> (274) 64
CMBOOLEAN <vtype> (275) 65
NEWLINE (276) 6 7 8 9 10 11 12
PRINT (277) 40 41 42
CONJUNCTION (278) 52
ELEMMULT (279) 17 22 23 28 31
LEFTSHIFT (280) 20 30
RIGHTSHIFT (281) 19 29
ASSIGN (282) 37 38 39
DECLARE (283) 34 35 36
UMINUS (284)


Нетерминальные символы с правилами, в которых они появляются

$accept (43)
    налево: 0
program (44)
    налево: 1, направо: 0
function (45)
    налево: 2 3, направо: 1 2
stmts <ptr> (46)
    налево: 4 5, направо: 5 13
stmt <ptr> (47)
    налево: 6 7 8 9 10 11 12 13, направо: 2 4 5
matrix <ptr> (48)
    налево: 14 15 16 17 18 19 20 21 22 23, направо: 9
    16 17 18 19 20 22 23 36 39
listexprs <ptr> (49)
    налево: 24 25, направо: 14 25
vector <ptr> (50)
    налево: 26 27 28 29 30 31, направо: 8 21 22 24 25
    28 29 30 31 35 38
exprs <ptr> (51)
    налево: 32 33, направо: 26 33
declaration <varOpPtr> (52)
    налево: 34 35 36, направо: 11
assignment <varOpPtr> (53)
    налево: 37 38 39, направо: 12
print <ptr> (54)
    налево: 40 41 42, направо: 10
expr <ptr> (55)
    налево: 43 44 45 46 47 48 49 50 51 52 53, направо:
    7 23 31 32 33 34 37 40 45 46 47 48 49 50 51 52 53
type <vtype> (56)
    налево: 54 55 56 57 58 59 60 61 62 63 64 65, направо:
    34 35 36
const <ptr> (57)
    налево: 66 67, направо: 43


State 0

    0 $accept: . program $end
    1 program: . function
    2 function: . function stmt
    3         | . %empty

    $default  вывод с использованием правила 3 (function)

    program   переход в состояние 1
    function  переход в состояние 2


State 1

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 3


State 2

    1 program: function .  [$end]
    2 function: function . stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . declaration NEWLINE
   12     | . assignment NEWLINE
   13     | . '(' stmts ')'
   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   17       | . matrix ELEMMULT matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT
   21       | . vector '\''
   22       | . matrix ELEMMULT vector
   23       | . matrix ELEMMULT expr
   26 vector: . '{' exprs '}'
   27       | . VVARIABLE
   28       | . vector ELEMMULT vector
   29       | . vector RIGHTSHIFT
   30       | . vector LEFTSHIFT
   31       | . vector ELEMMULT expr
   34 declaration: . type VARIABLE DECLARE expr
   35            | . type VARIABLE DECLARE vector
   36            | . type VARIABLE DECLARE matrix
   37 assignment: . VARIABLE ASSIGN expr
   38           | . VVARIABLE ASSIGN vector
   39           | . MVARIABLE ASSIGN matrix
   40 print: . PRINT '(' expr ')'
   41      | . PRINT '(' VVARIABLE ')'
   42      | . PRINT '(' MVARIABLE ')'
   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   54 type: . INT
   55     | . CINT
   56     | . VINT
   57     | . MINT
   58     | . CVINT
   59     | . CMINT
   60     | . BOOLEAN
   61     | . CBOOLEAN
   62     | . VBOOLEAN
   63     | . MBOOLEAN
   64     | . CVBOOLEAN
   65     | . CMBOOLEAN
   66 const: . INTEGER
   67      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    CINT       сдвиг, и переход в состояние 9
    VINT       сдвиг, и переход в состояние 10
    MINT       сдвиг, и переход в состояние 11
    INT        сдвиг, и переход в состояние 12
    CVINT      сдвиг, и переход в состояние 13
    CMINT      сдвиг, и переход в состояние 14
    BOOLEAN    сдвиг, и переход в состояние 15
    CBOOLEAN   сдвиг, и переход в состояние 16
    VBOOLEAN   сдвиг, и переход в состояние 17
    MBOOLEAN   сдвиг, и переход в состояние 18
    CVBOOLEAN  сдвиг, и переход в состояние 19
    CMBOOLEAN  сдвиг, и переход в состояние 20
    NEWLINE    сдвиг, и переход в состояние 21
    PRINT      сдвиг, и переход в состояние 22
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 25
    '{'        сдвиг, и переход в состояние 26

    $default  вывод с использованием правила 1 (program)

    stmt         переход в состояние 27
    matrix       переход в состояние 28
    vector       переход в состояние 29
    declaration  переход в состояние 30
    assignment   переход в состояние 31
    print        переход в состояние 32
    expr         переход в состояние 33
    type         переход в состояние 34
    const        переход в состояние 35


State 3

    0 $accept: program $end .

    $default  принять


State 4

   67 const: BOOL .

    $default  вывод с использованием правила 67 (const)


State 5

   66 const: INTEGER .

    $default  вывод с использованием правила 66 (const)


State 6

   37 assignment: VARIABLE . ASSIGN expr
   44 expr: VARIABLE .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 36

    $default  вывод с использованием правила 44 (expr)


State 7

   27 vector: VVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   38 assignment: VVARIABLE . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 37

    $default  вывод с использованием правила 27 (vector)


State 8

   15 matrix: MVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   39 assignment: MVARIABLE . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 38

    $default  вывод с использованием правила 15 (matrix)


State 9

   55 type: CINT .

    $default  вывод с использованием правила 55 (type)


State 10

   56 type: VINT .

    $default  вывод с использованием правила 56 (type)


State 11

   57 type: MINT .

    $default  вывод с использованием правила 57 (type)


State 12

   54 type: INT .

    $default  вывод с использованием правила 54 (type)


State 13

   58 type: CVINT .

    $default  вывод с использованием правила 58 (type)


State 14

   59 type: CMINT .

    $default  вывод с использованием правила 59 (type)


State 15

   60 type: BOOLEAN .

    $default  вывод с использованием правила 60 (type)


State 16

   61 type: CBOOLEAN .

    $default  вывод с использованием правила 61 (type)


State 17

   62 type: VBOOLEAN .

    $default  вывод с использованием правила 62 (type)


State 18

   63 type: MBOOLEAN .

    $default  вывод с использованием правила 63 (type)


State 19

   64 type: CVBOOLEAN .

    $default  вывод с использованием правила 64 (type)


State 20

   65 type: CMBOOLEAN .

    $default  вывод с использованием правила 65 (type)


State 21

    6 stmt: NEWLINE .

    $default  вывод с использованием правила 6 (stmt)


State 22

   40 print: PRINT . '(' expr ')'
   41      | PRINT . '(' VVARIABLE ')'
   42      | PRINT . '(' MVARIABLE ')'

    '('  сдвиг, и переход в состояние 39


State 23

   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   45     | '-' . expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 42
    const  переход в состояние 35


State 24

   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   51     | '!' . expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 43
    const  переход в состояние 35


State 25

    4 stmts: . stmt
    5      | . stmts stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . declaration NEWLINE
   12     | . assignment NEWLINE
   13     | . '(' stmts ')'
   13     | '(' . stmts ')'
   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   17       | . matrix ELEMMULT matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT
   21       | . vector '\''
   22       | . matrix ELEMMULT vector
   23       | . matrix ELEMMULT expr
   26 vector: . '{' exprs '}'
   27       | . VVARIABLE
   28       | . vector ELEMMULT vector
   29       | . vector RIGHTSHIFT
   30       | . vector LEFTSHIFT
   31       | . vector ELEMMULT expr
   34 declaration: . type VARIABLE DECLARE expr
   35            | . type VARIABLE DECLARE vector
   36            | . type VARIABLE DECLARE matrix
   37 assignment: . VARIABLE ASSIGN expr
   38           | . VVARIABLE ASSIGN vector
   39           | . MVARIABLE ASSIGN matrix
   40 print: . PRINT '(' expr ')'
   41      | . PRINT '(' VVARIABLE ')'
   42      | . PRINT '(' MVARIABLE ')'
   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   53     | '(' . expr ')'
   54 type: . INT
   55     | . CINT
   56     | . VINT
   57     | . MINT
   58     | . CVINT
   59     | . CMINT
   60     | . BOOLEAN
   61     | . CBOOLEAN
   62     | . VBOOLEAN
   63     | . MBOOLEAN
   64     | . CVBOOLEAN
   65     | . CMBOOLEAN
   66 const: . INTEGER
   67      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    CINT       сдвиг, и переход в состояние 9
    VINT       сдвиг, и переход в состояние 10
    MINT       сдвиг, и переход в состояние 11
    INT        сдвиг, и переход в состояние 12
    CVINT      сдвиг, и переход в состояние 13
    CMINT      сдвиг, и переход в состояние 14
    BOOLEAN    сдвиг, и переход в состояние 15
    CBOOLEAN   сдвиг, и переход в состояние 16
    VBOOLEAN   сдвиг, и переход в состояние 17
    MBOOLEAN   сдвиг, и переход в состояние 18
    CVBOOLEAN  сдвиг, и переход в состояние 19
    CMBOOLEAN  сдвиг, и переход в состояние 20
    NEWLINE    сдвиг, и переход в состояние 21
    PRINT      сдвиг, и переход в состояние 22
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 25
    '{'        сдвиг, и переход в состояние 26

    stmts        переход в состояние 44
    stmt         переход в состояние 45
    matrix       переход в состояние 28
    vector       переход в состояние 29
    declaration  переход в состояние 30
    assignment   переход в состояние 31
    print        переход в состояние 32
    expr         переход в состояние 46
    type         переход в состояние 34
    const        переход в состояние 35


State 26

   14 matrix: '{' . listexprs '}'
   24 listexprs: . vector ',' vector
   25          | . listexprs ',' vector
   26 vector: . '{' exprs '}'
   26       | '{' . exprs '}'
   27       | . VVARIABLE
   28       | . vector ELEMMULT vector
   29       | . vector RIGHTSHIFT
   30       | . vector LEFTSHIFT
   31       | . vector ELEMMULT expr
   32 exprs: . expr ',' expr
   33      | . exprs ',' expr
   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 40
    VVARIABLE  сдвиг, и переход в состояние 47
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 41
    '{'        сдвиг, и переход в состояние 48

    listexprs  переход в состояние 49
    vector     переход в состояние 50
    exprs      переход в состояние 51
    expr       переход в состояние 52
    const      переход в состояние 35


State 27

    2 function: function stmt .

    $default  вывод с использованием правила 2 (function)


State 28

    9 stmt: matrix . NEWLINE
   16 matrix: matrix . '*' matrix
   17       | matrix . ELEMMULT matrix
   18       | matrix . '\''
   19       | matrix . RIGHTSHIFT
   20       | matrix . LEFTSHIFT
   22       | matrix . ELEMMULT vector
   23       | matrix . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 53
    ELEMMULT    сдвиг, и переход в состояние 54
    '\''        сдвиг, и переход в состояние 55
    LEFTSHIFT   сдвиг, и переход в состояние 56
    RIGHTSHIFT  сдвиг, и переход в состояние 57
    '*'         сдвиг, и переход в состояние 58


State 29

    8 stmt: vector . NEWLINE
   21 matrix: vector . '\''
   28 vector: vector . ELEMMULT vector
   29       | vector . RIGHTSHIFT
   30       | vector . LEFTSHIFT
   31       | vector . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 59
    ELEMMULT    сдвиг, и переход в состояние 60
    '\''        сдвиг, и переход в состояние 61
    LEFTSHIFT   сдвиг, и переход в состояние 62
    RIGHTSHIFT  сдвиг, и переход в состояние 63


State 30

   11 stmt: declaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 64


State 31

   12 stmt: assignment . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 65


State 32

   10 stmt: print . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 66


State 33

    7 stmt: expr . NEWLINE
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 67
    CONJUNCTION  сдвиг, и переход в состояние 68
    '<'          сдвиг, и переход в состояние 69
    '>'          сдвиг, и переход в состояние 70
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73


State 34

   34 declaration: type . VARIABLE DECLARE expr
   35            | type . VARIABLE DECLARE vector
   36            | type . VARIABLE DECLARE matrix

    VARIABLE  сдвиг, и переход в состояние 74


State 35

   43 expr: const .

    $default  вывод с использованием правила 43 (expr)


State 36

   37 assignment: VARIABLE ASSIGN . expr
   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 75
    const  переход в состояние 35


State 37

   26 vector: . '{' exprs '}'
   27       | . VVARIABLE
   28       | . vector ELEMMULT vector
   29       | . vector RIGHTSHIFT
   30       | . vector LEFTSHIFT
   31       | . vector ELEMMULT expr
   38 assignment: VVARIABLE ASSIGN . vector

    VVARIABLE  сдвиг, и переход в состояние 47
    '{'        сдвиг, и переход в состояние 48

    vector  переход в состояние 76


State 38

   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   17       | . matrix ELEMMULT matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT
   21       | . vector '\''
   22       | . matrix ELEMMULT vector
   23       | . matrix ELEMMULT expr
   26 vector: . '{' exprs '}'
   27       | . VVARIABLE
   28       | . vector ELEMMULT vector
   29       | . vector RIGHTSHIFT
   30       | . vector LEFTSHIFT
   31       | . vector ELEMMULT expr
   39 assignment: MVARIABLE ASSIGN . matrix

    VVARIABLE  сдвиг, и переход в состояние 47
    MVARIABLE  сдвиг, и переход в состояние 77
    '{'        сдвиг, и переход в состояние 26

    matrix  переход в состояние 78
    vector  переход в состояние 79


State 39

   40 print: PRINT '(' . expr ')'
   41      | PRINT '(' . VVARIABLE ')'
   42      | PRINT '(' . MVARIABLE ')'
   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 40
    VVARIABLE  сдвиг, и переход в состояние 80
    MVARIABLE  сдвиг, и переход в состояние 81
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 41

    expr   переход в состояние 82
    const  переход в состояние 35


State 40

   44 expr: VARIABLE .

    $default  вывод с использованием правила 44 (expr)


State 41

   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   53     | '(' . expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 83
    const  переход в состояние 35


State 42

   45 expr: '-' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '+', '-', '*', '/', ')', '}']
   46     | expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68

    CONJUNCTION  [вывод с использованием правила 45 (expr)]
    $default     вывод с использованием правила 45 (expr)

    Конфликт между правилом 45 и лексемой '<' разрешен выводом ('<' < UMINUS).
    Конфликт между правилом 45 и лексемой '>' разрешен выводом ('>' < UMINUS).
    Конфликт между правилом 45 и лексемой '+' разрешен выводом ('+' < UMINUS).
    Конфликт между правилом 45 и лексемой '-' разрешен выводом ('-' < UMINUS).
    Конфликт между правилом 45 и лексемой '/' разрешен выводом ('/' < UMINUS).


State 43

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   51     | '!' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '+', '-', '*', '/', ')', '}']
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68

    CONJUNCTION  [вывод с использованием правила 51 (expr)]
    $default     вывод с использованием правила 51 (expr)

    Конфликт между правилом 51 и лексемой '<' разрешен выводом ('<' < '!').
    Конфликт между правилом 51 и лексемой '>' разрешен выводом ('>' < '!').
    Конфликт между правилом 51 и лексемой '+' разрешен выводом ('+' < '!').
    Конфликт между правилом 51 и лексемой '-' разрешен выводом ('-' < '!').
    Конфликт между правилом 51 и лексемой '/' разрешен выводом ('/' < '!').


State 44

    5 stmts: stmts . stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . declaration NEWLINE
   12     | . assignment NEWLINE
   13     | . '(' stmts ')'
   13     | '(' stmts . ')'
   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   17       | . matrix ELEMMULT matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT
   21       | . vector '\''
   22       | . matrix ELEMMULT vector
   23       | . matrix ELEMMULT expr
   26 vector: . '{' exprs '}'
   27       | . VVARIABLE
   28       | . vector ELEMMULT vector
   29       | . vector RIGHTSHIFT
   30       | . vector LEFTSHIFT
   31       | . vector ELEMMULT expr
   34 declaration: . type VARIABLE DECLARE expr
   35            | . type VARIABLE DECLARE vector
   36            | . type VARIABLE DECLARE matrix
   37 assignment: . VARIABLE ASSIGN expr
   38           | . VVARIABLE ASSIGN vector
   39           | . MVARIABLE ASSIGN matrix
   40 print: . PRINT '(' expr ')'
   41      | . PRINT '(' VVARIABLE ')'
   42      | . PRINT '(' MVARIABLE ')'
   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   54 type: . INT
   55     | . CINT
   56     | . VINT
   57     | . MINT
   58     | . CVINT
   59     | . CMINT
   60     | . BOOLEAN
   61     | . CBOOLEAN
   62     | . VBOOLEAN
   63     | . MBOOLEAN
   64     | . CVBOOLEAN
   65     | . CMBOOLEAN
   66 const: . INTEGER
   67      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    CINT       сдвиг, и переход в состояние 9
    VINT       сдвиг, и переход в состояние 10
    MINT       сдвиг, и переход в состояние 11
    INT        сдвиг, и переход в состояние 12
    CVINT      сдвиг, и переход в состояние 13
    CMINT      сдвиг, и переход в состояние 14
    BOOLEAN    сдвиг, и переход в состояние 15
    CBOOLEAN   сдвиг, и переход в состояние 16
    VBOOLEAN   сдвиг, и переход в состояние 17
    MBOOLEAN   сдвиг, и переход в состояние 18
    CVBOOLEAN  сдвиг, и переход в состояние 19
    CMBOOLEAN  сдвиг, и переход в состояние 20
    NEWLINE    сдвиг, и переход в состояние 21
    PRINT      сдвиг, и переход в состояние 22
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 25
    ')'        сдвиг, и переход в состояние 84
    '{'        сдвиг, и переход в состояние 26

    stmt         переход в состояние 85
    matrix       переход в состояние 28
    vector       переход в состояние 29
    declaration  переход в состояние 30
    assignment   переход в состояние 31
    print        переход в состояние 32
    expr         переход в состояние 33
    type         переход в состояние 34
    const        переход в состояние 35


State 45

    4 stmts: stmt .

    $default  вывод с использованием правила 4 (stmts)


State 46

    7 stmt: expr . NEWLINE
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr
   53     | '(' expr . ')'

    NEWLINE      сдвиг, и переход в состояние 67
    CONJUNCTION  сдвиг, и переход в состояние 68
    '<'          сдвиг, и переход в состояние 69
    '>'          сдвиг, и переход в состояние 70
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73
    ')'          сдвиг, и переход в состояние 86


State 47

   27 vector: VVARIABLE .

    $default  вывод с использованием правила 27 (vector)


State 48

   26 vector: '{' . exprs '}'
   32 exprs: . expr ',' expr
   33      | . exprs ',' expr
   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    exprs  переход в состояние 51
    expr   переход в состояние 52
    const  переход в состояние 35


State 49

   14 matrix: '{' listexprs . '}'
   25 listexprs: listexprs . ',' vector

    ','  сдвиг, и переход в состояние 87
    '}'  сдвиг, и переход в состояние 88


State 50

   24 listexprs: vector . ',' vector
   28 vector: vector . ELEMMULT vector
   29       | vector . RIGHTSHIFT
   30       | vector . LEFTSHIFT
   31       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 60
    LEFTSHIFT   сдвиг, и переход в состояние 62
    RIGHTSHIFT  сдвиг, и переход в состояние 63
    ','         сдвиг, и переход в состояние 89


State 51

   26 vector: '{' exprs . '}'
   33 exprs: exprs . ',' expr

    ','  сдвиг, и переход в состояние 90
    '}'  сдвиг, и переход в состояние 91


State 52

   32 exprs: expr . ',' expr
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68
    ','          сдвиг, и переход в состояние 92
    '<'          сдвиг, и переход в состояние 69
    '>'          сдвиг, и переход в состояние 70
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73


State 53

    9 stmt: matrix NEWLINE .

    $default  вывод с использованием правила 9 (stmt)


State 54

   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   17       | . matrix ELEMMULT matrix
   17       | matrix ELEMMULT . matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT
   21       | . vector '\''
   22       | . matrix ELEMMULT vector
   22       | matrix ELEMMULT . vector
   23       | . matrix ELEMMULT expr
   23       | matrix ELEMMULT . expr
   26 vector: . '{' exprs '}'
   27       | . VVARIABLE
   28       | . vector ELEMMULT vector
   29       | . vector RIGHTSHIFT
   30       | . vector LEFTSHIFT
   31       | . vector ELEMMULT expr
   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 40
    VVARIABLE  сдвиг, и переход в состояние 47
    MVARIABLE  сдвиг, и переход в состояние 77
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 41
    '{'        сдвиг, и переход в состояние 26

    matrix  переход в состояние 93
    vector  переход в состояние 94
    expr    переход в состояние 95
    const   переход в состояние 35


State 55

   18 matrix: matrix '\'' .

    $default  вывод с использованием правила 18 (matrix)


State 56

   20 matrix: matrix LEFTSHIFT .

    $default  вывод с использованием правила 20 (matrix)


State 57

   19 matrix: matrix RIGHTSHIFT .

    $default  вывод с использованием правила 19 (matrix)


State 58

   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   16       | matrix '*' . matrix
   17       | . matrix ELEMMULT matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT
   21       | . vector '\''
   22       | . matrix ELEMMULT vector
   23       | . matrix ELEMMULT expr
   26 vector: . '{' exprs '}'
   27       | . VVARIABLE
   28       | . vector ELEMMULT vector
   29       | . vector RIGHTSHIFT
   30       | . vector LEFTSHIFT
   31       | . vector ELEMMULT expr

    VVARIABLE  сдвиг, и переход в состояние 47
    MVARIABLE  сдвиг, и переход в состояние 77
    '{'        сдвиг, и переход в состояние 26

    matrix  переход в состояние 96
    vector  переход в состояние 79


State 59

    8 stmt: vector NEWLINE .

    $default  вывод с использованием правила 8 (stmt)


State 60

   26 vector: . '{' exprs '}'
   27       | . VVARIABLE
   28       | . vector ELEMMULT vector
   28       | vector ELEMMULT . vector
   29       | . vector RIGHTSHIFT
   30       | . vector LEFTSHIFT
   31       | . vector ELEMMULT expr
   31       | vector ELEMMULT . expr
   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 40
    VVARIABLE  сдвиг, и переход в состояние 47
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 41
    '{'        сдвиг, и переход в состояние 48

    vector  переход в состояние 97
    expr    переход в состояние 98
    const   переход в состояние 35


State 61

   21 matrix: vector '\'' .

    $default  вывод с использованием правила 21 (matrix)


State 62

   30 vector: vector LEFTSHIFT .

    $default  вывод с использованием правила 30 (vector)


State 63

   29 vector: vector RIGHTSHIFT .

    $default  вывод с использованием правила 29 (vector)


State 64

   11 stmt: declaration NEWLINE .

    $default  вывод с использованием правила 11 (stmt)


State 65

   12 stmt: assignment NEWLINE .

    $default  вывод с использованием правила 12 (stmt)


State 66

   10 stmt: print NEWLINE .

    $default  вывод с использованием правила 10 (stmt)


State 67

    7 stmt: expr NEWLINE .

    $default  вывод с использованием правила 7 (stmt)


State 68

   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   52     | expr CONJUNCTION . expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 99
    const  переход в состояние 35


State 69

   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   49     | expr '<' . expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 100
    const  переход в состояние 35


State 70

   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   50     | expr '>' . expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 101
    const  переход в состояние 35


State 71

   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   46     | expr '+' . expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 102
    const  переход в состояние 35


State 72

   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   47     | expr '-' . expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 103
    const  переход в состояние 35


State 73

   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   48     | expr '/' . expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 104
    const  переход в состояние 35


State 74

   34 declaration: type VARIABLE . DECLARE expr
   35            | type VARIABLE . DECLARE vector
   36            | type VARIABLE . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 105


State 75

   37 assignment: VARIABLE ASSIGN expr .  [NEWLINE]
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68
    '<'          сдвиг, и переход в состояние 69
    '>'          сдвиг, и переход в состояние 70
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73

    $default  вывод с использованием правила 37 (assignment)


State 76

   28 vector: vector . ELEMMULT vector
   29       | vector . RIGHTSHIFT
   30       | vector . LEFTSHIFT
   31       | vector . ELEMMULT expr
   38 assignment: VVARIABLE ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 60
    LEFTSHIFT   сдвиг, и переход в состояние 62
    RIGHTSHIFT  сдвиг, и переход в состояние 63

    $default  вывод с использованием правила 38 (assignment)


State 77

   15 matrix: MVARIABLE .

    $default  вывод с использованием правила 15 (matrix)


State 78

   16 matrix: matrix . '*' matrix
   17       | matrix . ELEMMULT matrix
   18       | matrix . '\''
   19       | matrix . RIGHTSHIFT
   20       | matrix . LEFTSHIFT
   22       | matrix . ELEMMULT vector
   23       | matrix . ELEMMULT expr
   39 assignment: MVARIABLE ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 54
    '\''        сдвиг, и переход в состояние 55
    LEFTSHIFT   сдвиг, и переход в состояние 56
    RIGHTSHIFT  сдвиг, и переход в состояние 57
    '*'         сдвиг, и переход в состояние 58

    $default  вывод с использованием правила 39 (assignment)


State 79

   21 matrix: vector . '\''
   28 vector: vector . ELEMMULT vector
   29       | vector . RIGHTSHIFT
   30       | vector . LEFTSHIFT
   31       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 60
    '\''        сдвиг, и переход в состояние 61
    LEFTSHIFT   сдвиг, и переход в состояние 62
    RIGHTSHIFT  сдвиг, и переход в состояние 63


State 80

   41 print: PRINT '(' VVARIABLE . ')'

    ')'  сдвиг, и переход в состояние 106


State 81

   42 print: PRINT '(' MVARIABLE . ')'

    ')'  сдвиг, и переход в состояние 107


State 82

   40 print: PRINT '(' expr . ')'
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68
    '<'          сдвиг, и переход в состояние 69
    '>'          сдвиг, и переход в состояние 70
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73
    ')'          сдвиг, и переход в состояние 108


State 83

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr
   53     | '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 68
    '<'          сдвиг, и переход в состояние 69
    '>'          сдвиг, и переход в состояние 70
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73
    ')'          сдвиг, и переход в состояние 86


State 84

   13 stmt: '(' stmts ')' .

    $default  вывод с использованием правила 13 (stmt)


State 85

    5 stmts: stmts stmt .

    $default  вывод с использованием правила 5 (stmts)


State 86

   53 expr: '(' expr ')' .

    $default  вывод с использованием правила 53 (expr)


State 87

   25 listexprs: listexprs ',' . vector
   26 vector: . '{' exprs '}'
   27       | . VVARIABLE
   28       | . vector ELEMMULT vector
   29       | . vector RIGHTSHIFT
   30       | . vector LEFTSHIFT
   31       | . vector ELEMMULT expr

    VVARIABLE  сдвиг, и переход в состояние 47
    '{'        сдвиг, и переход в состояние 48

    vector  переход в состояние 109


State 88

   14 matrix: '{' listexprs '}' .

    $default  вывод с использованием правила 14 (matrix)


State 89

   24 listexprs: vector ',' . vector
   26 vector: . '{' exprs '}'
   27       | . VVARIABLE
   28       | . vector ELEMMULT vector
   29       | . vector RIGHTSHIFT
   30       | . vector LEFTSHIFT
   31       | . vector ELEMMULT expr

    VVARIABLE  сдвиг, и переход в состояние 47
    '{'        сдвиг, и переход в состояние 48

    vector  переход в состояние 110


State 90

   33 exprs: exprs ',' . expr
   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 111
    const  переход в состояние 35


State 91

   26 vector: '{' exprs '}' .

    $default  вывод с использованием правила 26 (vector)


State 92

   32 exprs: expr ',' . expr
   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL      сдвиг, и переход в состояние 4
    INTEGER   сдвиг, и переход в состояние 5
    VARIABLE  сдвиг, и переход в состояние 40
    '-'       сдвиг, и переход в состояние 23
    '!'       сдвиг, и переход в состояние 24
    '('       сдвиг, и переход в состояние 41

    expr   переход в состояние 112
    const  переход в состояние 35


State 93

   16 matrix: matrix . '*' matrix
   17       | matrix . ELEMMULT matrix
   17       | matrix ELEMMULT matrix .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   18       | matrix . '\''
   19       | matrix . RIGHTSHIFT
   20       | matrix . LEFTSHIFT
   22       | matrix . ELEMMULT vector
   23       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 54
    '\''        сдвиг, и переход в состояние 55
    LEFTSHIFT   сдвиг, и переход в состояние 56
    RIGHTSHIFT  сдвиг, и переход в состояние 57
    '*'         сдвиг, и переход в состояние 58

    ELEMMULT    [вывод с использованием правила 17 (matrix)]
    '\''        [вывод с использованием правила 17 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 17 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 17 (matrix)]
    '*'         [вывод с использованием правила 17 (matrix)]
    $default    вывод с использованием правила 17 (matrix)


State 94

   21 matrix: vector . '\''
   22       | matrix ELEMMULT vector .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   28 vector: vector . ELEMMULT vector
   29       | vector . RIGHTSHIFT
   30       | vector . LEFTSHIFT
   31       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 60
    '\''        сдвиг, и переход в состояние 61
    LEFTSHIFT   сдвиг, и переход в состояние 62
    RIGHTSHIFT  сдвиг, и переход в состояние 63

    ELEMMULT    [вывод с использованием правила 22 (matrix)]
    '\''        [вывод с использованием правила 22 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 22 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 22 (matrix)]
    $default    вывод с использованием правила 22 (matrix)


State 95

   23 matrix: matrix ELEMMULT expr .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68
    '<'          сдвиг, и переход в состояние 69
    '>'          сдвиг, и переход в состояние 70
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73

    $default  вывод с использованием правила 23 (matrix)


State 96

   16 matrix: matrix . '*' matrix
   16       | matrix '*' matrix .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   17       | matrix . ELEMMULT matrix
   18       | matrix . '\''
   19       | matrix . RIGHTSHIFT
   20       | matrix . LEFTSHIFT
   22       | matrix . ELEMMULT vector
   23       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 54
    '\''        сдвиг, и переход в состояние 55
    LEFTSHIFT   сдвиг, и переход в состояние 56
    RIGHTSHIFT  сдвиг, и переход в состояние 57

    ELEMMULT    [вывод с использованием правила 16 (matrix)]
    '\''        [вывод с использованием правила 16 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 16 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 16 (matrix)]
    $default    вывод с использованием правила 16 (matrix)

    Конфликт между правилом 16 и лексемой '*' разрешен выводом (%left '*').


State 97

   28 vector: vector . ELEMMULT vector
   28       | vector ELEMMULT vector .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '*', '}']
   29       | vector . RIGHTSHIFT
   30       | vector . LEFTSHIFT
   31       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 60
    LEFTSHIFT   сдвиг, и переход в состояние 62
    RIGHTSHIFT  сдвиг, и переход в состояние 63

    ELEMMULT    [вывод с использованием правила 28 (vector)]
    LEFTSHIFT   [вывод с использованием правила 28 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 28 (vector)]
    $default    вывод с использованием правила 28 (vector)


State 98

   31 vector: vector ELEMMULT expr .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '*', '}']
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68
    '<'          сдвиг, и переход в состояние 69
    '>'          сдвиг, и переход в состояние 70
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73

    $default  вывод с использованием правила 31 (vector)


State 99

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr
   52     | expr CONJUNCTION expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '+', '-', '*', '/', ')', '}']

    CONJUNCTION  сдвиг, и переход в состояние 68
    '<'          сдвиг, и переход в состояние 69
    '>'          сдвиг, и переход в состояние 70
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73

    CONJUNCTION  [вывод с использованием правила 52 (expr)]
    '<'          [вывод с использованием правила 52 (expr)]
    '>'          [вывод с использованием правила 52 (expr)]
    '+'          [вывод с использованием правила 52 (expr)]
    '-'          [вывод с использованием правила 52 (expr)]
    '/'          [вывод с использованием правила 52 (expr)]
    $default     вывод с использованием правила 52 (expr)


State 100

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   49     | expr '<' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '*', ')', '}']
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73

    CONJUNCTION  [вывод с использованием правила 49 (expr)]
    $default     вывод с использованием правила 49 (expr)

    Конфликт между правилом 49 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 49 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 49 и лексемой '+' разрешен сдвигом ('<' < '+').
    Конфликт между правилом 49 и лексемой '-' разрешен сдвигом ('<' < '-').
    Конфликт между правилом 49 и лексемой '/' разрешен сдвигом ('<' < '/').


State 101

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   50     | expr '>' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '*', ')', '}']
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73

    CONJUNCTION  [вывод с использованием правила 50 (expr)]
    $default     вывод с использованием правила 50 (expr)

    Конфликт между правилом 50 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 50 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 50 и лексемой '+' разрешен сдвигом ('>' < '+').
    Конфликт между правилом 50 и лексемой '-' разрешен сдвигом ('>' < '-').
    Конфликт между правилом 50 и лексемой '/' разрешен сдвигом ('>' < '/').


State 102

   46 expr: expr . '+' expr
   46     | expr '+' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '+', '-', '*', ')', '}']
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68
    '/'          сдвиг, и переход в состояние 73

    CONJUNCTION  [вывод с использованием правила 46 (expr)]
    $default     вывод с использованием правила 46 (expr)

    Конфликт между правилом 46 и лексемой '<' разрешен выводом ('<' < '+').
    Конфликт между правилом 46 и лексемой '>' разрешен выводом ('>' < '+').
    Конфликт между правилом 46 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 46 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 46 и лексемой '/' разрешен сдвигом ('+' < '/').


State 103

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   47     | expr '-' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '+', '-', '*', ')', '}']
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68
    '/'          сдвиг, и переход в состояние 73

    CONJUNCTION  [вывод с использованием правила 47 (expr)]
    $default     вывод с использованием правила 47 (expr)

    Конфликт между правилом 47 и лексемой '<' разрешен выводом ('<' < '-').
    Конфликт между правилом 47 и лексемой '>' разрешен выводом ('>' < '-').
    Конфликт между правилом 47 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 47 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 47 и лексемой '/' разрешен сдвигом ('-' < '/').


State 104

   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   48     | expr '/' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '+', '-', '*', '/', ')', '}']
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68

    CONJUNCTION  [вывод с использованием правила 48 (expr)]
    $default     вывод с использованием правила 48 (expr)

    Конфликт между правилом 48 и лексемой '<' разрешен выводом ('<' < '/').
    Конфликт между правилом 48 и лексемой '>' разрешен выводом ('>' < '/').
    Конфликт между правилом 48 и лексемой '+' разрешен выводом ('+' < '/').
    Конфликт между правилом 48 и лексемой '-' разрешен выводом ('-' < '/').
    Конфликт между правилом 48 и лексемой '/' разрешен выводом (%left '/').


State 105

   14 matrix: . '{' listexprs '}'
   15       | . MVARIABLE
   16       | . matrix '*' matrix
   17       | . matrix ELEMMULT matrix
   18       | . matrix '\''
   19       | . matrix RIGHTSHIFT
   20       | . matrix LEFTSHIFT
   21       | . vector '\''
   22       | . matrix ELEMMULT vector
   23       | . matrix ELEMMULT expr
   26 vector: . '{' exprs '}'
   27       | . VVARIABLE
   28       | . vector ELEMMULT vector
   29       | . vector RIGHTSHIFT
   30       | . vector LEFTSHIFT
   31       | . vector ELEMMULT expr
   34 declaration: type VARIABLE DECLARE . expr
   35            | type VARIABLE DECLARE . vector
   36            | type VARIABLE DECLARE . matrix
   43 expr: . const
   44     | . VARIABLE
   45     | . '-' expr
   46     | . expr '+' expr
   47     | . expr '-' expr
   48     | . expr '/' expr
   49     | . expr '<' expr
   50     | . expr '>' expr
   51     | . '!' expr
   52     | . expr CONJUNCTION expr
   53     | . '(' expr ')'
   66 const: . INTEGER
   67      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 40
    VVARIABLE  сдвиг, и переход в состояние 47
    MVARIABLE  сдвиг, и переход в состояние 77
    '-'        сдвиг, и переход в состояние 23
    '!'        сдвиг, и переход в состояние 24
    '('        сдвиг, и переход в состояние 41
    '{'        сдвиг, и переход в состояние 26

    matrix  переход в состояние 113
    vector  переход в состояние 114
    expr    переход в состояние 115
    const   переход в состояние 35


State 106

   41 print: PRINT '(' VVARIABLE ')' .

    $default  вывод с использованием правила 41 (print)


State 107

   42 print: PRINT '(' MVARIABLE ')' .

    $default  вывод с использованием правила 42 (print)


State 108

   40 print: PRINT '(' expr ')' .

    $default  вывод с использованием правила 40 (print)


State 109

   25 listexprs: listexprs ',' vector .  [',', '}']
   28 vector: vector . ELEMMULT vector
   29       | vector . RIGHTSHIFT
   30       | vector . LEFTSHIFT
   31       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 60
    LEFTSHIFT   сдвиг, и переход в состояние 62
    RIGHTSHIFT  сдвиг, и переход в состояние 63

    $default  вывод с использованием правила 25 (listexprs)


State 110

   24 listexprs: vector ',' vector .  [',', '}']
   28 vector: vector . ELEMMULT vector
   29       | vector . RIGHTSHIFT
   30       | vector . LEFTSHIFT
   31       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 60
    LEFTSHIFT   сдвиг, и переход в состояние 62
    RIGHTSHIFT  сдвиг, и переход в состояние 63

    $default  вывод с использованием правила 24 (listexprs)


State 111

   33 exprs: exprs ',' expr .  [',', '}']
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68
    '<'          сдвиг, и переход в состояние 69
    '>'          сдвиг, и переход в состояние 70
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73

    $default  вывод с использованием правила 33 (exprs)


State 112

   32 exprs: expr ',' expr .  [',', '}']
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68
    '<'          сдвиг, и переход в состояние 69
    '>'          сдвиг, и переход в состояние 70
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73

    $default  вывод с использованием правила 32 (exprs)


State 113

   16 matrix: matrix . '*' matrix
   17       | matrix . ELEMMULT matrix
   18       | matrix . '\''
   19       | matrix . RIGHTSHIFT
   20       | matrix . LEFTSHIFT
   22       | matrix . ELEMMULT vector
   23       | matrix . ELEMMULT expr
   36 declaration: type VARIABLE DECLARE matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 54
    '\''        сдвиг, и переход в состояние 55
    LEFTSHIFT   сдвиг, и переход в состояние 56
    RIGHTSHIFT  сдвиг, и переход в состояние 57
    '*'         сдвиг, и переход в состояние 58

    $default  вывод с использованием правила 36 (declaration)


State 114

   21 matrix: vector . '\''
   28 vector: vector . ELEMMULT vector
   29       | vector . RIGHTSHIFT
   30       | vector . LEFTSHIFT
   31       | vector . ELEMMULT expr
   35 declaration: type VARIABLE DECLARE vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 60
    '\''        сдвиг, и переход в состояние 61
    LEFTSHIFT   сдвиг, и переход в состояние 62
    RIGHTSHIFT  сдвиг, и переход в состояние 63

    $default  вывод с использованием правила 35 (declaration)


State 115

   34 declaration: type VARIABLE DECLARE expr .  [NEWLINE]
   46 expr: expr . '+' expr
   47     | expr . '-' expr
   48     | expr . '/' expr
   49     | expr . '<' expr
   50     | expr . '>' expr
   52     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 68
    '<'          сдвиг, и переход в состояние 69
    '>'          сдвиг, и переход в состояние 70
    '+'          сдвиг, и переход в состояние 71
    '-'          сдвиг, и переход в состояние 72
    '/'          сдвиг, и переход в состояние 73

    $default  вывод с использованием правила 34 (declaration)
