Терминалы не используются в грамматике

   END
   ER


Состояние 36 конфликты: 32 сдвига/вывода
Состояние 71 конфликты: 1 сдвига/вывода
Состояние 72 конфликты: 1 сдвига/вывода
Состояние 153 конфликты: 5 сдвига/вывода
Состояние 154 конфликты: 4 сдвига/вывода
Состояние 156 конфликты: 4 сдвига/вывода
Состояние 157 конфликты: 3 сдвига/вывода
Состояние 159 конфликты: 6 сдвига/вывода
Состояние 160 конфликты: 1 сдвига/вывода
Состояние 161 конфликты: 1 сдвига/вывода
Состояние 162 конфликты: 1 сдвига/вывода
Состояние 163 конфликты: 1 сдвига/вывода
Состояние 164 конфликты: 1 сдвига/вывода


Грамматика

    0 $accept: program $end

    1 program: func

    2 func: func stmts
    3     | %empty

    4 stmts: stmt
    5      | stmts stmt

    6 stmt: NEWLINE
    7     | expr NEWLINE
    8     | vector NEWLINE
    9     | matrix NEWLINE
   10     | print NEWLINE
   11     | vmdeclaration NEWLINE
   12     | declaration NEWLINE
   13     | assignment NEWLINE
   14     | iff NEWLINE
   15     | forr NEWLINE
   16     | function NEWLINE
   17     | callfunction NEWLINE
   18     | robotactions NEWLINE
   19     | '(' stmts ')'

   20 robotactions: robotright
   21             | robotleft

   22 robotmove: MOVE '(' expr ')'

   23 robotright: RIGHT

   24 robotleft: LEFT

   25 robotwall: WALL

   26 robotexit: ROBEX

   27 iff: IF expr NEWLINE BEGIF stmts ENDIF

   28 forr: FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR

   29 return_func: type VAR
   30            | return_func ',' type VAR

   31 args_func: '[' type VAR ']'
   32          | args_func ',' '[' type VAR ']'

   33 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E

   34 callfunc_args: expr
   35              | vector
   36              | matrix
   37              | callfunc_args ',' expr
   38              | callfunc_args ',' vector
   39              | callfunc_args ',' matrix

   40 callfunction: FVARIABLE '[' callfunc_args ']'

   41 matrix: '{' listexprs '}'
   42       | MVARIABLE '(' vector ',' '[' ']' ')'
   43       | MVARIABLE '(' '[' ']' ',' vector ')'
   44       | MVARIABLE '(' matrix ')'
   45       | MVARIABLE
   46       | matrix '*' matrix
   47       | matrix ELEMMULT matrix
   48       | matrix '\''
   49       | matrix RIGHTSHIFT
   50       | matrix LEFTSHIFT
   51       | vector '\''
   52       | matrix ELEMMULT vector
   53       | matrix ELEMMULT expr

   54 listexprs: vector ',' vector
   55          | listexprs ',' vector

   56 vector: '{' exprs '}'
   57       | VVARIABLE '(' vector ',' '[' ']' ')'
   58       | MVARIABLE '(' expr ',' '[' ']' ')'
   59       | MVARIABLE '(' '[' ']' ',' expr ')'
   60       | VVARIABLE
   61       | vector ELEMMULT vector
   62       | vector RIGHTSHIFT
   63       | vector LEFTSHIFT
   64       | vector ELEMMULT expr

   65 exprs: expr ',' expr
   66      | exprs ',' expr

   67 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr
   68              | VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   69              | MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   70              | MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   71              | MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   72              | MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   73              | MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   74              | MVARIABLE '(' matrix ')' ASSIGN matrix

   75 declaration: type VAR DECLARE expr
   76            | type VAR DECLARE vector
   77            | type VAR DECLARE matrix

   78 assignment: VARIABLE ASSIGN expr
   79           | VVARIABLE ASSIGN vector
   80           | MVARIABLE ASSIGN matrix

   81 print: PRINT '(' expr ')'
   82      | PRINT '(' VVARIABLE ')'
   83      | PRINT '(' MVARIABLE ')'

   84 expr: const
   85     | robotexit
   86     | robotmove
   87     | robotwall
   88     | VARIABLE
   89     | '-' expr
   90     | expr '+' expr
   91     | expr '-' expr
   92     | expr '/' expr
   93     | expr '<' expr
   94     | expr '>' expr
   95     | '!' expr
   96     | expr CONJUNCTION expr
   97     | '(' expr ')'
   98     | VVARIABLE '(' expr ')'
   99     | MVARIABLE '(' expr ',' expr ')'

  100 type: INT
  101     | CINT
  102     | VINT
  103     | MINT
  104     | CVINT
  105     | CMINT
  106     | BOOLEAN
  107     | CBOOLEAN
  108     | VBOOLEAN
  109     | MBOOLEAN
  110     | CVBOOLEAN
  111     | CMBOOLEAN

  112 const: INTEGER
  113      | BOOL


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'!' (33) 95
'\'' (39) 48 51
'(' (40) 19 22 33 42 43 44 57 58 59 67 68 69 70 71 72 73 74 81 82 83
    97 98 99
')' (41) 19 22 33 42 43 44 57 58 59 67 68 69 70 71 72 73 74 81 82 83
    97 98 99
'*' (42) 46
'+' (43) 90
',' (44) 30 32 37 38 39 42 43 54 55 57 58 59 65 66 68 69 70 71 72 73
    99
'-' (45) 89 91
'/' (47) 92
'<' (60) 93
'>' (62) 94
'[' (91) 31 32 33 40 42 43 57 58 59 68 70 71 72 73
']' (93) 31 32 33 40 42 43 57 58 59 68 70 71 72 73
'{' (123) 41 56
'}' (125) 41 56
error (256)
END (258)
BOOL <boolPtr> (259) 113
INTEGER <intPtr> (260) 112
VARIABLE <varName> (261) 78 88
VVARIABLE <varName> (262) 57 60 67 68 79 82 98
MVARIABLE <varName> (263) 42 43 44 45 58 59 69 70 71 72 73 74 80 83
    99
VAR <varName> (264) 29 30 31 32 33 75 76 77
FVARIABLE <varName> (265) 40
CINT <vtype> (266) 101
VINT <vtype> (267) 102
MINT <vtype> (268) 103
INT <vtype> (269) 100
CVINT <vtype> (270) 104
CMINT <vtype> (271) 105
BOOLEAN <vtype> (272) 106
CBOOLEAN <vtype> (273) 107
VBOOLEAN <vtype> (274) 108
MBOOLEAN <vtype> (275) 109
CVBOOLEAN <vtype> (276) 110
CMBOOLEAN <vtype> (277) 111
NEWLINE (278) 6 7 8 9 10 11 12 13 14 15 16 17 18 27 28 33
PRINT (279) 81 82 83
CONJUNCTION (280) 96
ELEMMULT (281) 47 52 53 61 64
LEFTSHIFT (282) 50 63
RIGHTSHIFT (283) 49 62
IF (284) 27
FORR (285) 28
BEGIF (286) 27
ENDIF (287) 27
BEGFOR (288) 28
ENDFOR (289) 28
ER (290)
DOUBLEDOT (291) 28
B (292) 33
E (293) 33
FUNC (294) 33
MOVE (295) 22
RIGHT (296) 23
LEFT (297) 24
ROBEX (298) 26
WALL (299) 25
ASSIGN (300) 67 68 69 70 71 72 73 74 78 79 80
DECLARE (301) 33 75 76 77
UMINUS (302)


Нетерминальные символы с правилами, в которых они появляются

$accept (63)
    налево: 0
program (64)
    налево: 1, направо: 0
func (65)
    налево: 2 3, направо: 1 2
stmts <ptr> (66)
    налево: 4 5, направо: 2 5 19 27 28 33
stmt <ptr> (67)
    налево: 6 7 8 9 10 11 12 13 14 15 16 17 18 19, направо:
    4 5
robotactions <ptr> (68)
    налево: 20 21, направо: 18
robotmove <ptr> (69)
    налево: 22, направо: 86
robotright <ptr> (70)
    налево: 23, направо: 20
robotleft <ptr> (71)
    налево: 24, направо: 21
robotwall <ptr> (72)
    налево: 25, направо: 87
robotexit <ptr> (73)
    налево: 26, направо: 85
iff <ptr> (74)
    налево: 27, направо: 14
forr <ptr> (75)
    налево: 28, направо: 15
return_func <ptr> (76)
    налево: 29 30, направо: 30 33
args_func <ptr> (77)
    налево: 31 32, направо: 32 33
function <ptr> (78)
    налево: 33, направо: 16
callfunc_args <ptr> (79)
    налево: 34 35 36 37 38 39, направо: 37 38 39 40
callfunction <ptr> (80)
    налево: 40, направо: 17
matrix <ptr> (81)
    налево: 41 42 43 44 45 46 47 48 49 50 51 52 53, направо:
    9 36 39 44 46 47 48 49 50 52 53 72 73 74 77 80
listexprs <ptr> (82)
    налево: 54 55, направо: 41 55
vector <ptr> (83)
    налево: 56 57 58 59 60 61 62 63 64, направо: 8 35
    38 42 43 51 52 54 55 57 61 62 63 64 68 70 71 72 73 76 79
exprs <ptr> (84)
    налево: 65 66, направо: 56 66
vmdeclaration <ptr> (85)
    налево: 67 68 69 70 71 72 73 74, направо: 11
declaration <varOpPtr> (86)
    налево: 75 76 77, направо: 12 28
assignment <varOpPtr> (87)
    налево: 78 79 80, направо: 13
print <ptr> (88)
    налево: 81 82 83, направо: 10
expr <ptr> (89)
    налево: 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99,
    направо: 7 22 27 28 34 37 53 58 59 64 65 66 67 69 70 71
    75 78 81 89 90 91 92 93 94 95 96 97 98 99
type <vtype> (90)
    налево: 100 101 102 103 104 105 106 107 108 109 110 111,
    направо: 29 30 31 32 75 76 77
const <ptr> (91)
    налево: 112 113, направо: 84


State 0

    0 $accept: . program $end
    1 program: . func
    2 func: . func stmts
    3     | . %empty

    $default  вывод с использованием правила 3 (func)

    program  переход в состояние 1
    func     переход в состояние 2


State 1

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 3


State 2

    1 program: func .  [$end]
    2 func: func . stmts
    4 stmts: . stmt
    5      | . stmts stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . vmdeclaration NEWLINE
   12     | . declaration NEWLINE
   13     | . assignment NEWLINE
   14     | . iff NEWLINE
   15     | . forr NEWLINE
   16     | . function NEWLINE
   17     | . callfunction NEWLINE
   18     | . robotactions NEWLINE
   19     | . '(' stmts ')'
   20 robotactions: . robotright
   21             | . robotleft
   22 robotmove: . MOVE '(' expr ')'
   23 robotright: . RIGHT
   24 robotleft: . LEFT
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   27 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   28 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   33 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   40 callfunction: . FVARIABLE '[' callfunc_args ']'
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   67 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   68              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   69              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   70              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   71              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   72              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   73              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   74              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   75 declaration: . type VAR DECLARE expr
   76            | . type VAR DECLARE vector
   77            | . type VAR DECLARE matrix
   78 assignment: . VARIABLE ASSIGN expr
   79           | . VVARIABLE ASSIGN vector
   80           | . MVARIABLE ASSIGN matrix
   81 print: . PRINT '(' expr ')'
   82      | . PRINT '(' VVARIABLE ')'
   83      | . PRINT '(' MVARIABLE ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    FVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    $default  вывод с использованием правила 1 (program)

    stmts          переход в состояние 36
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function       переход в состояние 46
    callfunction   переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 3

    0 $accept: program $end .

    $default  принять


State 4

  113 const: BOOL .

    $default  вывод с использованием правила 113 (const)


State 5

  112 const: INTEGER .

    $default  вывод с использованием правила 112 (const)


State 6

   78 assignment: VARIABLE . ASSIGN expr
   88 expr: VARIABLE .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 57

    $default  вывод с использованием правила 88 (expr)


State 7

   57 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   60       | VVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   67 vmdeclaration: VVARIABLE . '(' expr ')' ASSIGN expr
   68              | VVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN vector
   79 assignment: VVARIABLE . ASSIGN vector
   98 expr: VVARIABLE . '(' expr ')'

    ASSIGN  сдвиг, и переход в состояние 58
    '('     сдвиг, и переход в состояние 59

    $default  вывод с использованием правила 60 (vector)


State 8

   42 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   43       | MVARIABLE . '(' '[' ']' ',' vector ')'
   44       | MVARIABLE . '(' matrix ')'
   45       | MVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   58 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   59       | MVARIABLE . '(' '[' ']' ',' expr ')'
   69 vmdeclaration: MVARIABLE . '(' expr ',' expr ')' ASSIGN expr
   70              | MVARIABLE . '(' expr ',' '[' ']' ')' ASSIGN vector
   71              | MVARIABLE . '(' '[' ']' ',' expr ')' ASSIGN vector
   72              | MVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN matrix
   73              | MVARIABLE . '(' '[' ']' ',' vector ')' ASSIGN matrix
   74              | MVARIABLE . '(' matrix ')' ASSIGN matrix
   80 assignment: MVARIABLE . ASSIGN matrix
   99 expr: MVARIABLE . '(' expr ',' expr ')'

    ASSIGN  сдвиг, и переход в состояние 60
    '('     сдвиг, и переход в состояние 61

    $default  вывод с использованием правила 45 (matrix)


State 9

   40 callfunction: FVARIABLE . '[' callfunc_args ']'

    '['  сдвиг, и переход в состояние 62


State 10

  101 type: CINT .

    $default  вывод с использованием правила 101 (type)


State 11

  102 type: VINT .

    $default  вывод с использованием правила 102 (type)


State 12

  103 type: MINT .

    $default  вывод с использованием правила 103 (type)


State 13

  100 type: INT .

    $default  вывод с использованием правила 100 (type)


State 14

  104 type: CVINT .

    $default  вывод с использованием правила 104 (type)


State 15

  105 type: CMINT .

    $default  вывод с использованием правила 105 (type)


State 16

  106 type: BOOLEAN .

    $default  вывод с использованием правила 106 (type)


State 17

  107 type: CBOOLEAN .

    $default  вывод с использованием правила 107 (type)


State 18

  108 type: VBOOLEAN .

    $default  вывод с использованием правила 108 (type)


State 19

  109 type: MBOOLEAN .

    $default  вывод с использованием правила 109 (type)


State 20

  110 type: CVBOOLEAN .

    $default  вывод с использованием правила 110 (type)


State 21

  111 type: CMBOOLEAN .

    $default  вывод с использованием правила 111 (type)


State 22

    6 stmt: NEWLINE .

    $default  вывод с использованием правила 6 (stmt)


State 23

   81 print: PRINT . '(' expr ')'
   82      | PRINT . '(' VVARIABLE ')'
   83      | PRINT . '(' MVARIABLE ')'

    '('  сдвиг, и переход в состояние 63


State 24

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   27 iff: IF . expr NEWLINE BEGIF stmts ENDIF
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 68
    const      переход в состояние 56


State 25

   28 forr: FORR . declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   75 declaration: . type VAR DECLARE expr
   76            | . type VAR DECLARE vector
   77            | . type VAR DECLARE matrix
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    declaration  переход в состояние 69
    type         переход в состояние 55


State 26

   22 robotmove: MOVE . '(' expr ')'

    '('  сдвиг, и переход в состояние 70


State 27

   23 robotright: RIGHT .

    $default  вывод с использованием правила 23 (robotright)


State 28

   24 robotleft: LEFT .

    $default  вывод с использованием правила 24 (robotleft)


State 29

   26 robotexit: ROBEX .

    $default  вывод с использованием правила 26 (robotexit)


State 30

   25 robotwall: WALL .

    $default  вывод с использованием правила 25 (robotwall)


State 31

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   89     | '-' . expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 71
    const      переход в состояние 56


State 32

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   95     | '!' . expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 72
    const      переход в состояние 56


State 33

    4 stmts: . stmt
    5      | . stmts stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . vmdeclaration NEWLINE
   12     | . declaration NEWLINE
   13     | . assignment NEWLINE
   14     | . iff NEWLINE
   15     | . forr NEWLINE
   16     | . function NEWLINE
   17     | . callfunction NEWLINE
   18     | . robotactions NEWLINE
   19     | . '(' stmts ')'
   19     | '(' . stmts ')'
   20 robotactions: . robotright
   21             | . robotleft
   22 robotmove: . MOVE '(' expr ')'
   23 robotright: . RIGHT
   24 robotleft: . LEFT
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   27 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   28 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   33 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   40 callfunction: . FVARIABLE '[' callfunc_args ']'
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   67 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   68              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   69              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   70              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   71              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   72              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   73              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   74              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   75 declaration: . type VAR DECLARE expr
   76            | . type VAR DECLARE vector
   77            | . type VAR DECLARE matrix
   78 assignment: . VARIABLE ASSIGN expr
   79           | . VVARIABLE ASSIGN vector
   80           | . MVARIABLE ASSIGN matrix
   81 print: . PRINT '(' expr ')'
   82      | . PRINT '(' VVARIABLE ')'
   83      | . PRINT '(' MVARIABLE ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   97     | '(' . expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    FVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmts          переход в состояние 73
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function       переход в состояние 46
    callfunction   переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 74
    type           переход в состояние 55
    const          переход в состояние 56


State 34

   29 return_func: . type VAR
   30            | . return_func ',' type VAR
   33 function: '[' . return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    return_func  переход в состояние 75
    type         переход в состояние 76


State 35

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   41 matrix: '{' . listexprs '}'
   54 listexprs: . vector ',' vector
   55          | . listexprs ',' vector
   56 vector: . '{' exprs '}'
   56       | '{' . exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   65 exprs: . expr ',' expr
   66      | . exprs ',' expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '{'        сдвиг, и переход в состояние 79

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    listexprs  переход в состояние 80
    vector     переход в состояние 81
    exprs      переход в состояние 82
    expr       переход в состояние 83
    const      переход в состояние 56


State 36

    2 func: func stmts .  [$end, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    5 stmts: stmts . stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . vmdeclaration NEWLINE
   12     | . declaration NEWLINE
   13     | . assignment NEWLINE
   14     | . iff NEWLINE
   15     | . forr NEWLINE
   16     | . function NEWLINE
   17     | . callfunction NEWLINE
   18     | . robotactions NEWLINE
   19     | . '(' stmts ')'
   20 robotactions: . robotright
   21             | . robotleft
   22 robotmove: . MOVE '(' expr ')'
   23 robotright: . RIGHT
   24 robotleft: . LEFT
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   27 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   28 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   33 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   40 callfunction: . FVARIABLE '[' callfunc_args ']'
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   67 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   68              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   69              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   70              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   71              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   72              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   73              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   74              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   75 declaration: . type VAR DECLARE expr
   76            | . type VAR DECLARE vector
   77            | . type VAR DECLARE matrix
   78 assignment: . VARIABLE ASSIGN expr
   79           | . VVARIABLE ASSIGN vector
   80           | . MVARIABLE ASSIGN matrix
   81 print: . PRINT '(' expr ')'
   82      | . PRINT '(' VVARIABLE ')'
   83      | . PRINT '(' MVARIABLE ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    FVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    BOOL       [вывод с использованием правила 2 (func)]
    INTEGER    [вывод с использованием правила 2 (func)]
    VARIABLE   [вывод с использованием правила 2 (func)]
    VVARIABLE  [вывод с использованием правила 2 (func)]
    MVARIABLE  [вывод с использованием правила 2 (func)]
    FVARIABLE  [вывод с использованием правила 2 (func)]
    CINT       [вывод с использованием правила 2 (func)]
    VINT       [вывод с использованием правила 2 (func)]
    MINT       [вывод с использованием правила 2 (func)]
    INT        [вывод с использованием правила 2 (func)]
    CVINT      [вывод с использованием правила 2 (func)]
    CMINT      [вывод с использованием правила 2 (func)]
    BOOLEAN    [вывод с использованием правила 2 (func)]
    CBOOLEAN   [вывод с использованием правила 2 (func)]
    VBOOLEAN   [вывод с использованием правила 2 (func)]
    MBOOLEAN   [вывод с использованием правила 2 (func)]
    CVBOOLEAN  [вывод с использованием правила 2 (func)]
    CMBOOLEAN  [вывод с использованием правила 2 (func)]
    NEWLINE    [вывод с использованием правила 2 (func)]
    PRINT      [вывод с использованием правила 2 (func)]
    IF         [вывод с использованием правила 2 (func)]
    FORR       [вывод с использованием правила 2 (func)]
    MOVE       [вывод с использованием правила 2 (func)]
    RIGHT      [вывод с использованием правила 2 (func)]
    LEFT       [вывод с использованием правила 2 (func)]
    ROBEX      [вывод с использованием правила 2 (func)]
    WALL       [вывод с использованием правила 2 (func)]
    '-'        [вывод с использованием правила 2 (func)]
    '!'        [вывод с использованием правила 2 (func)]
    '('        [вывод с использованием правила 2 (func)]
    '['        [вывод с использованием правила 2 (func)]
    '{'        [вывод с использованием правила 2 (func)]
    $default   вывод с использованием правила 2 (func)

    stmt           переход в состояние 84
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function       переход в состояние 46
    callfunction   переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 37

    4 stmts: stmt .

    $default  вывод с использованием правила 4 (stmts)


State 38

   18 stmt: robotactions . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 85


State 39

   86 expr: robotmove .

    $default  вывод с использованием правила 86 (expr)


State 40

   20 robotactions: robotright .

    $default  вывод с использованием правила 20 (robotactions)


State 41

   21 robotactions: robotleft .

    $default  вывод с использованием правила 21 (robotactions)


State 42

   87 expr: robotwall .

    $default  вывод с использованием правила 87 (expr)


State 43

   85 expr: robotexit .

    $default  вывод с использованием правила 85 (expr)


State 44

   14 stmt: iff . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 86


State 45

   15 stmt: forr . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 87


State 46

   16 stmt: function . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 88


State 47

   17 stmt: callfunction . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 89


State 48

    9 stmt: matrix . NEWLINE
   46 matrix: matrix . '*' matrix
   47       | matrix . ELEMMULT matrix
   48       | matrix . '\''
   49       | matrix . RIGHTSHIFT
   50       | matrix . LEFTSHIFT
   52       | matrix . ELEMMULT vector
   53       | matrix . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 90
    ELEMMULT    сдвиг, и переход в состояние 91
    '\''        сдвиг, и переход в состояние 92
    LEFTSHIFT   сдвиг, и переход в состояние 93
    RIGHTSHIFT  сдвиг, и переход в состояние 94
    '*'         сдвиг, и переход в состояние 95


State 49

    8 stmt: vector . NEWLINE
   51 matrix: vector . '\''
   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 96
    ELEMMULT    сдвиг, и переход в состояние 97
    '\''        сдвиг, и переход в состояние 98
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100


State 50

   11 stmt: vmdeclaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 101


State 51

   12 stmt: declaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 102


State 52

   13 stmt: assignment . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 103


State 53

   10 stmt: print . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 104


State 54

    7 stmt: expr . NEWLINE
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 105
    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111


State 55

   75 declaration: type . VAR DECLARE expr
   76            | type . VAR DECLARE vector
   77            | type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 112


State 56

   84 expr: const .

    $default  вывод с использованием правила 84 (expr)


State 57

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   78 assignment: VARIABLE ASSIGN . expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 113
    const      переход в состояние 56


State 58

   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   79 assignment: VVARIABLE ASSIGN . vector

    VVARIABLE  сдвиг, и переход в состояние 114
    MVARIABLE  сдвиг, и переход в состояние 115
    '{'        сдвиг, и переход в состояние 79

    vector  переход в состояние 116


State 59

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   57       | VVARIABLE '(' . vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   67 vmdeclaration: VVARIABLE '(' . expr ')' ASSIGN expr
   68              | VVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN vector
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   98     | VVARIABLE '(' . expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '{'        сдвиг, и переход в состояние 79

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 117
    expr       переход в состояние 118
    const      переход в состояние 56


State 60

   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   80 assignment: MVARIABLE ASSIGN . matrix

    VVARIABLE  сдвиг, и переход в состояние 114
    MVARIABLE  сдвиг, и переход в состояние 119
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 120
    vector  переход в состояние 121


State 61

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   42       | MVARIABLE '(' . vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   43       | MVARIABLE '(' . '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   44       | MVARIABLE '(' . matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   58       | MVARIABLE '(' . expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   59       | MVARIABLE '(' . '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   69 vmdeclaration: MVARIABLE '(' . expr ',' expr ')' ASSIGN expr
   70              | MVARIABLE '(' . expr ',' '[' ']' ')' ASSIGN vector
   71              | MVARIABLE '(' . '[' ']' ',' expr ')' ASSIGN vector
   72              | MVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN matrix
   73              | MVARIABLE '(' . '[' ']' ',' vector ')' ASSIGN matrix
   74              | MVARIABLE '(' . matrix ')' ASSIGN matrix
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
   99     | MVARIABLE '(' . expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 122
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '['        сдвиг, и переход в состояние 123
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 124
    vector     переход в состояние 125
    expr       переход в состояние 126
    const      переход в состояние 56


State 62

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   34 callfunc_args: . expr
   35              | . vector
   36              | . matrix
   37              | . callfunc_args ',' expr
   38              | . callfunc_args ',' vector
   39              | . callfunc_args ',' matrix
   40 callfunction: FVARIABLE '[' . callfunc_args ']'
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 122
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '{'        сдвиг, и переход в состояние 35

    robotmove      переход в состояние 39
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    callfunc_args  переход в состояние 127
    matrix         переход в состояние 128
    vector         переход в состояние 129
    expr           переход в состояние 130
    const          переход в состояние 56


State 63

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   81 print: PRINT '(' . expr ')'
   82      | PRINT '(' . VVARIABLE ')'
   83      | PRINT '(' . MVARIABLE ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 131
    MVARIABLE  сдвиг, и переход в состояние 132
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 133
    const      переход в состояние 56


State 64

   88 expr: VARIABLE .

    $default  вывод с использованием правила 88 (expr)


State 65

   98 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 134


State 66

   99 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 135


State 67

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   97     | '(' . expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 136
    const      переход в состояние 56


State 68

   27 iff: IF expr . NEWLINE BEGIF stmts ENDIF
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 137
    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111


State 69

   28 forr: FORR declaration . DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR

    DOUBLEDOT  сдвиг, и переход в состояние 138


State 70

   22 robotmove: . MOVE '(' expr ')'
   22          | MOVE '(' . expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 139
    const      переход в состояние 56


State 71

   89 expr: '-' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
   90     | expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106

    CONJUNCTION  [вывод с использованием правила 89 (expr)]
    $default     вывод с использованием правила 89 (expr)

    Конфликт между правилом 89 и лексемой '<' разрешен выводом ('<' < UMINUS).
    Конфликт между правилом 89 и лексемой '>' разрешен выводом ('>' < UMINUS).
    Конфликт между правилом 89 и лексемой '+' разрешен выводом ('+' < UMINUS).
    Конфликт между правилом 89 и лексемой '-' разрешен выводом ('-' < UMINUS).
    Конфликт между правилом 89 и лексемой '/' разрешен выводом ('/' < UMINUS).


State 72

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   95     | '!' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106

    CONJUNCTION  [вывод с использованием правила 95 (expr)]
    $default     вывод с использованием правила 95 (expr)

    Конфликт между правилом 95 и лексемой '<' разрешен выводом ('<' < '!').
    Конфликт между правилом 95 и лексемой '>' разрешен выводом ('>' < '!').
    Конфликт между правилом 95 и лексемой '+' разрешен выводом ('+' < '!').
    Конфликт между правилом 95 и лексемой '-' разрешен выводом ('-' < '!').
    Конфликт между правилом 95 и лексемой '/' разрешен выводом ('/' < '!').


State 73

    5 stmts: stmts . stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . vmdeclaration NEWLINE
   12     | . declaration NEWLINE
   13     | . assignment NEWLINE
   14     | . iff NEWLINE
   15     | . forr NEWLINE
   16     | . function NEWLINE
   17     | . callfunction NEWLINE
   18     | . robotactions NEWLINE
   19     | . '(' stmts ')'
   19     | '(' stmts . ')'
   20 robotactions: . robotright
   21             | . robotleft
   22 robotmove: . MOVE '(' expr ')'
   23 robotright: . RIGHT
   24 robotleft: . LEFT
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   27 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   28 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   33 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   40 callfunction: . FVARIABLE '[' callfunc_args ']'
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   67 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   68              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   69              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   70              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   71              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   72              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   73              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   74              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   75 declaration: . type VAR DECLARE expr
   76            | . type VAR DECLARE vector
   77            | . type VAR DECLARE matrix
   78 assignment: . VARIABLE ASSIGN expr
   79           | . VVARIABLE ASSIGN vector
   80           | . MVARIABLE ASSIGN matrix
   81 print: . PRINT '(' expr ')'
   82      | . PRINT '(' VVARIABLE ')'
   83      | . PRINT '(' MVARIABLE ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    FVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    ')'        сдвиг, и переход в состояние 140
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmt           переход в состояние 84
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function       переход в состояние 46
    callfunction   переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 74

    7 stmt: expr . NEWLINE
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr
   97     | '(' expr . ')'

    NEWLINE      сдвиг, и переход в состояние 105
    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111
    ')'          сдвиг, и переход в состояние 141


State 75

   30 return_func: return_func . ',' type VAR
   33 function: '[' return_func . ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E

    ','  сдвиг, и переход в состояние 142
    ']'  сдвиг, и переход в состояние 143


State 76

   29 return_func: type . VAR

    VAR  сдвиг, и переход в состояние 144


State 77

   57 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   60       | VVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
   98 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 145

    $default  вывод с использованием правила 60 (vector)


State 78

   58 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   59       | MVARIABLE . '(' '[' ']' ',' expr ')'
   99 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 146


State 79

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   56 vector: '{' . exprs '}'
   65 exprs: . expr ',' expr
   66      | . exprs ',' expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    exprs      переход в состояние 82
    expr       переход в состояние 83
    const      переход в состояние 56


State 80

   41 matrix: '{' listexprs . '}'
   55 listexprs: listexprs . ',' vector

    ','  сдвиг, и переход в состояние 147
    '}'  сдвиг, и переход в состояние 148


State 81

   54 listexprs: vector . ',' vector
   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 97
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100
    ','         сдвиг, и переход в состояние 149


State 82

   56 vector: '{' exprs . '}'
   66 exprs: exprs . ',' expr

    ','  сдвиг, и переход в состояние 150
    '}'  сдвиг, и переход в состояние 151


State 83

   65 exprs: expr . ',' expr
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    ','          сдвиг, и переход в состояние 152
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111


State 84

    5 stmts: stmts stmt .

    $default  вывод с использованием правила 5 (stmts)


State 85

   18 stmt: robotactions NEWLINE .

    $default  вывод с использованием правила 18 (stmt)


State 86

   14 stmt: iff NEWLINE .

    $default  вывод с использованием правила 14 (stmt)


State 87

   15 stmt: forr NEWLINE .

    $default  вывод с использованием правила 15 (stmt)


State 88

   16 stmt: function NEWLINE .

    $default  вывод с использованием правила 16 (stmt)


State 89

   17 stmt: callfunction NEWLINE .

    $default  вывод с использованием правила 17 (stmt)


State 90

    9 stmt: matrix NEWLINE .

    $default  вывод с использованием правила 9 (stmt)


State 91

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   47       | matrix ELEMMULT . matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   52       | matrix ELEMMULT . vector
   53       | . matrix ELEMMULT expr
   53       | matrix ELEMMULT . expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 122
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 153
    vector     переход в состояние 154
    expr       переход в состояние 155
    const      переход в состояние 56


State 92

   48 matrix: matrix '\'' .

    $default  вывод с использованием правила 48 (matrix)


State 93

   50 matrix: matrix LEFTSHIFT .

    $default  вывод с использованием правила 50 (matrix)


State 94

   49 matrix: matrix RIGHTSHIFT .

    $default  вывод с использованием правила 49 (matrix)


State 95

   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   46       | matrix '*' . matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr

    VVARIABLE  сдвиг, и переход в состояние 114
    MVARIABLE  сдвиг, и переход в состояние 119
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 156
    vector  переход в состояние 121


State 96

    8 stmt: vector NEWLINE .

    $default  вывод с использованием правила 8 (stmt)


State 97

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   61       | vector ELEMMULT . vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   64       | vector ELEMMULT . expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '{'        сдвиг, и переход в состояние 79

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 157
    expr       переход в состояние 158
    const      переход в состояние 56


State 98

   51 matrix: vector '\'' .

    $default  вывод с использованием правила 51 (matrix)


State 99

   63 vector: vector LEFTSHIFT .

    $default  вывод с использованием правила 63 (vector)


State 100

   62 vector: vector RIGHTSHIFT .

    $default  вывод с использованием правила 62 (vector)


State 101

   11 stmt: vmdeclaration NEWLINE .

    $default  вывод с использованием правила 11 (stmt)


State 102

   12 stmt: declaration NEWLINE .

    $default  вывод с использованием правила 12 (stmt)


State 103

   13 stmt: assignment NEWLINE .

    $default  вывод с использованием правила 13 (stmt)


State 104

   10 stmt: print NEWLINE .

    $default  вывод с использованием правила 10 (stmt)


State 105

    7 stmt: expr NEWLINE .

    $default  вывод с использованием правила 7 (stmt)


State 106

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   96     | expr CONJUNCTION . expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 159
    const      переход в состояние 56


State 107

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   93     | expr '<' . expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 160
    const      переход в состояние 56


State 108

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   94     | expr '>' . expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 161
    const      переход в состояние 56


State 109

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   90     | expr '+' . expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 162
    const      переход в состояние 56


State 110

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   91     | expr '-' . expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 163
    const      переход в состояние 56


State 111

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   92     | expr '/' . expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 164
    const      переход в состояние 56


State 112

   75 declaration: type VAR . DECLARE expr
   76            | type VAR . DECLARE vector
   77            | type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 165


State 113

   78 assignment: VARIABLE ASSIGN expr .  [NEWLINE]
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111

    $default  вывод с использованием правила 78 (assignment)


State 114

   57 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   60       | VVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '}']

    '('  сдвиг, и переход в состояние 166

    $default  вывод с использованием правила 60 (vector)


State 115

   58 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   59       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 167


State 116

   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr
   79 assignment: VVARIABLE ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 97
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100

    $default  вывод с использованием правила 79 (assignment)


State 117

   57 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   61       | vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr
   68 vmdeclaration: VVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN vector

    ELEMMULT    сдвиг, и переход в состояние 97
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100
    ','         сдвиг, и переход в состояние 168


State 118

   67 vmdeclaration: VVARIABLE '(' expr . ')' ASSIGN expr
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr
   98     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111
    ')'          сдвиг, и переход в состояние 169


State 119

   42 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   43       | MVARIABLE . '(' '[' ']' ',' vector ')'
   44       | MVARIABLE . '(' matrix ')'
   45       | MVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   58 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   59       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 170

    $default  вывод с использованием правила 45 (matrix)


State 120

   46 matrix: matrix . '*' matrix
   47       | matrix . ELEMMULT matrix
   48       | matrix . '\''
   49       | matrix . RIGHTSHIFT
   50       | matrix . LEFTSHIFT
   52       | matrix . ELEMMULT vector
   53       | matrix . ELEMMULT expr
   80 assignment: MVARIABLE ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 91
    '\''        сдвиг, и переход в состояние 92
    LEFTSHIFT   сдвиг, и переход в состояние 93
    RIGHTSHIFT  сдвиг, и переход в состояние 94
    '*'         сдвиг, и переход в состояние 95

    $default  вывод с использованием правила 80 (assignment)


State 121

   51 matrix: vector . '\''
   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 97
    '\''        сдвиг, и переход в состояние 98
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100


State 122

   42 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   43       | MVARIABLE . '(' '[' ']' ',' vector ')'
   44       | MVARIABLE . '(' matrix ')'
   45       | MVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   58 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   59       | MVARIABLE . '(' '[' ']' ',' expr ')'
   99 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 171

    $default  вывод с использованием правила 45 (matrix)


State 123

   43 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   59 vector: MVARIABLE '(' '[' . ']' ',' expr ')'
   71 vmdeclaration: MVARIABLE '(' '[' . ']' ',' expr ')' ASSIGN vector
   73              | MVARIABLE '(' '[' . ']' ',' vector ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 172


State 124

   44 matrix: MVARIABLE '(' matrix . ')'
   46       | matrix . '*' matrix
   47       | matrix . ELEMMULT matrix
   48       | matrix . '\''
   49       | matrix . RIGHTSHIFT
   50       | matrix . LEFTSHIFT
   52       | matrix . ELEMMULT vector
   53       | matrix . ELEMMULT expr
   74 vmdeclaration: MVARIABLE '(' matrix . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 91
    '\''        сдвиг, и переход в состояние 92
    LEFTSHIFT   сдвиг, и переход в состояние 93
    RIGHTSHIFT  сдвиг, и переход в состояние 94
    '*'         сдвиг, и переход в состояние 95
    ')'         сдвиг, и переход в состояние 173


State 125

   42 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   51       | vector . '\''
   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr
   72 vmdeclaration: MVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 97
    '\''        сдвиг, и переход в состояние 98
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100
    ','         сдвиг, и переход в состояние 174


State 126

   58 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
   69 vmdeclaration: MVARIABLE '(' expr . ',' expr ')' ASSIGN expr
   70              | MVARIABLE '(' expr . ',' '[' ']' ')' ASSIGN vector
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr
   99     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 106
    ','          сдвиг, и переход в состояние 175
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111


State 127

   37 callfunc_args: callfunc_args . ',' expr
   38              | callfunc_args . ',' vector
   39              | callfunc_args . ',' matrix
   40 callfunction: FVARIABLE '[' callfunc_args . ']'

    ','  сдвиг, и переход в состояние 176
    ']'  сдвиг, и переход в состояние 177


State 128

   36 callfunc_args: matrix .  [',', ']']
   46 matrix: matrix . '*' matrix
   47       | matrix . ELEMMULT matrix
   48       | matrix . '\''
   49       | matrix . RIGHTSHIFT
   50       | matrix . LEFTSHIFT
   52       | matrix . ELEMMULT vector
   53       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 91
    '\''        сдвиг, и переход в состояние 92
    LEFTSHIFT   сдвиг, и переход в состояние 93
    RIGHTSHIFT  сдвиг, и переход в состояние 94
    '*'         сдвиг, и переход в состояние 95

    $default  вывод с использованием правила 36 (callfunc_args)


State 129

   35 callfunc_args: vector .  [',', ']']
   51 matrix: vector . '\''
   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 97
    '\''        сдвиг, и переход в состояние 98
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100

    $default  вывод с использованием правила 35 (callfunc_args)


State 130

   34 callfunc_args: expr .  [',', ']']
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111

    $default  вывод с использованием правила 34 (callfunc_args)


State 131

   82 print: PRINT '(' VVARIABLE . ')'
   98 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 134
    ')'  сдвиг, и переход в состояние 178


State 132

   83 print: PRINT '(' MVARIABLE . ')'
   99 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 135
    ')'  сдвиг, и переход в состояние 179


State 133

   81 print: PRINT '(' expr . ')'
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111
    ')'          сдвиг, и переход в состояние 180


State 134

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   98     | VVARIABLE '(' . expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 181
    const      переход в состояние 56


State 135

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
   99     | MVARIABLE '(' . expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 182
    const      переход в состояние 56


State 136

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr
   97     | '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111
    ')'          сдвиг, и переход в состояние 141


State 137

   27 iff: IF expr NEWLINE . BEGIF stmts ENDIF

    BEGIF  сдвиг, и переход в состояние 183


State 138

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   28 forr: FORR declaration DOUBLEDOT . expr NEWLINE BEGFOR stmts ENDFOR
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 184
    const      переход в состояние 56


State 139

   22 robotmove: MOVE '(' expr . ')'
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111
    ')'          сдвиг, и переход в состояние 185


State 140

   19 stmt: '(' stmts ')' .

    $default  вывод с использованием правила 19 (stmt)


State 141

   97 expr: '(' expr ')' .

    $default  вывод с использованием правила 97 (expr)


State 142

   30 return_func: return_func ',' . type VAR
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    type  переход в состояние 186


State 143

   33 function: '[' return_func ']' . DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E

    DECLARE  сдвиг, и переход в состояние 187


State 144

   29 return_func: type VAR .

    $default  вывод с использованием правила 29 (return_func)


State 145

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   57       | VVARIABLE '(' . vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   98     | VVARIABLE '(' . expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '{'        сдвиг, и переход в состояние 79

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 188
    expr       переход в состояние 181
    const      переход в состояние 56


State 146

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   58 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   59       | MVARIABLE '(' . '[' ']' ',' expr ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
   99     | MVARIABLE '(' . expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '['        сдвиг, и переход в состояние 189

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 190
    const      переход в состояние 56


State 147

   55 listexprs: listexprs ',' . vector
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr

    VVARIABLE  сдвиг, и переход в состояние 114
    MVARIABLE  сдвиг, и переход в состояние 115
    '{'        сдвиг, и переход в состояние 79

    vector  переход в состояние 191


State 148

   41 matrix: '{' listexprs '}' .

    $default  вывод с использованием правила 41 (matrix)


State 149

   54 listexprs: vector ',' . vector
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr

    VVARIABLE  сдвиг, и переход в состояние 114
    MVARIABLE  сдвиг, и переход в состояние 115
    '{'        сдвиг, и переход в состояние 79

    vector  переход в состояние 192


State 150

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   66 exprs: exprs ',' . expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 193
    const      переход в состояние 56


State 151

   56 vector: '{' exprs '}' .

    $default  вывод с использованием правила 56 (vector)


State 152

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   65 exprs: expr ',' . expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 194
    const      переход в состояние 56


State 153

   46 matrix: matrix . '*' matrix
   47       | matrix . ELEMMULT matrix
   47       | matrix ELEMMULT matrix .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   48       | matrix . '\''
   49       | matrix . RIGHTSHIFT
   50       | matrix . LEFTSHIFT
   52       | matrix . ELEMMULT vector
   53       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 91
    '\''        сдвиг, и переход в состояние 92
    LEFTSHIFT   сдвиг, и переход в состояние 93
    RIGHTSHIFT  сдвиг, и переход в состояние 94
    '*'         сдвиг, и переход в состояние 95

    ELEMMULT    [вывод с использованием правила 47 (matrix)]
    '\''        [вывод с использованием правила 47 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 47 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 47 (matrix)]
    '*'         [вывод с использованием правила 47 (matrix)]
    $default    вывод с использованием правила 47 (matrix)


State 154

   51 matrix: vector . '\''
   52       | matrix ELEMMULT vector .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 97
    '\''        сдвиг, и переход в состояние 98
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100

    ELEMMULT    [вывод с использованием правила 52 (matrix)]
    '\''        [вывод с использованием правила 52 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 52 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 52 (matrix)]
    $default    вывод с использованием правила 52 (matrix)


State 155

   53 matrix: matrix ELEMMULT expr .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111

    $default  вывод с использованием правила 53 (matrix)


State 156

   46 matrix: matrix . '*' matrix
   46       | matrix '*' matrix .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   47       | matrix . ELEMMULT matrix
   48       | matrix . '\''
   49       | matrix . RIGHTSHIFT
   50       | matrix . LEFTSHIFT
   52       | matrix . ELEMMULT vector
   53       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 91
    '\''        сдвиг, и переход в состояние 92
    LEFTSHIFT   сдвиг, и переход в состояние 93
    RIGHTSHIFT  сдвиг, и переход в состояние 94

    ELEMMULT    [вывод с использованием правила 46 (matrix)]
    '\''        [вывод с использованием правила 46 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 46 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 46 (matrix)]
    $default    вывод с использованием правила 46 (matrix)

    Конфликт между правилом 46 и лексемой '*' разрешен выводом (%left '*').


State 157

   61 vector: vector . ELEMMULT vector
   61       | vector ELEMMULT vector .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 97
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100

    ELEMMULT    [вывод с использованием правила 61 (vector)]
    LEFTSHIFT   [вывод с использованием правила 61 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 61 (vector)]
    $default    вывод с использованием правила 61 (vector)


State 158

   64 vector: vector ELEMMULT expr .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111

    $default  вывод с использованием правила 64 (vector)


State 159

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr
   96     | expr CONJUNCTION expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111

    CONJUNCTION  [вывод с использованием правила 96 (expr)]
    '<'          [вывод с использованием правила 96 (expr)]
    '>'          [вывод с использованием правила 96 (expr)]
    '+'          [вывод с использованием правила 96 (expr)]
    '-'          [вывод с использованием правила 96 (expr)]
    '/'          [вывод с использованием правила 96 (expr)]
    $default     вывод с использованием правила 96 (expr)


State 160

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   93     | expr '<' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111

    CONJUNCTION  [вывод с использованием правила 93 (expr)]
    $default     вывод с использованием правила 93 (expr)

    Конфликт между правилом 93 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 93 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 93 и лексемой '+' разрешен сдвигом ('<' < '+').
    Конфликт между правилом 93 и лексемой '-' разрешен сдвигом ('<' < '-').
    Конфликт между правилом 93 и лексемой '/' разрешен сдвигом ('<' < '/').


State 161

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   94     | expr '>' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111

    CONJUNCTION  [вывод с использованием правила 94 (expr)]
    $default     вывод с использованием правила 94 (expr)

    Конфликт между правилом 94 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 94 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 94 и лексемой '+' разрешен сдвигом ('>' < '+').
    Конфликт между правилом 94 и лексемой '-' разрешен сдвигом ('>' < '-').
    Конфликт между правилом 94 и лексемой '/' разрешен сдвигом ('>' < '/').


State 162

   90 expr: expr . '+' expr
   90     | expr '+' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '/'          сдвиг, и переход в состояние 111

    CONJUNCTION  [вывод с использованием правила 90 (expr)]
    $default     вывод с использованием правила 90 (expr)

    Конфликт между правилом 90 и лексемой '<' разрешен выводом ('<' < '+').
    Конфликт между правилом 90 и лексемой '>' разрешен выводом ('>' < '+').
    Конфликт между правилом 90 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 90 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 90 и лексемой '/' разрешен сдвигом ('+' < '/').


State 163

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   91     | expr '-' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '/'          сдвиг, и переход в состояние 111

    CONJUNCTION  [вывод с использованием правила 91 (expr)]
    $default     вывод с использованием правила 91 (expr)

    Конфликт между правилом 91 и лексемой '<' разрешен выводом ('<' < '-').
    Конфликт между правилом 91 и лексемой '>' разрешен выводом ('>' < '-').
    Конфликт между правилом 91 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 91 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 91 и лексемой '/' разрешен сдвигом ('-' < '/').


State 164

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   92     | expr '/' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106

    CONJUNCTION  [вывод с использованием правила 92 (expr)]
    $default     вывод с использованием правила 92 (expr)

    Конфликт между правилом 92 и лексемой '<' разрешен выводом ('<' < '/').
    Конфликт между правилом 92 и лексемой '>' разрешен выводом ('>' < '/').
    Конфликт между правилом 92 и лексемой '+' разрешен выводом ('+' < '/').
    Конфликт между правилом 92 и лексемой '-' разрешен выводом ('-' < '/').
    Конфликт между правилом 92 и лексемой '/' разрешен выводом (%left '/').


State 165

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   75 declaration: type VAR DECLARE . expr
   76            | type VAR DECLARE . vector
   77            | type VAR DECLARE . matrix
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 122
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 195
    vector     переход в состояние 196
    expr       переход в состояние 197
    const      переход в состояние 56


State 166

   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   57       | VVARIABLE '(' . vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr

    VVARIABLE  сдвиг, и переход в состояние 114
    MVARIABLE  сдвиг, и переход в состояние 115
    '{'        сдвиг, и переход в состояние 79

    vector  переход в состояние 188


State 167

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   58 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   59       | MVARIABLE '(' . '[' ']' ',' expr ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '['        сдвиг, и переход в состояние 189

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 198
    const      переход в состояние 56


State 168

   57 vector: VVARIABLE '(' vector ',' . '[' ']' ')'
   68 vmdeclaration: VVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN vector

    '['  сдвиг, и переход в состояние 199


State 169

   67 vmdeclaration: VVARIABLE '(' expr ')' . ASSIGN expr
   98 expr: VVARIABLE '(' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 200

    $default  вывод с использованием правила 98 (expr)


State 170

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   42       | MVARIABLE '(' . vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   43       | MVARIABLE '(' . '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   44       | MVARIABLE '(' . matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   58       | MVARIABLE '(' . expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   59       | MVARIABLE '(' . '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 122
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '['        сдвиг, и переход в состояние 201
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 202
    vector     переход в состояние 203
    expr       переход в состояние 198
    const      переход в состояние 56


State 171

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   42       | MVARIABLE '(' . vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   43       | MVARIABLE '(' . '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   44       | MVARIABLE '(' . matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   58       | MVARIABLE '(' . expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   59       | MVARIABLE '(' . '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
   99     | MVARIABLE '(' . expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 122
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '['        сдвиг, и переход в состояние 201
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 202
    vector     переход в состояние 203
    expr       переход в состояние 190
    const      переход в состояние 56


State 172

   43 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   59 vector: MVARIABLE '(' '[' ']' . ',' expr ')'
   71 vmdeclaration: MVARIABLE '(' '[' ']' . ',' expr ')' ASSIGN vector
   73              | MVARIABLE '(' '[' ']' . ',' vector ')' ASSIGN matrix

    ','  сдвиг, и переход в состояние 204


State 173

   44 matrix: MVARIABLE '(' matrix ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   74 vmdeclaration: MVARIABLE '(' matrix ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 205

    $default  вывод с использованием правила 44 (matrix)


State 174

   42 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'
   72 vmdeclaration: MVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN matrix

    '['  сдвиг, и переход в состояние 206


State 175

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   58 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
   69 vmdeclaration: MVARIABLE '(' expr ',' . expr ')' ASSIGN expr
   70              | MVARIABLE '(' expr ',' . '[' ']' ')' ASSIGN vector
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
   99     | MVARIABLE '(' expr ',' . expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '['        сдвиг, и переход в состояние 207

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 208
    const      переход в состояние 56


State 176

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   37 callfunc_args: callfunc_args ',' . expr
   38              | callfunc_args ',' . vector
   39              | callfunc_args ',' . matrix
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 122
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 209
    vector     переход в состояние 210
    expr       переход в состояние 211
    const      переход в состояние 56


State 177

   40 callfunction: FVARIABLE '[' callfunc_args ']' .

    $default  вывод с использованием правила 40 (callfunction)


State 178

   82 print: PRINT '(' VVARIABLE ')' .

    $default  вывод с использованием правила 82 (print)


State 179

   83 print: PRINT '(' MVARIABLE ')' .

    $default  вывод с использованием правила 83 (print)


State 180

   81 print: PRINT '(' expr ')' .

    $default  вывод с использованием правила 81 (print)


State 181

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr
   98     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111
    ')'          сдвиг, и переход в состояние 212


State 182

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr
   99     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 106
    ','          сдвиг, и переход в состояние 213
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111


State 183

    4 stmts: . stmt
    5      | . stmts stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . vmdeclaration NEWLINE
   12     | . declaration NEWLINE
   13     | . assignment NEWLINE
   14     | . iff NEWLINE
   15     | . forr NEWLINE
   16     | . function NEWLINE
   17     | . callfunction NEWLINE
   18     | . robotactions NEWLINE
   19     | . '(' stmts ')'
   20 robotactions: . robotright
   21             | . robotleft
   22 robotmove: . MOVE '(' expr ')'
   23 robotright: . RIGHT
   24 robotleft: . LEFT
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   27 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   27    | IF expr NEWLINE BEGIF . stmts ENDIF
   28 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   33 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   40 callfunction: . FVARIABLE '[' callfunc_args ']'
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   67 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   68              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   69              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   70              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   71              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   72              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   73              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   74              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   75 declaration: . type VAR DECLARE expr
   76            | . type VAR DECLARE vector
   77            | . type VAR DECLARE matrix
   78 assignment: . VARIABLE ASSIGN expr
   79           | . VVARIABLE ASSIGN vector
   80           | . MVARIABLE ASSIGN matrix
   81 print: . PRINT '(' expr ')'
   82      | . PRINT '(' VVARIABLE ')'
   83      | . PRINT '(' MVARIABLE ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    FVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmts          переход в состояние 214
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function       переход в состояние 46
    callfunction   переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 184

   28 forr: FORR declaration DOUBLEDOT expr . NEWLINE BEGFOR stmts ENDFOR
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 215
    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111


State 185

   22 robotmove: MOVE '(' expr ')' .

    $default  вывод с использованием правила 22 (robotmove)


State 186

   30 return_func: return_func ',' type . VAR

    VAR  сдвиг, и переход в состояние 216


State 187

   33 function: '[' return_func ']' DECLARE . FUNC VAR '(' args_func ')' B NEWLINE stmts E

    FUNC  сдвиг, и переход в состояние 217


State 188

   57 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   61       | vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 97
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100
    ','         сдвиг, и переход в состояние 218


State 189

   59 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 219


State 190

   58 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr
   99     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 106
    ','          сдвиг, и переход в состояние 220
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111


State 191

   55 listexprs: listexprs ',' vector .  [',', '}']
   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 97
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100

    $default  вывод с использованием правила 55 (listexprs)


State 192

   54 listexprs: vector ',' vector .  [',', '}']
   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 97
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100

    $default  вывод с использованием правила 54 (listexprs)


State 193

   66 exprs: exprs ',' expr .  [',', '}']
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111

    $default  вывод с использованием правила 66 (exprs)


State 194

   65 exprs: expr ',' expr .  [',', '}']
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111

    $default  вывод с использованием правила 65 (exprs)


State 195

   46 matrix: matrix . '*' matrix
   47       | matrix . ELEMMULT matrix
   48       | matrix . '\''
   49       | matrix . RIGHTSHIFT
   50       | matrix . LEFTSHIFT
   52       | matrix . ELEMMULT vector
   53       | matrix . ELEMMULT expr
   77 declaration: type VAR DECLARE matrix .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 91
    '\''        сдвиг, и переход в состояние 92
    LEFTSHIFT   сдвиг, и переход в состояние 93
    RIGHTSHIFT  сдвиг, и переход в состояние 94
    '*'         сдвиг, и переход в состояние 95

    $default  вывод с использованием правила 77 (declaration)


State 196

   51 matrix: vector . '\''
   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr
   76 declaration: type VAR DECLARE vector .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 97
    '\''        сдвиг, и переход в состояние 98
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100

    $default  вывод с использованием правила 76 (declaration)


State 197

   75 declaration: type VAR DECLARE expr .  [NEWLINE, DOUBLEDOT]
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111

    $default  вывод с использованием правила 75 (declaration)


State 198

   58 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    ','          сдвиг, и переход в состояние 221
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111


State 199

   57 vector: VVARIABLE '(' vector ',' '[' . ']' ')'
   68 vmdeclaration: VVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 222


State 200

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   67 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN . expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 223
    const      переход в состояние 56


State 201

   43 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   59 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 224


State 202

   44 matrix: MVARIABLE '(' matrix . ')'
   46       | matrix . '*' matrix
   47       | matrix . ELEMMULT matrix
   48       | matrix . '\''
   49       | matrix . RIGHTSHIFT
   50       | matrix . LEFTSHIFT
   52       | matrix . ELEMMULT vector
   53       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 91
    '\''        сдвиг, и переход в состояние 92
    LEFTSHIFT   сдвиг, и переход в состояние 93
    RIGHTSHIFT  сдвиг, и переход в состояние 94
    '*'         сдвиг, и переход в состояние 95
    ')'         сдвиг, и переход в состояние 225


State 203

   42 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   51       | vector . '\''
   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 97
    '\''        сдвиг, и переход в состояние 98
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100
    ','         сдвиг, и переход в состояние 226


State 204

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   43 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   59       | MVARIABLE '(' '[' ']' ',' . expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   71 vmdeclaration: MVARIABLE '(' '[' ']' ',' . expr ')' ASSIGN vector
   73              | MVARIABLE '(' '[' ']' ',' . vector ')' ASSIGN matrix
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '{'        сдвиг, и переход в состояние 79

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 227
    expr       переход в состояние 228
    const      переход в состояние 56


State 205

   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   74 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN . matrix

    VVARIABLE  сдвиг, и переход в состояние 114
    MVARIABLE  сдвиг, и переход в состояние 119
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 229
    vector  переход в состояние 121


State 206

   42 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'
   72 vmdeclaration: MVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 230


State 207

   58 vector: MVARIABLE '(' expr ',' '[' . ']' ')'
   70 vmdeclaration: MVARIABLE '(' expr ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 231


State 208

   69 vmdeclaration: MVARIABLE '(' expr ',' expr . ')' ASSIGN expr
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr
   99     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111
    ')'          сдвиг, и переход в состояние 232


State 209

   39 callfunc_args: callfunc_args ',' matrix .  [',', ']']
   46 matrix: matrix . '*' matrix
   47       | matrix . ELEMMULT matrix
   48       | matrix . '\''
   49       | matrix . RIGHTSHIFT
   50       | matrix . LEFTSHIFT
   52       | matrix . ELEMMULT vector
   53       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 91
    '\''        сдвиг, и переход в состояние 92
    LEFTSHIFT   сдвиг, и переход в состояние 93
    RIGHTSHIFT  сдвиг, и переход в состояние 94
    '*'         сдвиг, и переход в состояние 95

    $default  вывод с использованием правила 39 (callfunc_args)


State 210

   38 callfunc_args: callfunc_args ',' vector .  [',', ']']
   51 matrix: vector . '\''
   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 97
    '\''        сдвиг, и переход в состояние 98
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100

    $default  вывод с использованием правила 38 (callfunc_args)


State 211

   37 callfunc_args: callfunc_args ',' expr .  [',', ']']
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111

    $default  вывод с использованием правила 37 (callfunc_args)


State 212

   98 expr: VVARIABLE '(' expr ')' .

    $default  вывод с использованием правила 98 (expr)


State 213

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
   99     | MVARIABLE '(' expr ',' . expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 233
    const      переход в состояние 56


State 214

    5 stmts: stmts . stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . vmdeclaration NEWLINE
   12     | . declaration NEWLINE
   13     | . assignment NEWLINE
   14     | . iff NEWLINE
   15     | . forr NEWLINE
   16     | . function NEWLINE
   17     | . callfunction NEWLINE
   18     | . robotactions NEWLINE
   19     | . '(' stmts ')'
   20 robotactions: . robotright
   21             | . robotleft
   22 robotmove: . MOVE '(' expr ')'
   23 robotright: . RIGHT
   24 robotleft: . LEFT
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   27 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   27    | IF expr NEWLINE BEGIF stmts . ENDIF
   28 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   33 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   40 callfunction: . FVARIABLE '[' callfunc_args ']'
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   67 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   68              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   69              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   70              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   71              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   72              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   73              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   74              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   75 declaration: . type VAR DECLARE expr
   76            | . type VAR DECLARE vector
   77            | . type VAR DECLARE matrix
   78 assignment: . VARIABLE ASSIGN expr
   79           | . VVARIABLE ASSIGN vector
   80           | . MVARIABLE ASSIGN matrix
   81 print: . PRINT '(' expr ')'
   82      | . PRINT '(' VVARIABLE ')'
   83      | . PRINT '(' MVARIABLE ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    FVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    ENDIF      сдвиг, и переход в состояние 234
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmt           переход в состояние 84
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function       переход в состояние 46
    callfunction   переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 215

   28 forr: FORR declaration DOUBLEDOT expr NEWLINE . BEGFOR stmts ENDFOR

    BEGFOR  сдвиг, и переход в состояние 235


State 216

   30 return_func: return_func ',' type VAR .

    $default  вывод с использованием правила 30 (return_func)


State 217

   33 function: '[' return_func ']' DECLARE FUNC . VAR '(' args_func ')' B NEWLINE stmts E

    VAR  сдвиг, и переход в состояние 236


State 218

   57 vector: VVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 237


State 219

   59 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 238


State 220

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   58 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
   99     | MVARIABLE '(' expr ',' . expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '['        сдвиг, и переход в состояние 239

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 233
    const      переход в состояние 56


State 221

   58 vector: MVARIABLE '(' expr ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 239


State 222

   57 vector: VVARIABLE '(' vector ',' '[' ']' . ')'
   68 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 240


State 223

   67 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr .  [NEWLINE]
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111

    $default  вывод с использованием правила 67 (vmdeclaration)


State 224

   43 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   59 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 241


State 225

   44 matrix: MVARIABLE '(' matrix ')' .

    $default  вывод с использованием правила 44 (matrix)


State 226

   42 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 242


State 227

   43 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr
   73 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 97
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100
    ')'         сдвиг, и переход в состояние 243


State 228

   59 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
   71 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr . ')' ASSIGN vector
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111
    ')'          сдвиг, и переход в состояние 244


State 229

   46 matrix: matrix . '*' matrix
   47       | matrix . ELEMMULT matrix
   48       | matrix . '\''
   49       | matrix . RIGHTSHIFT
   50       | matrix . LEFTSHIFT
   52       | matrix . ELEMMULT vector
   53       | matrix . ELEMMULT expr
   74 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 91
    '\''        сдвиг, и переход в состояние 92
    LEFTSHIFT   сдвиг, и переход в состояние 93
    RIGHTSHIFT  сдвиг, и переход в состояние 94
    '*'         сдвиг, и переход в состояние 95

    $default  вывод с использованием правила 74 (vmdeclaration)


State 230

   42 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'
   72 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN matrix

    ')'  сдвиг, и переход в состояние 245


State 231

   58 vector: MVARIABLE '(' expr ',' '[' ']' . ')'
   70 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 246


State 232

   69 vmdeclaration: MVARIABLE '(' expr ',' expr ')' . ASSIGN expr
   99 expr: MVARIABLE '(' expr ',' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 247

    $default  вывод с использованием правила 99 (expr)


State 233

   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr
   99     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111
    ')'          сдвиг, и переход в состояние 248


State 234

   27 iff: IF expr NEWLINE BEGIF stmts ENDIF .

    $default  вывод с использованием правила 27 (iff)


State 235

    4 stmts: . stmt
    5      | . stmts stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . vmdeclaration NEWLINE
   12     | . declaration NEWLINE
   13     | . assignment NEWLINE
   14     | . iff NEWLINE
   15     | . forr NEWLINE
   16     | . function NEWLINE
   17     | . callfunction NEWLINE
   18     | . robotactions NEWLINE
   19     | . '(' stmts ')'
   20 robotactions: . robotright
   21             | . robotleft
   22 robotmove: . MOVE '(' expr ')'
   23 robotright: . RIGHT
   24 robotleft: . LEFT
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   27 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   28 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   28     | FORR declaration DOUBLEDOT expr NEWLINE BEGFOR . stmts ENDFOR
   33 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   40 callfunction: . FVARIABLE '[' callfunc_args ']'
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   67 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   68              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   69              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   70              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   71              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   72              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   73              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   74              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   75 declaration: . type VAR DECLARE expr
   76            | . type VAR DECLARE vector
   77            | . type VAR DECLARE matrix
   78 assignment: . VARIABLE ASSIGN expr
   79           | . VVARIABLE ASSIGN vector
   80           | . MVARIABLE ASSIGN matrix
   81 print: . PRINT '(' expr ')'
   82      | . PRINT '(' VVARIABLE ')'
   83      | . PRINT '(' MVARIABLE ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    FVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmts          переход в состояние 249
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function       переход в состояние 46
    callfunction   переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 236

   33 function: '[' return_func ']' DECLARE FUNC VAR . '(' args_func ')' B NEWLINE stmts E

    '('  сдвиг, и переход в состояние 250


State 237

   57 vector: VVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 251


State 238

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   59 vector: MVARIABLE '(' '[' ']' ',' . expr ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 252
    const      переход в состояние 56


State 239

   58 vector: MVARIABLE '(' expr ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 253


State 240

   57 vector: VVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   68 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 254

    $default  вывод с использованием правила 57 (vector)


State 241

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   43 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   59       | MVARIABLE '(' '[' ']' ',' . expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67
    '{'        сдвиг, и переход в состояние 79

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 255
    expr       переход в состояние 252
    const      переход в состояние 56


State 242

   42 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 256


State 243

   43 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   73 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 257

    $default  вывод с использованием правила 43 (matrix)


State 244

   59 vector: MVARIABLE '(' '[' ']' ',' expr ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   71 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 258

    $default  вывод с использованием правила 59 (vector)


State 245

   42 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   72 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 259

    $default  вывод с использованием правила 42 (matrix)


State 246

   58 vector: MVARIABLE '(' expr ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   70 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 260

    $default  вывод с использованием правила 58 (vector)


State 247

   22 robotmove: . MOVE '(' expr ')'
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   69 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN . expr
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 64
    VVARIABLE  сдвиг, и переход в состояние 65
    MVARIABLE  сдвиг, и переход в состояние 66
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 67

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 261
    const      переход в состояние 56


State 248

   99 expr: MVARIABLE '(' expr ',' expr ')' .

    $default  вывод с использованием правила 99 (expr)


State 249

    5 stmts: stmts . stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . vmdeclaration NEWLINE
   12     | . declaration NEWLINE
   13     | . assignment NEWLINE
   14     | . iff NEWLINE
   15     | . forr NEWLINE
   16     | . function NEWLINE
   17     | . callfunction NEWLINE
   18     | . robotactions NEWLINE
   19     | . '(' stmts ')'
   20 robotactions: . robotright
   21             | . robotleft
   22 robotmove: . MOVE '(' expr ')'
   23 robotright: . RIGHT
   24 robotleft: . LEFT
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   27 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   28 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   28     | FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts . ENDFOR
   33 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   40 callfunction: . FVARIABLE '[' callfunc_args ']'
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   67 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   68              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   69              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   70              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   71              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   72              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   73              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   74              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   75 declaration: . type VAR DECLARE expr
   76            | . type VAR DECLARE vector
   77            | . type VAR DECLARE matrix
   78 assignment: . VARIABLE ASSIGN expr
   79           | . VVARIABLE ASSIGN vector
   80           | . MVARIABLE ASSIGN matrix
   81 print: . PRINT '(' expr ')'
   82      | . PRINT '(' VVARIABLE ')'
   83      | . PRINT '(' MVARIABLE ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    FVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    ENDFOR     сдвиг, и переход в состояние 262
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmt           переход в состояние 84
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function       переход в состояние 46
    callfunction   переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 250

   31 args_func: . '[' type VAR ']'
   32          | . args_func ',' '[' type VAR ']'
   33 function: '[' return_func ']' DECLARE FUNC VAR '(' . args_func ')' B NEWLINE stmts E

    '['  сдвиг, и переход в состояние 263

    args_func  переход в состояние 264


State 251

   57 vector: VVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 265


State 252

   59 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111
    ')'          сдвиг, и переход в состояние 266


State 253

   58 vector: MVARIABLE '(' expr ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 267


State 254

   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   68 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . vector

    VVARIABLE  сдвиг, и переход в состояние 114
    MVARIABLE  сдвиг, и переход в состояние 115
    '{'        сдвиг, и переход в состояние 79

    vector  переход в состояние 268


State 255

   43 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 97
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100
    ')'         сдвиг, и переход в состояние 269


State 256

   42 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 270


State 257

   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   73 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN . matrix

    VVARIABLE  сдвиг, и переход в состояние 114
    MVARIABLE  сдвиг, и переход в состояние 119
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 271
    vector  переход в состояние 121


State 258

   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   71 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN . vector

    VVARIABLE  сдвиг, и переход в состояние 114
    MVARIABLE  сдвиг, и переход в состояние 115
    '{'        сдвиг, и переход в состояние 79

    vector  переход в состояние 272


State 259

   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   72 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . matrix

    VVARIABLE  сдвиг, и переход в состояние 114
    MVARIABLE  сдвиг, и переход в состояние 119
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 273
    vector  переход в состояние 121


State 260

   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   70 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN . vector

    VVARIABLE  сдвиг, и переход в состояние 114
    MVARIABLE  сдвиг, и переход в состояние 115
    '{'        сдвиг, и переход в состояние 79

    vector  переход в состояние 274


State 261

   69 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN expr .  [NEWLINE]
   90 expr: expr . '+' expr
   91     | expr . '-' expr
   92     | expr . '/' expr
   93     | expr . '<' expr
   94     | expr . '>' expr
   96     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 106
    '<'          сдвиг, и переход в состояние 107
    '>'          сдвиг, и переход в состояние 108
    '+'          сдвиг, и переход в состояние 109
    '-'          сдвиг, и переход в состояние 110
    '/'          сдвиг, и переход в состояние 111

    $default  вывод с использованием правила 69 (vmdeclaration)


State 262

   28 forr: FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR .

    $default  вывод с использованием правила 28 (forr)


State 263

   31 args_func: '[' . type VAR ']'
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    type  переход в состояние 275


State 264

   32 args_func: args_func . ',' '[' type VAR ']'
   33 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func . ')' B NEWLINE stmts E

    ','  сдвиг, и переход в состояние 276
    ')'  сдвиг, и переход в состояние 277


State 265

   57 vector: VVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 57 (vector)


State 266

   59 vector: MVARIABLE '(' '[' ']' ',' expr ')' .

    $default  вывод с использованием правила 59 (vector)


State 267

   58 vector: MVARIABLE '(' expr ',' '[' ']' ')' .

    $default  вывод с использованием правила 58 (vector)


State 268

   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr
   68 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 97
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100

    $default  вывод с использованием правила 68 (vmdeclaration)


State 269

   43 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .

    $default  вывод с использованием правила 43 (matrix)


State 270

   42 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 42 (matrix)


State 271

   46 matrix: matrix . '*' matrix
   47       | matrix . ELEMMULT matrix
   48       | matrix . '\''
   49       | matrix . RIGHTSHIFT
   50       | matrix . LEFTSHIFT
   52       | matrix . ELEMMULT vector
   53       | matrix . ELEMMULT expr
   73 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 91
    '\''        сдвиг, и переход в состояние 92
    LEFTSHIFT   сдвиг, и переход в состояние 93
    RIGHTSHIFT  сдвиг, и переход в состояние 94
    '*'         сдвиг, и переход в состояние 95

    $default  вывод с использованием правила 73 (vmdeclaration)


State 272

   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr
   71 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 97
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100

    $default  вывод с использованием правила 71 (vmdeclaration)


State 273

   46 matrix: matrix . '*' matrix
   47       | matrix . ELEMMULT matrix
   48       | matrix . '\''
   49       | matrix . RIGHTSHIFT
   50       | matrix . LEFTSHIFT
   52       | matrix . ELEMMULT vector
   53       | matrix . ELEMMULT expr
   72 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 91
    '\''        сдвиг, и переход в состояние 92
    LEFTSHIFT   сдвиг, и переход в состояние 93
    RIGHTSHIFT  сдвиг, и переход в состояние 94
    '*'         сдвиг, и переход в состояние 95

    $default  вывод с использованием правила 72 (vmdeclaration)


State 274

   61 vector: vector . ELEMMULT vector
   62       | vector . RIGHTSHIFT
   63       | vector . LEFTSHIFT
   64       | vector . ELEMMULT expr
   70 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 97
    LEFTSHIFT   сдвиг, и переход в состояние 99
    RIGHTSHIFT  сдвиг, и переход в состояние 100

    $default  вывод с использованием правила 70 (vmdeclaration)


State 275

   31 args_func: '[' type . VAR ']'

    VAR  сдвиг, и переход в состояние 278


State 276

   32 args_func: args_func ',' . '[' type VAR ']'

    '['  сдвиг, и переход в состояние 279


State 277

   33 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' . B NEWLINE stmts E

    B  сдвиг, и переход в состояние 280


State 278

   31 args_func: '[' type VAR . ']'

    ']'  сдвиг, и переход в состояние 281


State 279

   32 args_func: args_func ',' '[' . type VAR ']'
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    type  переход в состояние 282


State 280

   33 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B . NEWLINE stmts E

    NEWLINE  сдвиг, и переход в состояние 283


State 281

   31 args_func: '[' type VAR ']' .

    $default  вывод с использованием правила 31 (args_func)


State 282

   32 args_func: args_func ',' '[' type . VAR ']'

    VAR  сдвиг, и переход в состояние 284


State 283

    4 stmts: . stmt
    5      | . stmts stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . vmdeclaration NEWLINE
   12     | . declaration NEWLINE
   13     | . assignment NEWLINE
   14     | . iff NEWLINE
   15     | . forr NEWLINE
   16     | . function NEWLINE
   17     | . callfunction NEWLINE
   18     | . robotactions NEWLINE
   19     | . '(' stmts ')'
   20 robotactions: . robotright
   21             | . robotleft
   22 robotmove: . MOVE '(' expr ')'
   23 robotright: . RIGHT
   24 robotleft: . LEFT
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   27 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   28 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   33 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   33         | '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE . stmts E
   40 callfunction: . FVARIABLE '[' callfunc_args ']'
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   67 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   68              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   69              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   70              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   71              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   72              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   73              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   74              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   75 declaration: . type VAR DECLARE expr
   76            | . type VAR DECLARE vector
   77            | . type VAR DECLARE matrix
   78 assignment: . VARIABLE ASSIGN expr
   79           | . VVARIABLE ASSIGN vector
   80           | . MVARIABLE ASSIGN matrix
   81 print: . PRINT '(' expr ')'
   82      | . PRINT '(' VVARIABLE ')'
   83      | . PRINT '(' MVARIABLE ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    FVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmts          переход в состояние 285
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function       переход в состояние 46
    callfunction   переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 284

   32 args_func: args_func ',' '[' type VAR . ']'

    ']'  сдвиг, и переход в состояние 286


State 285

    5 stmts: stmts . stmt
    6 stmt: . NEWLINE
    7     | . expr NEWLINE
    8     | . vector NEWLINE
    9     | . matrix NEWLINE
   10     | . print NEWLINE
   11     | . vmdeclaration NEWLINE
   12     | . declaration NEWLINE
   13     | . assignment NEWLINE
   14     | . iff NEWLINE
   15     | . forr NEWLINE
   16     | . function NEWLINE
   17     | . callfunction NEWLINE
   18     | . robotactions NEWLINE
   19     | . '(' stmts ')'
   20 robotactions: . robotright
   21             | . robotleft
   22 robotmove: . MOVE '(' expr ')'
   23 robotright: . RIGHT
   24 robotleft: . LEFT
   25 robotwall: . WALL
   26 robotexit: . ROBEX
   27 iff: . IF expr NEWLINE BEGIF stmts ENDIF
   28 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR
   33 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   33         | '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts . E
   40 callfunction: . FVARIABLE '[' callfunc_args ']'
   41 matrix: . '{' listexprs '}'
   42       | . MVARIABLE '(' vector ',' '[' ']' ')'
   43       | . MVARIABLE '(' '[' ']' ',' vector ')'
   44       | . MVARIABLE '(' matrix ')'
   45       | . MVARIABLE
   46       | . matrix '*' matrix
   47       | . matrix ELEMMULT matrix
   48       | . matrix '\''
   49       | . matrix RIGHTSHIFT
   50       | . matrix LEFTSHIFT
   51       | . vector '\''
   52       | . matrix ELEMMULT vector
   53       | . matrix ELEMMULT expr
   56 vector: . '{' exprs '}'
   57       | . VVARIABLE '(' vector ',' '[' ']' ')'
   58       | . MVARIABLE '(' expr ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' expr ')'
   60       | . VVARIABLE
   61       | . vector ELEMMULT vector
   62       | . vector RIGHTSHIFT
   63       | . vector LEFTSHIFT
   64       | . vector ELEMMULT expr
   67 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   68              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   69              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   70              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   71              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   72              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   73              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   74              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   75 declaration: . type VAR DECLARE expr
   76            | . type VAR DECLARE vector
   77            | . type VAR DECLARE matrix
   78 assignment: . VARIABLE ASSIGN expr
   79           | . VVARIABLE ASSIGN vector
   80           | . MVARIABLE ASSIGN matrix
   81 print: . PRINT '(' expr ')'
   82      | . PRINT '(' VVARIABLE ')'
   83      | . PRINT '(' MVARIABLE ')'
   84 expr: . const
   85     | . robotexit
   86     | . robotmove
   87     | . robotwall
   88     | . VARIABLE
   89     | . '-' expr
   90     | . expr '+' expr
   91     | . expr '-' expr
   92     | . expr '/' expr
   93     | . expr '<' expr
   94     | . expr '>' expr
   95     | . '!' expr
   96     | . expr CONJUNCTION expr
   97     | . '(' expr ')'
   98     | . VVARIABLE '(' expr ')'
   99     | . MVARIABLE '(' expr ',' expr ')'
  100 type: . INT
  101     | . CINT
  102     | . VINT
  103     | . MINT
  104     | . CVINT
  105     | . CMINT
  106     | . BOOLEAN
  107     | . CBOOLEAN
  108     | . VBOOLEAN
  109     | . MBOOLEAN
  110     | . CVBOOLEAN
  111     | . CMBOOLEAN
  112 const: . INTEGER
  113      | . BOOL

    BOOL       сдвиг, и переход в состояние 4
    INTEGER    сдвиг, и переход в состояние 5
    VARIABLE   сдвиг, и переход в состояние 6
    VVARIABLE  сдвиг, и переход в состояние 7
    MVARIABLE  сдвиг, и переход в состояние 8
    FVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    E          сдвиг, и переход в состояние 287
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmt           переход в состояние 84
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function       переход в состояние 46
    callfunction   переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 286

   32 args_func: args_func ',' '[' type VAR ']' .

    $default  вывод с использованием правила 32 (args_func)


State 287

   33 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E .

    $default  вывод с использованием правила 33 (function)
