Терминалы не используются в грамматике

   END
   ER


Состояние 4 конфликты: 15 сдвига/вывода, 34 вывода/вывода
Состояние 37 конфликты: 33 сдвига/вывода
Состояние 66 конфликты: 5 сдвига/вывода
Состояние 67 конфликты: 4 сдвига/вывода, 11 вывода/вывода
Состояние 68 конфликты: 6 сдвига/вывода, 22 вывода/вывода
Состояние 84 конфликты: 1 сдвига/вывода
Состояние 85 конфликты: 1 сдвига/вывода
Состояние 86 конфликты: 16 сдвига/вывода
Состояние 98 конфликты: 16 сдвига/вывода
Состояние 131 конфликты: 1 сдвига/вывода
Состояние 158 конфликты: 6 сдвига/вывода
Состояние 173 конфликты: 3 сдвига/вывода
Состояние 174 конфликты: 6 сдвига/вывода, 12 вывода/вывода
Состояние 184 конфликты: 5 сдвига/вывода
Состояние 185 конфликты: 4 сдвига/вывода
Состояние 187 конфликты: 4 сдвига/вывода
Состояние 188 конфликты: 3 сдвига/вывода
Состояние 190 конфликты: 6 сдвига/вывода
Состояние 191 конфликты: 1 сдвига/вывода
Состояние 192 конфликты: 1 сдвига/вывода
Состояние 193 конфликты: 1 сдвига/вывода
Состояние 194 конфликты: 1 сдвига/вывода
Состояние 195 конфликты: 1 сдвига/вывода
Состояние 211 конфликты: 4 вывода/вывода


Грамматика

    0 $accept: program $end

    1 program: func

    2 func: func stmts
    3     | func error
    4     | %empty

    5 stmts: stmt
    6      | stmts stmt
    7      | stmts error
    8      | error

    9 stmt: NEWLINE
   10     | expr NEWLINE
   11     | vector NEWLINE
   12     | matrix NEWLINE
   13     | print NEWLINE
   14     | vmdeclaration NEWLINE
   15     | declaration NEWLINE
   16     | assignment NEWLINE
   17     | iff NEWLINE
   18     | forr NEWLINE
   19     | function NEWLINE
   20     | callfunction NEWLINE
   21     | robotactions NEWLINE
   22     | '(' stmts ')'
   23     | error NEWLINE

   24 robotactions: robotright
   25             | robotleft

   26 robotmove: MOVE '(' expr ')'

   27 robotright: RIGHT

   28 robotleft: LEFT

   29 robotwall: WALL

   30 robotexit: ROBEX

   31 iff: IF expr NEWLINE begif stmts endif
   32    | IF error endif

   33 begif: B
   34      | BEGIF

   35 endif: E
   36      | ENDIF

   37 begfor: B
   38       | BEGFOR

   39 endfor: E
   40       | ENDFOR

   41 forr: FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   42     | FORR error endfor

   43 return_func: type VAR
   44            | return_func ',' type VAR
   45            | return_func error

   46 args_func: '[' type VAR ']'
   47          | args_func ',' '[' type VAR ']'
   48          | args_func error
   49          | error

   50 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   51         | error E

   52 callfunc_args: expr
   53              | vector
   54              | matrix
   55              | callfunc_args ',' expr
   56              | callfunc_args ',' vector
   57              | callfunc_args ',' matrix
   58              | callfunc_args error
   59              | error

   60 callfunction: FVARIABLE '[' callfunc_args ']'
   61             | error '[' callfunc_args ']'

   62 matrix: '{' listexprs '}'
   63       | MVARIABLE '(' vector ',' '[' ']' ')'
   64       | MVARIABLE '(' '[' ']' ',' vector ')'
   65       | MVARIABLE '(' matrix ')'
   66       | MVARIABLE
   67       | matrix '*' matrix
   68       | matrix ELEMMULT matrix
   69       | matrix '\''
   70       | matrix RIGHTSHIFT
   71       | matrix LEFTSHIFT
   72       | vector '\''
   73       | matrix ELEMMULT vector
   74       | matrix ELEMMULT expr
   75       | error matrix
   76       | error vector
   77       | error expr

   78 listexprs: vector ',' vector
   79          | listexprs ',' vector
   80          | listexprs error

   81 vector: '{' exprs '}'
   82       | VVARIABLE '(' vector ',' '[' ']' ')'
   83       | MVARIABLE '(' expr ',' '[' ']' ')'
   84       | MVARIABLE '(' '[' ']' ',' expr ')'
   85       | VVARIABLE
   86       | vector ELEMMULT vector
   87       | vector RIGHTSHIFT
   88       | vector LEFTSHIFT
   89       | vector ELEMMULT expr
   90       | error vector
   91       | error expr

   92 exprs: expr ',' expr
   93      | exprs ',' expr
   94      | exprs error

   95 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr
   96              | VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   97              | MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   98              | MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   99              | MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  100              | MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  101              | MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  102              | MVARIABLE '(' matrix ')' ASSIGN matrix

  103 declaration: type VAR DECLARE expr
  104            | type VAR DECLARE vector
  105            | type VAR DECLARE matrix

  106 assignment: VARIABLE ASSIGN expr
  107           | VVARIABLE ASSIGN vector
  108           | MVARIABLE ASSIGN matrix

  109 print: PRINT '(' expr ')'
  110      | PRINT '(' VVARIABLE ')'
  111      | PRINT '(' MVARIABLE ')'

  112 expr: const
  113     | robotexit
  114     | robotmove
  115     | robotwall
  116     | VARIABLE
  117     | '-' expr
  118     | expr '+' expr
  119     | expr '-' expr
  120     | expr '/' expr
  121     | expr '<' expr
  122     | expr '>' expr
  123     | '!' expr
  124     | expr CONJUNCTION expr
  125     | '(' expr ')'
  126     | VVARIABLE '(' expr ')'
  127     | MVARIABLE '(' expr ',' expr ')'
  128     | error expr

  129 type: INT
  130     | CINT
  131     | VINT
  132     | MINT
  133     | CVINT
  134     | CMINT
  135     | BOOLEAN
  136     | CBOOLEAN
  137     | VBOOLEAN
  138     | MBOOLEAN
  139     | CVBOOLEAN
  140     | CMBOOLEAN

  141 const: INTEGER
  142      | BOOL


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'!' (33) 123
'\'' (39) 69 72
'(' (40) 22 26 50 63 64 65 82 83 84 95 96 97 98 99 100 101 102 109
    110 111 125 126 127
')' (41) 22 26 50 63 64 65 82 83 84 95 96 97 98 99 100 101 102 109
    110 111 125 126 127
'*' (42) 67
'+' (43) 118
',' (44) 44 47 55 56 57 63 64 78 79 82 83 84 92 93 96 97 98 99 100
    101 127
'-' (45) 117 119
'/' (47) 120
'<' (60) 121
'>' (62) 122
'[' (91) 46 47 50 60 61 63 64 82 83 84 96 98 99 100 101
']' (93) 46 47 50 60 61 63 64 82 83 84 96 98 99 100 101
'{' (123) 62 81
'}' (125) 62 81
error (256) 3 7 8 23 32 42 45 48 49 51 58 59 61 75 76 77 80 90 91 94
    128
END (258)
BOOL <boolPtr> (259) 142
INTEGER <intPtr> (260) 141
VARIABLE <varName> (261) 106 116
VVARIABLE <varName> (262) 82 85 95 96 107 110 126
MVARIABLE <varName> (263) 63 64 65 66 83 84 97 98 99 100 101 102 108
    111 127
VAR <varName> (264) 43 44 46 47 50 103 104 105
FVARIABLE <varName> (265) 60
CINT <vtype> (266) 130
VINT <vtype> (267) 131
MINT <vtype> (268) 132
INT <vtype> (269) 129
CVINT <vtype> (270) 133
CMINT <vtype> (271) 134
BOOLEAN <vtype> (272) 135
CBOOLEAN <vtype> (273) 136
VBOOLEAN <vtype> (274) 137
MBOOLEAN <vtype> (275) 138
CVBOOLEAN <vtype> (276) 139
CMBOOLEAN <vtype> (277) 140
NEWLINE (278) 9 10 11 12 13 14 15 16 17 18 19 20 21 23 31 41 50
PRINT (279) 109 110 111
CONJUNCTION (280) 124
ELEMMULT (281) 68 73 74 86 89
LEFTSHIFT (282) 71 88
RIGHTSHIFT (283) 70 87
IF (284) 31 32
FORR (285) 41 42
ER (286)
DOUBLEDOT (287) 41
B (288) 33 37 50
E (289) 35 39 50 51
FUNC (290) 50
MOVE (291) 26
RIGHT (292) 27
LEFT (293) 28
ROBEX (294) 30
WALL (295) 29
BEGFOR (296) 38
BEGIF (297) 34
ENDIF (298) 36
ENDFOR (299) 40
ASSIGN (300) 95 96 97 98 99 100 101 102 106 107 108
DECLARE (301) 50 103 104 105
UMINUS (302)


Нетерминальные символы с правилами, в которых они появляются

$accept (63)
    налево: 0
program (64)
    налево: 1, направо: 0
func (65)
    налево: 2 3 4, направо: 1 2 3
stmts <ptr> (66)
    налево: 5 6 7 8, направо: 2 6 7 22 31 41 50
stmt <ptr> (67)
    налево: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23, направо:
    5 6
robotactions <ptr> (68)
    налево: 24 25, направо: 21
robotmove <ptr> (69)
    налево: 26, направо: 114
robotright <ptr> (70)
    налево: 27, направо: 24
robotleft <ptr> (71)
    налево: 28, направо: 25
robotwall <ptr> (72)
    налево: 29, направо: 115
robotexit <ptr> (73)
    налево: 30, направо: 113
iff <ptr> (74)
    налево: 31 32, направо: 17
begif (75)
    налево: 33 34, направо: 31
endif (76)
    налево: 35 36, направо: 31 32
begfor (77)
    налево: 37 38, направо: 41
endfor (78)
    налево: 39 40, направо: 41 42
forr <ptr> (79)
    налево: 41 42, направо: 18
return_func <ptr> (80)
    налево: 43 44 45, направо: 44 45 50
args_func <ptr> (81)
    налево: 46 47 48 49, направо: 47 48 50
function <ptr> (82)
    налево: 50 51, направо: 19
callfunc_args <ptr> (83)
    налево: 52 53 54 55 56 57 58 59, направо: 55 56 57
    58 60 61
callfunction <ptr> (84)
    налево: 60 61, направо: 20
matrix <ptr> (85)
    налево: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77,
    направо: 12 54 57 65 67 68 69 70 71 73 74 75 100 101 102
    105 108
listexprs <ptr> (86)
    налево: 78 79 80, направо: 62 79 80
vector <ptr> (87)
    налево: 81 82 83 84 85 86 87 88 89 90 91, направо:
    11 53 56 63 64 72 73 76 78 79 82 86 87 88 89 90 96 98 99 100 101
    104 107
exprs <ptr> (88)
    налево: 92 93 94, направо: 81 93 94
vmdeclaration <ptr> (89)
    налево: 95 96 97 98 99 100 101 102, направо: 14
declaration <varOpPtr> (90)
    налево: 103 104 105, направо: 15 41
assignment <varOpPtr> (91)
    налево: 106 107 108, направо: 16
print <ptr> (92)
    налево: 109 110 111, направо: 13
expr <ptr> (93)
    налево: 112 113 114 115 116 117 118 119 120 121 122 123 124
    125 126 127 128, направо: 10 26 31 41 52 55 74 77 83 84
    89 91 92 93 95 97 98 99 103 106 109 117 118 119 120 121 122 123
    124 125 126 127 128
type <vtype> (94)
    налево: 129 130 131 132 133 134 135 136 137 138 139 140,
    направо: 43 44 46 47 103 104 105
const <ptr> (95)
    налево: 141 142, направо: 112


State 0

    0 $accept: . program $end
    1 program: . func
    2 func: . func stmts
    3     | . func error
    4     | . %empty

    $default  вывод с использованием правила 4 (func)

    program  переход в состояние 1
    func     переход в состояние 2


State 1

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 3


State 2

    1 program: func .  [$end]
    2 func: func . stmts
    3     | func . error
    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   32    | . IF error endif
   41 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   42     | . FORR error endfor
   50 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   51         | . error E
   60 callfunction: . FVARIABLE '[' callfunc_args ']'
   61             | . error '[' callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   95 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   96              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   98              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   99              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  100              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  101              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  102              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  103 declaration: . type VAR DECLARE expr
  104            | . type VAR DECLARE vector
  105            | . type VAR DECLARE matrix
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109 print: . PRINT '(' expr ')'
  110      | . PRINT '(' VVARIABLE ')'
  111      | . PRINT '(' MVARIABLE ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 4
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    $end  вывод с использованием правила 1 (program)

    stmts          переход в состояние 37
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 3

    0 $accept: program $end .

    $default  принять


State 4

    3 func: func error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    8 stmts: error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   51 function: error . E
   61 callfunction: error . '[' callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   75       | error . matrix
   76       | . error vector
   76       | error . vector
   77       | . error expr
   77       | error . expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   90       | error . vector
   91       | . error expr
   91       | error . expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  128     | error . expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    NEWLINE    сдвиг, и переход в состояние 62
    E          сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 36

    $end       вывод с использованием правила 3 (func)
    $end       [вывод с использованием правила 8 (stmts)]
    error      [вывод с использованием правила 3 (func)]
    error      [вывод с использованием правила 8 (stmts)]
    BOOL       [вывод с использованием правила 3 (func)]
    BOOL       [вывод с использованием правила 8 (stmts)]
    INTEGER    [вывод с использованием правила 3 (func)]
    INTEGER    [вывод с использованием правила 8 (stmts)]
    VARIABLE   [вывод с использованием правила 3 (func)]
    VARIABLE   [вывод с использованием правила 8 (stmts)]
    VVARIABLE  [вывод с использованием правила 3 (func)]
    VVARIABLE  [вывод с использованием правила 8 (stmts)]
    MVARIABLE  [вывод с использованием правила 3 (func)]
    MVARIABLE  [вывод с использованием правила 8 (stmts)]
    FVARIABLE  вывод с использованием правила 3 (func)
    FVARIABLE  [вывод с использованием правила 8 (stmts)]
    CINT       вывод с использованием правила 3 (func)
    CINT       [вывод с использованием правила 8 (stmts)]
    VINT       вывод с использованием правила 3 (func)
    VINT       [вывод с использованием правила 8 (stmts)]
    MINT       вывод с использованием правила 3 (func)
    MINT       [вывод с использованием правила 8 (stmts)]
    INT        вывод с использованием правила 3 (func)
    INT        [вывод с использованием правила 8 (stmts)]
    CVINT      вывод с использованием правила 3 (func)
    CVINT      [вывод с использованием правила 8 (stmts)]
    CMINT      вывод с использованием правила 3 (func)
    CMINT      [вывод с использованием правила 8 (stmts)]
    BOOLEAN    вывод с использованием правила 3 (func)
    BOOLEAN    [вывод с использованием правила 8 (stmts)]
    CBOOLEAN   вывод с использованием правила 3 (func)
    CBOOLEAN   [вывод с использованием правила 8 (stmts)]
    VBOOLEAN   вывод с использованием правила 3 (func)
    VBOOLEAN   [вывод с использованием правила 8 (stmts)]
    MBOOLEAN   вывод с использованием правила 3 (func)
    MBOOLEAN   [вывод с использованием правила 8 (stmts)]
    CVBOOLEAN  вывод с использованием правила 3 (func)
    CVBOOLEAN  [вывод с использованием правила 8 (stmts)]
    CMBOOLEAN  вывод с использованием правила 3 (func)
    CMBOOLEAN  [вывод с использованием правила 8 (stmts)]
    NEWLINE    [вывод с использованием правила 3 (func)]
    NEWLINE    [вывод с использованием правила 8 (stmts)]
    PRINT      вывод с использованием правила 3 (func)
    PRINT      [вывод с использованием правила 8 (stmts)]
    IF         вывод с использованием правила 3 (func)
    IF         [вывод с использованием правила 8 (stmts)]
    FORR       вывод с использованием правила 3 (func)
    FORR       [вывод с использованием правила 8 (stmts)]
    MOVE       [вывод с использованием правила 3 (func)]
    MOVE       [вывод с использованием правила 8 (stmts)]
    RIGHT      вывод с использованием правила 3 (func)
    RIGHT      [вывод с использованием правила 8 (stmts)]
    LEFT       вывод с использованием правила 3 (func)
    LEFT       [вывод с использованием правила 8 (stmts)]
    ROBEX      [вывод с использованием правила 3 (func)]
    ROBEX      [вывод с использованием правила 8 (stmts)]
    WALL       [вывод с использованием правила 3 (func)]
    WALL       [вывод с использованием правила 8 (stmts)]
    '-'        [вывод с использованием правила 3 (func)]
    '-'        [вывод с использованием правила 8 (stmts)]
    '!'        [вывод с использованием правила 3 (func)]
    '!'        [вывод с использованием правила 8 (stmts)]
    '('        [вывод с использованием правила 3 (func)]
    '('        [вывод с использованием правила 8 (stmts)]
    '['        [вывод с использованием правила 3 (func)]
    '['        [вывод с использованием правила 8 (stmts)]
    '{'        [вывод с использованием правила 3 (func)]
    '{'        [вывод с использованием правила 8 (stmts)]

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 5

  142 const: BOOL .

    $default  вывод с использованием правила 142 (const)


State 6

  141 const: INTEGER .

    $default  вывод с использованием правила 141 (const)


State 7

  106 assignment: VARIABLE . ASSIGN expr
  116 expr: VARIABLE .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 69

    $default  вывод с использованием правила 116 (expr)


State 8

   82 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   85       | VVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   95 vmdeclaration: VVARIABLE . '(' expr ')' ASSIGN expr
   96              | VVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN vector
  107 assignment: VVARIABLE . ASSIGN vector
  126 expr: VVARIABLE . '(' expr ')'

    ASSIGN  сдвиг, и переход в состояние 70
    '('     сдвиг, и переход в состояние 71

    $default  вывод с использованием правила 85 (vector)


State 9

   63 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   64       | MVARIABLE . '(' '[' ']' ',' vector ')'
   65       | MVARIABLE . '(' matrix ')'
   66       | MVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   83 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   84       | MVARIABLE . '(' '[' ']' ',' expr ')'
   97 vmdeclaration: MVARIABLE . '(' expr ',' expr ')' ASSIGN expr
   98              | MVARIABLE . '(' expr ',' '[' ']' ')' ASSIGN vector
   99              | MVARIABLE . '(' '[' ']' ',' expr ')' ASSIGN vector
  100              | MVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN matrix
  101              | MVARIABLE . '(' '[' ']' ',' vector ')' ASSIGN matrix
  102              | MVARIABLE . '(' matrix ')' ASSIGN matrix
  108 assignment: MVARIABLE . ASSIGN matrix
  127 expr: MVARIABLE . '(' expr ',' expr ')'

    ASSIGN  сдвиг, и переход в состояние 72
    '('     сдвиг, и переход в состояние 73

    $default  вывод с использованием правила 66 (matrix)


State 10

   60 callfunction: FVARIABLE . '[' callfunc_args ']'

    '['  сдвиг, и переход в состояние 74


State 11

  130 type: CINT .

    $default  вывод с использованием правила 130 (type)


State 12

  131 type: VINT .

    $default  вывод с использованием правила 131 (type)


State 13

  132 type: MINT .

    $default  вывод с использованием правила 132 (type)


State 14

  129 type: INT .

    $default  вывод с использованием правила 129 (type)


State 15

  133 type: CVINT .

    $default  вывод с использованием правила 133 (type)


State 16

  134 type: CMINT .

    $default  вывод с использованием правила 134 (type)


State 17

  135 type: BOOLEAN .

    $default  вывод с использованием правила 135 (type)


State 18

  136 type: CBOOLEAN .

    $default  вывод с использованием правила 136 (type)


State 19

  137 type: VBOOLEAN .

    $default  вывод с использованием правила 137 (type)


State 20

  138 type: MBOOLEAN .

    $default  вывод с использованием правила 138 (type)


State 21

  139 type: CVBOOLEAN .

    $default  вывод с использованием правила 139 (type)


State 22

  140 type: CMBOOLEAN .

    $default  вывод с использованием правила 140 (type)


State 23

    9 stmt: NEWLINE .

    $default  вывод с использованием правила 9 (stmt)


State 24

  109 print: PRINT . '(' expr ')'
  110      | PRINT . '(' VVARIABLE ')'
  111      | PRINT . '(' MVARIABLE ')'

    '('  сдвиг, и переход в состояние 75


State 25

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: IF . expr NEWLINE begif stmts endif
   32    | IF . error endif
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 79
    const      переход в состояние 57


State 26

   41 forr: FORR . declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   42     | FORR . error endfor
  103 declaration: . type VAR DECLARE expr
  104            | . type VAR DECLARE vector
  105            | . type VAR DECLARE matrix
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN

    error      сдвиг, и переход в состояние 80
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    declaration  переход в состояние 81
    type         переход в состояние 56


State 27

   26 robotmove: MOVE . '(' expr ')'

    '('  сдвиг, и переход в состояние 82


State 28

   27 robotright: RIGHT .

    $default  вывод с использованием правила 27 (robotright)


State 29

   28 robotleft: LEFT .

    $default  вывод с использованием правила 28 (robotleft)


State 30

   30 robotexit: ROBEX .

    $default  вывод с использованием правила 30 (robotexit)


State 31

   29 robotwall: WALL .

    $default  вывод с использованием правила 29 (robotwall)


State 32

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  117     | '-' . expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 84
    const      переход в состояние 57


State 33

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  123     | '!' . expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 85
    const      переход в состояние 57


State 34

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   22     | '(' . stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   32    | . IF error endif
   41 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   42     | . FORR error endfor
   50 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   51         | . error E
   60 callfunction: . FVARIABLE '[' callfunc_args ']'
   61             | . error '[' callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   95 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   96              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   98              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   99              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  100              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  101              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  102              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  103 declaration: . type VAR DECLARE expr
  104            | . type VAR DECLARE vector
  105            | . type VAR DECLARE matrix
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109 print: . PRINT '(' expr ')'
  110      | . PRINT '(' VVARIABLE ')'
  111      | . PRINT '(' MVARIABLE ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  125     | '(' . expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 86
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 87
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 88
    type           переход в состояние 56
    const          переход в состояние 57


State 35

   43 return_func: . type VAR
   44            | . return_func ',' type VAR
   45            | . return_func error
   50 function: '[' . return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    return_func  переход в состояние 89
    type         переход в состояние 90


State 36

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   62 matrix: '{' . listexprs '}'
   78 listexprs: . vector ',' vector
   79          | . listexprs ',' vector
   80          | . listexprs error
   81 vector: . '{' exprs '}'
   81       | '{' . exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   92 exprs: . expr ',' expr
   93      | . exprs ',' expr
   94      | . exprs error
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    listexprs  переход в состояние 94
    vector     переход в состояние 95
    exprs      переход в состояние 96
    expr       переход в состояние 97
    const      переход в состояние 57


State 37

    2 func: func stmts .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   32    | . IF error endif
   41 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   42     | . FORR error endfor
   50 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   51         | . error E
   60 callfunction: . FVARIABLE '[' callfunc_args ']'
   61             | . error '[' callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   95 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   96              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   98              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   99              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  100              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  101              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  102              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  103 declaration: . type VAR DECLARE expr
  104            | . type VAR DECLARE vector
  105            | . type VAR DECLARE matrix
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109 print: . PRINT '(' expr ')'
  110      | . PRINT '(' VVARIABLE ')'
  111      | . PRINT '(' MVARIABLE ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 98
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    $end       вывод с использованием правила 2 (func)
    error      [вывод с использованием правила 2 (func)]
    BOOL       [вывод с использованием правила 2 (func)]
    INTEGER    [вывод с использованием правила 2 (func)]
    VARIABLE   [вывод с использованием правила 2 (func)]
    VVARIABLE  [вывод с использованием правила 2 (func)]
    MVARIABLE  [вывод с использованием правила 2 (func)]
    FVARIABLE  [вывод с использованием правила 2 (func)]
    CINT       [вывод с использованием правила 2 (func)]
    VINT       [вывод с использованием правила 2 (func)]
    MINT       [вывод с использованием правила 2 (func)]
    INT        [вывод с использованием правила 2 (func)]
    CVINT      [вывод с использованием правила 2 (func)]
    CMINT      [вывод с использованием правила 2 (func)]
    BOOLEAN    [вывод с использованием правила 2 (func)]
    CBOOLEAN   [вывод с использованием правила 2 (func)]
    VBOOLEAN   [вывод с использованием правила 2 (func)]
    MBOOLEAN   [вывод с использованием правила 2 (func)]
    CVBOOLEAN  [вывод с использованием правила 2 (func)]
    CMBOOLEAN  [вывод с использованием правила 2 (func)]
    NEWLINE    [вывод с использованием правила 2 (func)]
    PRINT      [вывод с использованием правила 2 (func)]
    IF         [вывод с использованием правила 2 (func)]
    FORR       [вывод с использованием правила 2 (func)]
    MOVE       [вывод с использованием правила 2 (func)]
    RIGHT      [вывод с использованием правила 2 (func)]
    LEFT       [вывод с использованием правила 2 (func)]
    ROBEX      [вывод с использованием правила 2 (func)]
    WALL       [вывод с использованием правила 2 (func)]
    '-'        [вывод с использованием правила 2 (func)]
    '!'        [вывод с использованием правила 2 (func)]
    '('        [вывод с использованием правила 2 (func)]
    '['        [вывод с использованием правила 2 (func)]
    '{'        [вывод с использованием правила 2 (func)]

    stmt           переход в состояние 99
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 38

    5 stmts: stmt .

    $default  вывод с использованием правила 5 (stmts)


State 39

   21 stmt: robotactions . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 100


State 40

  114 expr: robotmove .

    $default  вывод с использованием правила 114 (expr)


State 41

   24 robotactions: robotright .

    $default  вывод с использованием правила 24 (robotactions)


State 42

   25 robotactions: robotleft .

    $default  вывод с использованием правила 25 (robotactions)


State 43

  115 expr: robotwall .

    $default  вывод с использованием правила 115 (expr)


State 44

  113 expr: robotexit .

    $default  вывод с использованием правила 113 (expr)


State 45

   17 stmt: iff . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 101


State 46

   18 stmt: forr . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 102


State 47

   19 stmt: function . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 103


State 48

   20 stmt: callfunction . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 104


State 49

   12 stmt: matrix . NEWLINE
   67 matrix: matrix . '*' matrix
   68       | matrix . ELEMMULT matrix
   69       | matrix . '\''
   70       | matrix . RIGHTSHIFT
   71       | matrix . LEFTSHIFT
   73       | matrix . ELEMMULT vector
   74       | matrix . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 105
    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110


State 50

   11 stmt: vector . NEWLINE
   72 matrix: vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 111
    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115


State 51

   14 stmt: vmdeclaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 116


State 52

   15 stmt: declaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 117


State 53

   16 stmt: assignment . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 118


State 54

   13 stmt: print . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 119


State 55

   10 stmt: expr . NEWLINE
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 120
    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 56

  103 declaration: type . VAR DECLARE expr
  104            | type . VAR DECLARE vector
  105            | type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 127


State 57

  112 expr: const .

    $default  вывод с использованием правила 112 (expr)


State 58

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   75       | error . matrix
   76       | . error vector
   76       | error . vector
   77       | . error expr
   77       | error . expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   90       | error . vector
   91       | . error expr
   91       | error . expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  128     | error . expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 59

  116 expr: VARIABLE .

    $default  вывод с использованием правила 116 (expr)


State 60

   82 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   85       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  126 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 128

    $default  вывод с использованием правила 85 (vector)


State 61

   63 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   64       | MVARIABLE . '(' '[' ']' ',' vector ')'
   65       | MVARIABLE . '(' matrix ')'
   66       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   83 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   84       | MVARIABLE . '(' '[' ']' ',' expr ')'
  127 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 129

    $default  вывод с использованием правила 66 (matrix)


State 62

   23 stmt: error NEWLINE .

    $default  вывод с использованием правила 23 (stmt)


State 63

   51 function: error E .

    $default  вывод с использованием правила 51 (function)


State 64

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  125     | '(' . expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 130
    const      переход в состояние 57


State 65

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   52 callfunc_args: . expr
   53              | . vector
   54              | . matrix
   55              | . callfunc_args ',' expr
   56              | . callfunc_args ',' vector
   57              | . callfunc_args ',' matrix
   58              | . callfunc_args error
   59              | . error
   61 callfunction: error '[' . callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 131
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove      переход в состояние 40
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    callfunc_args  переход в состояние 132
    matrix         переход в состояние 133
    vector         переход в состояние 134
    expr           переход в состояние 135
    const          переход в состояние 57


State 66

   67 matrix: matrix . '*' matrix
   68       | matrix . ELEMMULT matrix
   69       | matrix . '\''
   70       | matrix . RIGHTSHIFT
   71       | matrix . LEFTSHIFT
   73       | matrix . ELEMMULT vector
   74       | matrix . ELEMMULT expr
   75       | error matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    ELEMMULT    [вывод с использованием правила 75 (matrix)]
    '\''        [вывод с использованием правила 75 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 75 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 75 (matrix)]
    '*'         [вывод с использованием правила 75 (matrix)]
    $default    вывод с использованием правила 75 (matrix)


State 67

   72 matrix: vector . '\''
   76       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
   90       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    error       вывод с использованием правила 76 (matrix)
    error       [вывод с использованием правила 90 (vector)]
    NEWLINE     вывод с использованием правила 76 (matrix)
    NEWLINE     [вывод с использованием правила 90 (vector)]
    ELEMMULT    [вывод с использованием правила 76 (matrix)]
    ELEMMULT    [вывод с использованием правила 90 (vector)]
    '\''        [вывод с использованием правила 76 (matrix)]
    '\''        [вывод с использованием правила 90 (vector)]
    LEFTSHIFT   [вывод с использованием правила 76 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 90 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 76 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 90 (vector)]
    ','         вывод с использованием правила 76 (matrix)
    ','         [вывод с использованием правила 90 (vector)]
    DOUBLEDOT   вывод с использованием правила 76 (matrix)
    DOUBLEDOT   [вывод с использованием правила 90 (vector)]
    '*'         вывод с использованием правила 76 (matrix)
    '*'         [вывод с использованием правила 90 (vector)]
    ')'         вывод с использованием правила 76 (matrix)
    ')'         [вывод с использованием правила 90 (vector)]
    ']'         вывод с использованием правила 76 (matrix)
    ']'         [вывод с использованием правила 90 (vector)]
    $default    вывод с использованием правила 76 (matrix)


State 68

   77 matrix: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   91 vector: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr
  128     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']']

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    error        вывод с использованием правила 77 (matrix)
    error        [вывод с использованием правила 91 (vector)]
    error        [вывод с использованием правила 128 (expr)]
    NEWLINE      вывод с использованием правила 77 (matrix)
    NEWLINE      [вывод с использованием правила 91 (vector)]
    NEWLINE      [вывод с использованием правила 128 (expr)]
    CONJUNCTION  [вывод с использованием правила 128 (expr)]
    ELEMMULT     вывод с использованием правила 77 (matrix)
    ELEMMULT     [вывод с использованием правила 91 (vector)]
    ELEMMULT     [вывод с использованием правила 128 (expr)]
    '\''         вывод с использованием правила 77 (matrix)
    '\''         [вывод с использованием правила 91 (vector)]
    '\''         [вывод с использованием правила 128 (expr)]
    LEFTSHIFT    вывод с использованием правила 77 (matrix)
    LEFTSHIFT    [вывод с использованием правила 91 (vector)]
    LEFTSHIFT    [вывод с использованием правила 128 (expr)]
    RIGHTSHIFT   вывод с использованием правила 77 (matrix)
    RIGHTSHIFT   [вывод с использованием правила 91 (vector)]
    RIGHTSHIFT   [вывод с использованием правила 128 (expr)]
    ','          вывод с использованием правила 77 (matrix)
    ','          [вывод с использованием правила 91 (vector)]
    ','          [вывод с использованием правила 128 (expr)]
    DOUBLEDOT    вывод с использованием правила 77 (matrix)
    DOUBLEDOT    [вывод с использованием правила 91 (vector)]
    DOUBLEDOT    [вывод с использованием правила 128 (expr)]
    '<'          [вывод с использованием правила 128 (expr)]
    '>'          [вывод с использованием правила 128 (expr)]
    '+'          [вывод с использованием правила 128 (expr)]
    '-'          [вывод с использованием правила 128 (expr)]
    '*'          вывод с использованием правила 77 (matrix)
    '*'          [вывод с использованием правила 91 (vector)]
    '*'          [вывод с использованием правила 128 (expr)]
    '/'          [вывод с использованием правила 128 (expr)]
    ')'          вывод с использованием правила 77 (matrix)
    ')'          [вывод с использованием правила 91 (vector)]
    ')'          [вывод с использованием правила 128 (expr)]
    ']'          вывод с использованием правила 77 (matrix)
    ']'          [вывод с использованием правила 91 (vector)]
    ']'          [вывод с использованием правила 128 (expr)]
    $default     вывод с использованием правила 77 (matrix)


State 69

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  106 assignment: VARIABLE ASSIGN . expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 136
    const      переход в состояние 57


State 70

   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  107 assignment: VVARIABLE ASSIGN . vector

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 140


State 71

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | VVARIABLE '(' . vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   95 vmdeclaration: VVARIABLE '(' . expr ')' ASSIGN expr
   96              | VVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN vector
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  126     | VVARIABLE '(' . expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 141
    expr       переход в состояние 142
    const      переход в состояние 57


State 72

   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  108 assignment: MVARIABLE ASSIGN . matrix

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 145
    vector  переход в состояние 146


State 73

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | MVARIABLE '(' . vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | MVARIABLE '(' . '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   65       | MVARIABLE '(' . matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | MVARIABLE '(' . expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | MVARIABLE '(' . '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   97 vmdeclaration: MVARIABLE '(' . expr ',' expr ')' ASSIGN expr
   98              | MVARIABLE '(' . expr ',' '[' ']' ')' ASSIGN vector
   99              | MVARIABLE '(' . '[' ']' ',' expr ')' ASSIGN vector
  100              | MVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN matrix
  101              | MVARIABLE '(' . '[' ']' ',' vector ')' ASSIGN matrix
  102              | MVARIABLE '(' . matrix ')' ASSIGN matrix
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  127     | MVARIABLE '(' . expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 147
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 148
    vector     переход в состояние 149
    expr       переход в состояние 150
    const      переход в состояние 57


State 74

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   52 callfunc_args: . expr
   53              | . vector
   54              | . matrix
   55              | . callfunc_args ',' expr
   56              | . callfunc_args ',' vector
   57              | . callfunc_args ',' matrix
   58              | . callfunc_args error
   59              | . error
   60 callfunction: FVARIABLE '[' . callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 131
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove      переход в состояние 40
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    callfunc_args  переход в состояние 151
    matrix         переход в состояние 133
    vector         переход в состояние 134
    expr           переход в состояние 135
    const          переход в состояние 57


State 75

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  109 print: PRINT '(' . expr ')'
  110      | PRINT '(' . VVARIABLE ')'
  111      | PRINT '(' . MVARIABLE ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 152
    MVARIABLE  сдвиг, и переход в состояние 153
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 154
    const      переход в состояние 57


State 76

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   32 iff: IF error . endif
   35 endif: . E
   36      | . ENDIF
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  128     | error . expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    E          сдвиг, и переход в состояние 155
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    ENDIF      сдвиг, и переход в состояние 156
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    endif      переход в состояние 157
    expr       переход в состояние 158
    const      переход в состояние 57


State 77

  126 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 159


State 78

  127 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 160


State 79

   31 iff: IF expr . NEWLINE begif stmts endif
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 161
    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 80

   39 endfor: . E
   40       | . ENDFOR
   42 forr: FORR error . endfor

    E       сдвиг, и переход в состояние 162
    ENDFOR  сдвиг, и переход в состояние 163

    endfor  переход в состояние 164


State 81

   41 forr: FORR declaration . DOUBLEDOT expr NEWLINE begfor stmts endfor

    DOUBLEDOT  сдвиг, и переход в состояние 165


State 82

   26 robotmove: . MOVE '(' expr ')'
   26          | MOVE '(' . expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 166
    const      переход в состояние 57


State 83

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  128     | error . expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 158
    const      переход в состояние 57


State 84

  117 expr: '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  118     | expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 117 (expr)]
    $default     вывод с использованием правила 117 (expr)

    Конфликт между правилом 117 и лексемой '<' разрешен выводом ('<' < UMINUS).
    Конфликт между правилом 117 и лексемой '>' разрешен выводом ('>' < UMINUS).
    Конфликт между правилом 117 и лексемой '+' разрешен выводом ('+' < UMINUS).
    Конфликт между правилом 117 и лексемой '-' разрешен выводом ('-' < UMINUS).
    Конфликт между правилом 117 и лексемой '/' разрешен выводом ('/' < UMINUS).


State 85

  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  123     | '!' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 123 (expr)]
    $default     вывод с использованием правила 123 (expr)

    Конфликт между правилом 123 и лексемой '<' разрешен выводом ('<' < '!').
    Конфликт между правилом 123 и лексемой '>' разрешен выводом ('>' < '!').
    Конфликт между правилом 123 и лексемой '+' разрешен выводом ('+' < '!').
    Конфликт между правилом 123 и лексемой '-' разрешен выводом ('-' < '!').
    Конфликт между правилом 123 и лексемой '/' разрешен выводом ('/' < '!').


State 86

    8 stmts: error .  [error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, E, MOVE, RIGHT, LEFT, ROBEX, WALL, ENDIF, ENDFOR, '-', '!', '(', ')', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   51 function: error . E
   61 callfunction: error . '[' callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   75       | error . matrix
   76       | . error vector
   76       | error . vector
   77       | . error expr
   77       | error . expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   90       | error . vector
   91       | . error expr
   91       | error . expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  128     | error . expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    NEWLINE    сдвиг, и переход в состояние 62
    E          сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 36

    error      [вывод с использованием правила 8 (stmts)]
    BOOL       [вывод с использованием правила 8 (stmts)]
    INTEGER    [вывод с использованием правила 8 (stmts)]
    VARIABLE   [вывод с использованием правила 8 (stmts)]
    VVARIABLE  [вывод с использованием правила 8 (stmts)]
    MVARIABLE  [вывод с использованием правила 8 (stmts)]
    FVARIABLE  вывод с использованием правила 8 (stmts)
    CINT       вывод с использованием правила 8 (stmts)
    VINT       вывод с использованием правила 8 (stmts)
    MINT       вывод с использованием правила 8 (stmts)
    INT        вывод с использованием правила 8 (stmts)
    CVINT      вывод с использованием правила 8 (stmts)
    CMINT      вывод с использованием правила 8 (stmts)
    BOOLEAN    вывод с использованием правила 8 (stmts)
    CBOOLEAN   вывод с использованием правила 8 (stmts)
    VBOOLEAN   вывод с использованием правила 8 (stmts)
    MBOOLEAN   вывод с использованием правила 8 (stmts)
    CVBOOLEAN  вывод с использованием правила 8 (stmts)
    CMBOOLEAN  вывод с использованием правила 8 (stmts)
    NEWLINE    [вывод с использованием правила 8 (stmts)]
    PRINT      вывод с использованием правила 8 (stmts)
    IF         вывод с использованием правила 8 (stmts)
    FORR       вывод с использованием правила 8 (stmts)
    E          [вывод с использованием правила 8 (stmts)]
    MOVE       [вывод с использованием правила 8 (stmts)]
    RIGHT      вывод с использованием правила 8 (stmts)
    LEFT       вывод с использованием правила 8 (stmts)
    ROBEX      [вывод с использованием правила 8 (stmts)]
    WALL       [вывод с использованием правила 8 (stmts)]
    ENDIF      вывод с использованием правила 8 (stmts)
    ENDFOR     вывод с использованием правила 8 (stmts)
    '-'        [вывод с использованием правила 8 (stmts)]
    '!'        [вывод с использованием правила 8 (stmts)]
    '('        [вывод с использованием правила 8 (stmts)]
    ')'        вывод с использованием правила 8 (stmts)
    '['        [вывод с использованием правила 8 (stmts)]
    '{'        [вывод с использованием правила 8 (stmts)]

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 87

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   22     | '(' stmts . ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   32    | . IF error endif
   41 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   42     | . FORR error endfor
   50 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   51         | . error E
   60 callfunction: . FVARIABLE '[' callfunc_args ']'
   61             | . error '[' callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   95 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   96              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   98              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   99              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  100              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  101              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  102              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  103 declaration: . type VAR DECLARE expr
  104            | . type VAR DECLARE vector
  105            | . type VAR DECLARE matrix
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109 print: . PRINT '(' expr ')'
  110      | . PRINT '(' VVARIABLE ')'
  111      | . PRINT '(' MVARIABLE ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 98
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    ')'        сдвиг, и переход в состояние 167
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 99
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 88

   10 stmt: expr . NEWLINE
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr
  125     | '(' expr . ')'

    NEWLINE      сдвиг, и переход в состояние 120
    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 168


State 89

   44 return_func: return_func . ',' type VAR
   45            | return_func . error
   50 function: '[' return_func . ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E

    error  сдвиг, и переход в состояние 169
    ','    сдвиг, и переход в состояние 170
    ']'    сдвиг, и переход в состояние 171


State 90

   43 return_func: type . VAR

    VAR  сдвиг, и переход в состояние 172


State 91

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   90       | error . vector
   91       | . error expr
   91       | error . expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  128     | error . expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 173
    expr       переход в состояние 174
    const      переход в состояние 57


State 92

   83 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   84       | MVARIABLE . '(' '[' ']' ',' expr ')'
  127 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 175


State 93

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   81 vector: '{' . exprs '}'
   92 exprs: . expr ',' expr
   93      | . exprs ',' expr
   94      | . exprs error
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    exprs      переход в состояние 96
    expr       переход в состояние 97
    const      переход в состояние 57


State 94

   62 matrix: '{' listexprs . '}'
   79 listexprs: listexprs . ',' vector
   80          | listexprs . error

    error  сдвиг, и переход в состояние 176
    ','    сдвиг, и переход в состояние 177
    '}'    сдвиг, и переход в состояние 178


State 95

   78 listexprs: vector . ',' vector
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 179


State 96

   81 vector: '{' exprs . '}'
   93 exprs: exprs . ',' expr
   94      | exprs . error

    error  сдвиг, и переход в состояние 180
    ','    сдвиг, и переход в состояние 181
    '}'    сдвиг, и переход в состояние 182


State 97

   92 exprs: expr . ',' expr
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 183
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 98

    7 stmts: stmts error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, E, MOVE, RIGHT, LEFT, ROBEX, WALL, ENDIF, ENDFOR, '-', '!', '(', ')', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   51 function: error . E
   61 callfunction: error . '[' callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   75       | error . matrix
   76       | . error vector
   76       | error . vector
   77       | . error expr
   77       | error . expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   90       | error . vector
   91       | . error expr
   91       | error . expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  128     | error . expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    NEWLINE    сдвиг, и переход в состояние 62
    E          сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 36

    $end       вывод с использованием правила 7 (stmts)
    error      [вывод с использованием правила 7 (stmts)]
    BOOL       [вывод с использованием правила 7 (stmts)]
    INTEGER    [вывод с использованием правила 7 (stmts)]
    VARIABLE   [вывод с использованием правила 7 (stmts)]
    VVARIABLE  [вывод с использованием правила 7 (stmts)]
    MVARIABLE  [вывод с использованием правила 7 (stmts)]
    FVARIABLE  вывод с использованием правила 7 (stmts)
    CINT       вывод с использованием правила 7 (stmts)
    VINT       вывод с использованием правила 7 (stmts)
    MINT       вывод с использованием правила 7 (stmts)
    INT        вывод с использованием правила 7 (stmts)
    CVINT      вывод с использованием правила 7 (stmts)
    CMINT      вывод с использованием правила 7 (stmts)
    BOOLEAN    вывод с использованием правила 7 (stmts)
    CBOOLEAN   вывод с использованием правила 7 (stmts)
    VBOOLEAN   вывод с использованием правила 7 (stmts)
    MBOOLEAN   вывод с использованием правила 7 (stmts)
    CVBOOLEAN  вывод с использованием правила 7 (stmts)
    CMBOOLEAN  вывод с использованием правила 7 (stmts)
    NEWLINE    [вывод с использованием правила 7 (stmts)]
    PRINT      вывод с использованием правила 7 (stmts)
    IF         вывод с использованием правила 7 (stmts)
    FORR       вывод с использованием правила 7 (stmts)
    E          [вывод с использованием правила 7 (stmts)]
    MOVE       [вывод с использованием правила 7 (stmts)]
    RIGHT      вывод с использованием правила 7 (stmts)
    LEFT       вывод с использованием правила 7 (stmts)
    ROBEX      [вывод с использованием правила 7 (stmts)]
    WALL       [вывод с использованием правила 7 (stmts)]
    ENDIF      вывод с использованием правила 7 (stmts)
    ENDFOR     вывод с использованием правила 7 (stmts)
    '-'        [вывод с использованием правила 7 (stmts)]
    '!'        [вывод с использованием правила 7 (stmts)]
    '('        [вывод с использованием правила 7 (stmts)]
    ')'        вывод с использованием правила 7 (stmts)
    '['        [вывод с использованием правила 7 (stmts)]
    '{'        [вывод с использованием правила 7 (stmts)]

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 99

    6 stmts: stmts stmt .

    $default  вывод с использованием правила 6 (stmts)


State 100

   21 stmt: robotactions NEWLINE .

    $default  вывод с использованием правила 21 (stmt)


State 101

   17 stmt: iff NEWLINE .

    $default  вывод с использованием правила 17 (stmt)


State 102

   18 stmt: forr NEWLINE .

    $default  вывод с использованием правила 18 (stmt)


State 103

   19 stmt: function NEWLINE .

    $default  вывод с использованием правила 19 (stmt)


State 104

   20 stmt: callfunction NEWLINE .

    $default  вывод с использованием правила 20 (stmt)


State 105

   12 stmt: matrix NEWLINE .

    $default  вывод с использованием правила 12 (stmt)


State 106

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   68       | matrix ELEMMULT . matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   73       | matrix ELEMMULT . vector
   74       | . matrix ELEMMULT expr
   74       | matrix ELEMMULT . expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 184
    vector     переход в состояние 185
    expr       переход в состояние 186
    const      переход в состояние 57


State 107

   69 matrix: matrix '\'' .

    $default  вывод с использованием правила 69 (matrix)


State 108

   71 matrix: matrix LEFTSHIFT .

    $default  вывод с использованием правила 71 (matrix)


State 109

   70 matrix: matrix RIGHTSHIFT .

    $default  вывод с использованием правила 70 (matrix)


State 110

   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   67       | matrix '*' . matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 187
    vector  переход в состояние 146


State 111

   11 stmt: vector NEWLINE .

    $default  вывод с использованием правила 11 (stmt)


State 112

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   86       | vector ELEMMULT . vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   89       | vector ELEMMULT . expr
   90       | . error vector
   91       | . error expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 188
    expr       переход в состояние 189
    const      переход в состояние 57


State 113

   72 matrix: vector '\'' .

    $default  вывод с использованием правила 72 (matrix)


State 114

   88 vector: vector LEFTSHIFT .

    $default  вывод с использованием правила 88 (vector)


State 115

   87 vector: vector RIGHTSHIFT .

    $default  вывод с использованием правила 87 (vector)


State 116

   14 stmt: vmdeclaration NEWLINE .

    $default  вывод с использованием правила 14 (stmt)


State 117

   15 stmt: declaration NEWLINE .

    $default  вывод с использованием правила 15 (stmt)


State 118

   16 stmt: assignment NEWLINE .

    $default  вывод с использованием правила 16 (stmt)


State 119

   13 stmt: print NEWLINE .

    $default  вывод с использованием правила 13 (stmt)


State 120

   10 stmt: expr NEWLINE .

    $default  вывод с использованием правила 10 (stmt)


State 121

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  124     | expr CONJUNCTION . expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 190
    const      переход в состояние 57


State 122

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  121     | expr '<' . expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 191
    const      переход в состояние 57


State 123

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  122     | expr '>' . expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 192
    const      переход в состояние 57


State 124

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  118     | expr '+' . expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 193
    const      переход в состояние 57


State 125

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  119     | expr '-' . expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 194
    const      переход в состояние 57


State 126

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  120     | expr '/' . expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 195
    const      переход в состояние 57


State 127

  103 declaration: type VAR . DECLARE expr
  104            | type VAR . DECLARE vector
  105            | type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 196


State 128

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | VVARIABLE '(' . vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  126     | VVARIABLE '(' . expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 197
    expr       переход в состояние 198
    const      переход в состояние 57


State 129

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | MVARIABLE '(' . vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | MVARIABLE '(' . '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   65       | MVARIABLE '(' . matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | MVARIABLE '(' . expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | MVARIABLE '(' . '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  127     | MVARIABLE '(' . expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 199
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 200
    vector     переход в состояние 201
    expr       переход в состояние 202
    const      переход в состояние 57


State 130

  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr
  125     | '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 168


State 131

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   59 callfunc_args: error .  [error, ',', ']']
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   75       | error . matrix
   76       | . error vector
   76       | error . vector
   77       | . error expr
   77       | error . expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   90       | error . vector
   91       | . error expr
   91       | error . expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  128     | error . expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    error  [вывод с использованием правила 59 (callfunc_args)]
    ','    вывод с использованием правила 59 (callfunc_args)
    ']'    вывод с использованием правила 59 (callfunc_args)

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 132

   55 callfunc_args: callfunc_args . ',' expr
   56              | callfunc_args . ',' vector
   57              | callfunc_args . ',' matrix
   58              | callfunc_args . error
   61 callfunction: error '[' callfunc_args . ']'

    error  сдвиг, и переход в состояние 203
    ','    сдвиг, и переход в состояние 204
    ']'    сдвиг, и переход в состояние 205


State 133

   54 callfunc_args: matrix .  [error, ',', ']']
   67 matrix: matrix . '*' matrix
   68       | matrix . ELEMMULT matrix
   69       | matrix . '\''
   70       | matrix . RIGHTSHIFT
   71       | matrix . LEFTSHIFT
   73       | matrix . ELEMMULT vector
   74       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 54 (callfunc_args)


State 134

   53 callfunc_args: vector .  [error, ',', ']']
   72 matrix: vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 53 (callfunc_args)


State 135

   52 callfunc_args: expr .  [error, ',', ']']
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 52 (callfunc_args)


State 136

  106 assignment: VARIABLE ASSIGN expr .  [NEWLINE]
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 106 (assignment)


State 137

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   90       | error . vector
   91       | . error expr
   91       | error . expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 173
    expr       переход в состояние 206
    const      переход в состояние 57


State 138

   82 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   85       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '}']

    '('  сдвиг, и переход в состояние 207

    $default  вывод с использованием правила 85 (vector)


State 139

   83 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   84       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 208


State 140

   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
  107 assignment: VVARIABLE ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 107 (assignment)


State 141

   82 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   86       | vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
   96 vmdeclaration: VVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN vector

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 209


State 142

   95 vmdeclaration: VVARIABLE '(' expr . ')' ASSIGN expr
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr
  126     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 210


State 143

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   75       | error . matrix
   76       | . error vector
   76       | error . vector
   77       | . error expr
   77       | error . expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   90       | error . vector
   91       | . error expr
   91       | error . expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 211
    const      переход в состояние 57


State 144

   63 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   64       | MVARIABLE . '(' '[' ']' ',' vector ')'
   65       | MVARIABLE . '(' matrix ')'
   66       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   83 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   84       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 212

    $default  вывод с использованием правила 66 (matrix)


State 145

   67 matrix: matrix . '*' matrix
   68       | matrix . ELEMMULT matrix
   69       | matrix . '\''
   70       | matrix . RIGHTSHIFT
   71       | matrix . LEFTSHIFT
   73       | matrix . ELEMMULT vector
   74       | matrix . ELEMMULT expr
  108 assignment: MVARIABLE ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 108 (assignment)


State 146

   72 matrix: vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115


State 147

   64 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   84 vector: MVARIABLE '(' '[' . ']' ',' expr ')'
   99 vmdeclaration: MVARIABLE '(' '[' . ']' ',' expr ')' ASSIGN vector
  101              | MVARIABLE '(' '[' . ']' ',' vector ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 213


State 148

   65 matrix: MVARIABLE '(' matrix . ')'
   67       | matrix . '*' matrix
   68       | matrix . ELEMMULT matrix
   69       | matrix . '\''
   70       | matrix . RIGHTSHIFT
   71       | matrix . LEFTSHIFT
   73       | matrix . ELEMMULT vector
   74       | matrix . ELEMMULT expr
  102 vmdeclaration: MVARIABLE '(' matrix . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110
    ')'         сдвиг, и переход в состояние 214


State 149

   63 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   72       | vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
  100 vmdeclaration: MVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 215


State 150

   83 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
   97 vmdeclaration: MVARIABLE '(' expr . ',' expr ')' ASSIGN expr
   98              | MVARIABLE '(' expr . ',' '[' ']' ')' ASSIGN vector
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr
  127     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 216
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 151

   55 callfunc_args: callfunc_args . ',' expr
   56              | callfunc_args . ',' vector
   57              | callfunc_args . ',' matrix
   58              | callfunc_args . error
   60 callfunction: FVARIABLE '[' callfunc_args . ']'

    error  сдвиг, и переход в состояние 203
    ','    сдвиг, и переход в состояние 204
    ']'    сдвиг, и переход в состояние 217


State 152

  110 print: PRINT '(' VVARIABLE . ')'
  126 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 159
    ')'  сдвиг, и переход в состояние 218


State 153

  111 print: PRINT '(' MVARIABLE . ')'
  127 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 160
    ')'  сдвиг, и переход в состояние 219


State 154

  109 print: PRINT '(' expr . ')'
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 220


State 155

   35 endif: E .

    $default  вывод с использованием правила 35 (endif)


State 156

   36 endif: ENDIF .

    $default  вывод с использованием правила 36 (endif)


State 157

   32 iff: IF error endif .

    $default  вывод с использованием правила 32 (iff)


State 158

  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr
  128     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 128 (expr)]
    '<'          [вывод с использованием правила 128 (expr)]
    '>'          [вывод с использованием правила 128 (expr)]
    '+'          [вывод с использованием правила 128 (expr)]
    '-'          [вывод с использованием правила 128 (expr)]
    '/'          [вывод с использованием правила 128 (expr)]
    $default     вывод с использованием правила 128 (expr)


State 159

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  126     | VVARIABLE '(' . expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 198
    const      переход в состояние 57


State 160

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  127     | MVARIABLE '(' . expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 221
    const      переход в состояние 57


State 161

   31 iff: IF expr NEWLINE . begif stmts endif
   33 begif: . B
   34      | . BEGIF

    B      сдвиг, и переход в состояние 222
    BEGIF  сдвиг, и переход в состояние 223

    begif  переход в состояние 224


State 162

   39 endfor: E .

    $default  вывод с использованием правила 39 (endfor)


State 163

   40 endfor: ENDFOR .

    $default  вывод с использованием правила 40 (endfor)


State 164

   42 forr: FORR error endfor .

    $default  вывод с использованием правила 42 (forr)


State 165

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   41 forr: FORR declaration DOUBLEDOT . expr NEWLINE begfor stmts endfor
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 225
    const      переход в состояние 57


State 166

   26 robotmove: MOVE '(' expr . ')'
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 226


State 167

   22 stmt: '(' stmts ')' .

    $default  вывод с использованием правила 22 (stmt)


State 168

  125 expr: '(' expr ')' .

    $default  вывод с использованием правила 125 (expr)


State 169

   45 return_func: return_func error .

    $default  вывод с использованием правила 45 (return_func)


State 170

   44 return_func: return_func ',' . type VAR
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 227


State 171

   50 function: '[' return_func ']' . DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E

    DECLARE  сдвиг, и переход в состояние 228


State 172

   43 return_func: type VAR .

    $default  вывод с использованием правила 43 (return_func)


State 173

   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
   90       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    ELEMMULT    [вывод с использованием правила 90 (vector)]
    LEFTSHIFT   [вывод с использованием правила 90 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 90 (vector)]
    $default    вывод с использованием правила 90 (vector)


State 174

   91 vector: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr
  128     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    error        вывод с использованием правила 91 (vector)
    error        [вывод с использованием правила 128 (expr)]
    NEWLINE      вывод с использованием правила 91 (vector)
    NEWLINE      [вывод с использованием правила 128 (expr)]
    CONJUNCTION  [вывод с использованием правила 128 (expr)]
    ELEMMULT     вывод с использованием правила 91 (vector)
    ELEMMULT     [вывод с использованием правила 128 (expr)]
    '\''         вывод с использованием правила 91 (vector)
    '\''         [вывод с использованием правила 128 (expr)]
    LEFTSHIFT    вывод с использованием правила 91 (vector)
    LEFTSHIFT    [вывод с использованием правила 128 (expr)]
    RIGHTSHIFT   вывод с использованием правила 91 (vector)
    RIGHTSHIFT   [вывод с использованием правила 128 (expr)]
    ','          вывод с использованием правила 91 (vector)
    ','          [вывод с использованием правила 128 (expr)]
    DOUBLEDOT    вывод с использованием правила 91 (vector)
    DOUBLEDOT    [вывод с использованием правила 128 (expr)]
    '<'          [вывод с использованием правила 128 (expr)]
    '>'          [вывод с использованием правила 128 (expr)]
    '+'          [вывод с использованием правила 128 (expr)]
    '-'          [вывод с использованием правила 128 (expr)]
    '*'          вывод с использованием правила 91 (vector)
    '*'          [вывод с использованием правила 128 (expr)]
    '/'          [вывод с использованием правила 128 (expr)]
    ')'          вывод с использованием правила 91 (vector)
    ')'          [вывод с использованием правила 128 (expr)]
    ']'          вывод с использованием правила 91 (vector)
    ']'          [вывод с использованием правила 128 (expr)]
    '}'          вывод с использованием правила 91 (vector)
    '}'          [вывод с использованием правила 128 (expr)]
    $default     вывод с использованием правила 91 (vector)


State 175

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   83 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   84       | MVARIABLE '(' . '[' ']' ',' expr ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  127     | MVARIABLE '(' . expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 229

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 202
    const      переход в состояние 57


State 176

   80 listexprs: listexprs error .

    $default  вывод с использованием правила 80 (listexprs)


State 177

   79 listexprs: listexprs ',' . vector
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 230


State 178

   62 matrix: '{' listexprs '}' .

    $default  вывод с использованием правила 62 (matrix)


State 179

   78 listexprs: vector ',' . vector
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 231


State 180

   94 exprs: exprs error .

    $default  вывод с использованием правила 94 (exprs)


State 181

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   93 exprs: exprs ',' . expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 232
    const      переход в состояние 57


State 182

   81 vector: '{' exprs '}' .

    $default  вывод с использованием правила 81 (vector)


State 183

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   92 exprs: expr ',' . expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 233
    const      переход в состояние 57


State 184

   67 matrix: matrix . '*' matrix
   68       | matrix . ELEMMULT matrix
   68       | matrix ELEMMULT matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   69       | matrix . '\''
   70       | matrix . RIGHTSHIFT
   71       | matrix . LEFTSHIFT
   73       | matrix . ELEMMULT vector
   74       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    ELEMMULT    [вывод с использованием правила 68 (matrix)]
    '\''        [вывод с использованием правила 68 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 68 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 68 (matrix)]
    '*'         [вывод с использованием правила 68 (matrix)]
    $default    вывод с использованием правила 68 (matrix)


State 185

   72 matrix: vector . '\''
   73       | matrix ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    ELEMMULT    [вывод с использованием правила 73 (matrix)]
    '\''        [вывод с использованием правила 73 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 73 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 73 (matrix)]
    $default    вывод с использованием правила 73 (matrix)


State 186

   74 matrix: matrix ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 74 (matrix)


State 187

   67 matrix: matrix . '*' matrix
   67       | matrix '*' matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   68       | matrix . ELEMMULT matrix
   69       | matrix . '\''
   70       | matrix . RIGHTSHIFT
   71       | matrix . LEFTSHIFT
   73       | matrix . ELEMMULT vector
   74       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    ELEMMULT    [вывод с использованием правила 67 (matrix)]
    '\''        [вывод с использованием правила 67 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 67 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 67 (matrix)]
    $default    вывод с использованием правила 67 (matrix)

    Конфликт между правилом 67 и лексемой '*' разрешен выводом (%left '*').


State 188

   86 vector: vector . ELEMMULT vector
   86       | vector ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    ELEMMULT    [вывод с использованием правила 86 (vector)]
    LEFTSHIFT   [вывод с использованием правила 86 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 86 (vector)]
    $default    вывод с использованием правила 86 (vector)


State 189

   89 vector: vector ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 89 (vector)


State 190

  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr
  124     | expr CONJUNCTION expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 124 (expr)]
    '<'          [вывод с использованием правила 124 (expr)]
    '>'          [вывод с использованием правила 124 (expr)]
    '+'          [вывод с использованием правила 124 (expr)]
    '-'          [вывод с использованием правила 124 (expr)]
    '/'          [вывод с использованием правила 124 (expr)]
    $default     вывод с использованием правила 124 (expr)


State 191

  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  121     | expr '<' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 121 (expr)]
    $default     вывод с использованием правила 121 (expr)

    Конфликт между правилом 121 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 121 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 121 и лексемой '+' разрешен сдвигом ('<' < '+').
    Конфликт между правилом 121 и лексемой '-' разрешен сдвигом ('<' < '-').
    Конфликт между правилом 121 и лексемой '/' разрешен сдвигом ('<' < '/').


State 192

  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  122     | expr '>' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 122 (expr)]
    $default     вывод с использованием правила 122 (expr)

    Конфликт между правилом 122 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 122 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 122 и лексемой '+' разрешен сдвигом ('>' < '+').
    Конфликт между правилом 122 и лексемой '-' разрешен сдвигом ('>' < '-').
    Конфликт между правилом 122 и лексемой '/' разрешен сдвигом ('>' < '/').


State 193

  118 expr: expr . '+' expr
  118     | expr '+' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 118 (expr)]
    $default     вывод с использованием правила 118 (expr)

    Конфликт между правилом 118 и лексемой '<' разрешен выводом ('<' < '+').
    Конфликт между правилом 118 и лексемой '>' разрешен выводом ('>' < '+').
    Конфликт между правилом 118 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 118 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 118 и лексемой '/' разрешен сдвигом ('+' < '/').


State 194

  118 expr: expr . '+' expr
  119     | expr . '-' expr
  119     | expr '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '/'          сдвиг, и переход в состояние 126

    CONJUNCTION  [вывод с использованием правила 119 (expr)]
    $default     вывод с использованием правила 119 (expr)

    Конфликт между правилом 119 и лексемой '<' разрешен выводом ('<' < '-').
    Конфликт между правилом 119 и лексемой '>' разрешен выводом ('>' < '-').
    Конфликт между правилом 119 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 119 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 119 и лексемой '/' разрешен сдвигом ('-' < '/').


State 195

  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  120     | expr '/' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121

    CONJUNCTION  [вывод с использованием правила 120 (expr)]
    $default     вывод с использованием правила 120 (expr)

    Конфликт между правилом 120 и лексемой '<' разрешен выводом ('<' < '/').
    Конфликт между правилом 120 и лексемой '>' разрешен выводом ('>' < '/').
    Конфликт между правилом 120 и лексемой '+' разрешен выводом ('+' < '/').
    Конфликт между правилом 120 и лексемой '-' разрешен выводом ('-' < '/').
    Конфликт между правилом 120 и лексемой '/' разрешен выводом (%left '/').


State 196

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  103 declaration: type VAR DECLARE . expr
  104            | type VAR DECLARE . vector
  105            | type VAR DECLARE . matrix
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 234
    vector     переход в состояние 235
    expr       переход в состояние 236
    const      переход в состояние 57


State 197

   82 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   86       | vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 237


State 198

  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr
  126     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 238


State 199

   64 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   84 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 239


State 200

   65 matrix: MVARIABLE '(' matrix . ')'
   67       | matrix . '*' matrix
   68       | matrix . ELEMMULT matrix
   69       | matrix . '\''
   70       | matrix . RIGHTSHIFT
   71       | matrix . LEFTSHIFT
   73       | matrix . ELEMMULT vector
   74       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110
    ')'         сдвиг, и переход в состояние 240


State 201

   63 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   72       | vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ','         сдвиг, и переход в состояние 241


State 202

   83 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr
  127     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 242
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 203

   58 callfunc_args: callfunc_args error .

    $default  вывод с использованием правила 58 (callfunc_args)


State 204

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   55 callfunc_args: callfunc_args ',' . expr
   56              | callfunc_args ',' . vector
   57              | callfunc_args ',' . matrix
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 243
    vector     переход в состояние 244
    expr       переход в состояние 245
    const      переход в состояние 57


State 205

   61 callfunction: error '[' callfunc_args ']' .

    $default  вывод с использованием правила 61 (callfunction)


State 206

   91 vector: error expr .  [error, NEWLINE, ELEMMULT, LEFTSHIFT, RIGHTSHIFT, ',', '}']
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 91 (vector)


State 207

   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   82       | VVARIABLE '(' . vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 197


State 208

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   83 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   84       | MVARIABLE '(' . '[' ']' ',' expr ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 229

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 246
    const      переход в состояние 57


State 209

   82 vector: VVARIABLE '(' vector ',' . '[' ']' ')'
   96 vmdeclaration: VVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN vector

    '['  сдвиг, и переход в состояние 247


State 210

   95 vmdeclaration: VVARIABLE '(' expr ')' . ASSIGN expr
  126 expr: VVARIABLE '(' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 248

    $default  вывод с использованием правила 126 (expr)


State 211

   77 matrix: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   91 vector: error expr .  [ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    ELEMMULT    вывод с использованием правила 77 (matrix)
    ELEMMULT    [вывод с использованием правила 91 (vector)]
    '\''        вывод с использованием правила 77 (matrix)
    '\''        [вывод с использованием правила 91 (vector)]
    LEFTSHIFT   вывод с использованием правила 77 (matrix)
    LEFTSHIFT   [вывод с использованием правила 91 (vector)]
    RIGHTSHIFT  вывод с использованием правила 77 (matrix)
    RIGHTSHIFT  [вывод с использованием правила 91 (vector)]
    $default    вывод с использованием правила 77 (matrix)


State 212

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   63       | MVARIABLE '(' . vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   64       | MVARIABLE '(' . '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   65       | MVARIABLE '(' . matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   83       | MVARIABLE '(' . expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | MVARIABLE '(' . '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 199
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 200
    vector     переход в состояние 201
    expr       переход в состояние 246
    const      переход в состояние 57


State 213

   64 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   84 vector: MVARIABLE '(' '[' ']' . ',' expr ')'
   99 vmdeclaration: MVARIABLE '(' '[' ']' . ',' expr ')' ASSIGN vector
  101              | MVARIABLE '(' '[' ']' . ',' vector ')' ASSIGN matrix

    ','  сдвиг, и переход в состояние 249


State 214

   65 matrix: MVARIABLE '(' matrix ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
  102 vmdeclaration: MVARIABLE '(' matrix ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 250

    $default  вывод с использованием правила 65 (matrix)


State 215

   63 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'
  100 vmdeclaration: MVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN matrix

    '['  сдвиг, и переход в состояние 251


State 216

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   83 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
   97 vmdeclaration: MVARIABLE '(' expr ',' . expr ')' ASSIGN expr
   98              | MVARIABLE '(' expr ',' . '[' ']' ')' ASSIGN vector
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  127     | MVARIABLE '(' expr ',' . expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 252

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 253
    const      переход в состояние 57


State 217

   60 callfunction: FVARIABLE '[' callfunc_args ']' .

    $default  вывод с использованием правила 60 (callfunction)


State 218

  110 print: PRINT '(' VVARIABLE ')' .

    $default  вывод с использованием правила 110 (print)


State 219

  111 print: PRINT '(' MVARIABLE ')' .

    $default  вывод с использованием правила 111 (print)


State 220

  109 print: PRINT '(' expr ')' .

    $default  вывод с использованием правила 109 (print)


State 221

  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr
  127     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 254
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 222

   33 begif: B .

    $default  вывод с использованием правила 33 (begif)


State 223

   34 begif: BEGIF .

    $default  вывод с использованием правила 34 (begif)


State 224

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   31    | IF expr NEWLINE begif . stmts endif
   32    | . IF error endif
   41 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   42     | . FORR error endfor
   50 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   51         | . error E
   60 callfunction: . FVARIABLE '[' callfunc_args ']'
   61             | . error '[' callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   95 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   96              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   98              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   99              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  100              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  101              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  102              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  103 declaration: . type VAR DECLARE expr
  104            | . type VAR DECLARE vector
  105            | . type VAR DECLARE matrix
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109 print: . PRINT '(' expr ')'
  110      | . PRINT '(' VVARIABLE ')'
  111      | . PRINT '(' MVARIABLE ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 86
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 255
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 225

   41 forr: FORR declaration DOUBLEDOT expr . NEWLINE begfor stmts endfor
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 256
    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 226

   26 robotmove: MOVE '(' expr ')' .

    $default  вывод с использованием правила 26 (robotmove)


State 227

   44 return_func: return_func ',' type . VAR

    VAR  сдвиг, и переход в состояние 257


State 228

   50 function: '[' return_func ']' DECLARE . FUNC VAR '(' args_func ')' B NEWLINE stmts E

    FUNC  сдвиг, и переход в состояние 258


State 229

   84 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 259


State 230

   79 listexprs: listexprs ',' vector .  [error, ',', '}']
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 79 (listexprs)


State 231

   78 listexprs: vector ',' vector .  [error, ',', '}']
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 78 (listexprs)


State 232

   93 exprs: exprs ',' expr .  [error, ',', '}']
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 93 (exprs)


State 233

   92 exprs: expr ',' expr .  [error, ',', '}']
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 92 (exprs)


State 234

   67 matrix: matrix . '*' matrix
   68       | matrix . ELEMMULT matrix
   69       | matrix . '\''
   70       | matrix . RIGHTSHIFT
   71       | matrix . LEFTSHIFT
   73       | matrix . ELEMMULT vector
   74       | matrix . ELEMMULT expr
  105 declaration: type VAR DECLARE matrix .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 105 (declaration)


State 235

   72 matrix: vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
  104 declaration: type VAR DECLARE vector .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 104 (declaration)


State 236

  103 declaration: type VAR DECLARE expr .  [NEWLINE, DOUBLEDOT]
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 103 (declaration)


State 237

   82 vector: VVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 260


State 238

  126 expr: VVARIABLE '(' expr ')' .

    $default  вывод с использованием правила 126 (expr)


State 239

   64 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   84 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 261


State 240

   65 matrix: MVARIABLE '(' matrix ')' .

    $default  вывод с использованием правила 65 (matrix)


State 241

   63 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 262


State 242

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   83 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  127     | MVARIABLE '(' expr ',' . expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 263

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 264
    const      переход в состояние 57


State 243

   57 callfunc_args: callfunc_args ',' matrix .  [error, ',', ']']
   67 matrix: matrix . '*' matrix
   68       | matrix . ELEMMULT matrix
   69       | matrix . '\''
   70       | matrix . RIGHTSHIFT
   71       | matrix . LEFTSHIFT
   73       | matrix . ELEMMULT vector
   74       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 57 (callfunc_args)


State 244

   56 callfunc_args: callfunc_args ',' vector .  [error, ',', ']']
   72 matrix: vector . '\''
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    '\''        сдвиг, и переход в состояние 113
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 56 (callfunc_args)


State 245

   55 callfunc_args: callfunc_args ',' expr .  [error, ',', ']']
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 55 (callfunc_args)


State 246

   83 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    ','          сдвиг, и переход в состояние 265
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126


State 247

   82 vector: VVARIABLE '(' vector ',' '[' . ']' ')'
   96 vmdeclaration: VVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 266


State 248

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   95 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN . expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 267
    const      переход в состояние 57


State 249

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   64 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | MVARIABLE '(' '[' ']' ',' . expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   99 vmdeclaration: MVARIABLE '(' '[' ']' ',' . expr ')' ASSIGN vector
  101              | MVARIABLE '(' '[' ']' ',' . vector ')' ASSIGN matrix
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 268
    expr       переход в состояние 269
    const      переход в состояние 57


State 250

   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  102 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 270
    vector  переход в состояние 146


State 251

   63 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'
  100 vmdeclaration: MVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 271


State 252

   83 vector: MVARIABLE '(' expr ',' '[' . ']' ')'
   98 vmdeclaration: MVARIABLE '(' expr ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 272


State 253

   97 vmdeclaration: MVARIABLE '(' expr ',' expr . ')' ASSIGN expr
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr
  127     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 273


State 254

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  127     | MVARIABLE '(' expr ',' . expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 264
    const      переход в состояние 57


State 255

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   31    | IF expr NEWLINE begif stmts . endif
   32    | . IF error endif
   35 endif: . E
   36      | . ENDIF
   41 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   42     | . FORR error endfor
   50 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   51         | . error E
   60 callfunction: . FVARIABLE '[' callfunc_args ']'
   61             | . error '[' callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   95 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   96              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   98              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   99              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  100              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  101              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  102              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  103 declaration: . type VAR DECLARE expr
  104            | . type VAR DECLARE vector
  105            | . type VAR DECLARE matrix
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109 print: . PRINT '(' expr ')'
  110      | . PRINT '(' VVARIABLE ')'
  111      | . PRINT '(' MVARIABLE ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 98
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    E          сдвиг, и переход в состояние 155
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    ENDIF      сдвиг, и переход в состояние 156
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 99
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    endif          переход в состояние 274
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 256

   37 begfor: . B
   38       | . BEGFOR
   41 forr: FORR declaration DOUBLEDOT expr NEWLINE . begfor stmts endfor

    B       сдвиг, и переход в состояние 275
    BEGFOR  сдвиг, и переход в состояние 276

    begfor  переход в состояние 277


State 257

   44 return_func: return_func ',' type VAR .

    $default  вывод с использованием правила 44 (return_func)


State 258

   50 function: '[' return_func ']' DECLARE FUNC . VAR '(' args_func ')' B NEWLINE stmts E

    VAR  сдвиг, и переход в состояние 278


State 259

   84 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 279


State 260

   82 vector: VVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 280


State 261

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   64 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   84       | MVARIABLE '(' '[' ']' ',' . expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 91
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 92
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 93

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 281
    expr       переход в состояние 282
    const      переход в состояние 57


State 262

   63 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 283


State 263

   83 vector: MVARIABLE '(' expr ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 284


State 264

  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr
  127     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 285


State 265

   83 vector: MVARIABLE '(' expr ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 263


State 266

   82 vector: VVARIABLE '(' vector ',' '[' ']' . ')'
   96 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 286


State 267

   95 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr .  [NEWLINE]
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 95 (vmdeclaration)


State 268

   64 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
  101 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ')'         сдвиг, и переход в состояние 287


State 269

   84 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
   99 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr . ')' ASSIGN vector
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 288


State 270

   67 matrix: matrix . '*' matrix
   68       | matrix . ELEMMULT matrix
   69       | matrix . '\''
   70       | matrix . RIGHTSHIFT
   71       | matrix . LEFTSHIFT
   73       | matrix . ELEMMULT vector
   74       | matrix . ELEMMULT expr
  102 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 102 (vmdeclaration)


State 271

   63 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'
  100 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN matrix

    ')'  сдвиг, и переход в состояние 289


State 272

   83 vector: MVARIABLE '(' expr ',' '[' ']' . ')'
   98 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 290


State 273

   97 vmdeclaration: MVARIABLE '(' expr ',' expr ')' . ASSIGN expr
  127 expr: MVARIABLE '(' expr ',' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 291

    $default  вывод с использованием правила 127 (expr)


State 274

   31 iff: IF expr NEWLINE begif stmts endif .

    $default  вывод с использованием правила 31 (iff)


State 275

   37 begfor: B .

    $default  вывод с использованием правила 37 (begfor)


State 276

   38 begfor: BEGFOR .

    $default  вывод с использованием правила 38 (begfor)


State 277

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   32    | . IF error endif
   41 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   41     | FORR declaration DOUBLEDOT expr NEWLINE begfor . stmts endfor
   42     | . FORR error endfor
   50 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   51         | . error E
   60 callfunction: . FVARIABLE '[' callfunc_args ']'
   61             | . error '[' callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   95 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   96              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   98              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   99              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  100              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  101              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  102              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  103 declaration: . type VAR DECLARE expr
  104            | . type VAR DECLARE vector
  105            | . type VAR DECLARE matrix
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109 print: . PRINT '(' expr ')'
  110      | . PRINT '(' VVARIABLE ')'
  111      | . PRINT '(' MVARIABLE ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 86
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 292
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 278

   50 function: '[' return_func ']' DECLARE FUNC VAR . '(' args_func ')' B NEWLINE stmts E

    '('  сдвиг, и переход в состояние 293


State 279

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   84 vector: MVARIABLE '(' '[' ']' ',' . expr ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 282
    const      переход в состояние 57


State 280

   82 vector: VVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 294


State 281

   64 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115
    ')'         сдвиг, и переход в состояние 295


State 282

   84 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126
    ')'          сдвиг, и переход в состояние 296


State 283

   63 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 297


State 284

   83 vector: MVARIABLE '(' expr ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 298


State 285

  127 expr: MVARIABLE '(' expr ',' expr ')' .

    $default  вывод с использованием правила 127 (expr)


State 286

   82 vector: VVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   96 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 299

    $default  вывод с использованием правила 82 (vector)


State 287

   64 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
  101 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 300

    $default  вывод с использованием правила 64 (matrix)


State 288

   84 vector: MVARIABLE '(' '[' ']' ',' expr ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   99 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 301

    $default  вывод с использованием правила 84 (vector)


State 289

   63 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
  100 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 302

    $default  вывод с использованием правила 63 (matrix)


State 290

   83 vector: MVARIABLE '(' expr ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   98 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 303

    $default  вывод с использованием правила 83 (vector)


State 291

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   97 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN . expr
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 83
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 304
    const      переход в состояние 57


State 292

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   32    | . IF error endif
   39 endfor: . E
   40       | . ENDFOR
   41 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   41     | FORR declaration DOUBLEDOT expr NEWLINE begfor stmts . endfor
   42     | . FORR error endfor
   50 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   51         | . error E
   60 callfunction: . FVARIABLE '[' callfunc_args ']'
   61             | . error '[' callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   95 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   96              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   98              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   99              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  100              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  101              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  102              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  103 declaration: . type VAR DECLARE expr
  104            | . type VAR DECLARE vector
  105            | . type VAR DECLARE matrix
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109 print: . PRINT '(' expr ')'
  110      | . PRINT '(' VVARIABLE ')'
  111      | . PRINT '(' MVARIABLE ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 98
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    E          сдвиг, и переход в состояние 162
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    ENDFOR     сдвиг, и переход в состояние 163
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 99
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    endfor         переход в состояние 305
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 293

   46 args_func: . '[' type VAR ']'
   47          | . args_func ',' '[' type VAR ']'
   48          | . args_func error
   49          | . error
   50 function: '[' return_func ']' DECLARE FUNC VAR '(' . args_func ')' B NEWLINE stmts E

    error  сдвиг, и переход в состояние 306
    '['    сдвиг, и переход в состояние 307

    args_func  переход в состояние 308


State 294

   82 vector: VVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 82 (vector)


State 295

   64 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .

    $default  вывод с использованием правила 64 (matrix)


State 296

   84 vector: MVARIABLE '(' '[' ']' ',' expr ')' .

    $default  вывод с использованием правила 84 (vector)


State 297

   63 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 63 (matrix)


State 298

   83 vector: MVARIABLE '(' expr ',' '[' ']' ')' .

    $default  вывод с использованием правила 83 (vector)


State 299

   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   96 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 309


State 300

   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  101 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 310
    vector  переход в состояние 146


State 301

   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   99 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 311


State 302

   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
  100 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 143
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 144
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 312
    vector  переход в состояние 146


State 303

   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   98 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 137
    VVARIABLE  сдвиг, и переход в состояние 138
    MVARIABLE  сдвиг, и переход в состояние 139
    '{'        сдвиг, и переход в состояние 93

    vector  переход в состояние 313


State 304

   97 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN expr .  [NEWLINE]
  118 expr: expr . '+' expr
  119     | expr . '-' expr
  120     | expr . '/' expr
  121     | expr . '<' expr
  122     | expr . '>' expr
  124     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 121
    '<'          сдвиг, и переход в состояние 122
    '>'          сдвиг, и переход в состояние 123
    '+'          сдвиг, и переход в состояние 124
    '-'          сдвиг, и переход в состояние 125
    '/'          сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 97 (vmdeclaration)


State 305

   41 forr: FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor .

    $default  вывод с использованием правила 41 (forr)


State 306

   49 args_func: error .

    $default  вывод с использованием правила 49 (args_func)


State 307

   46 args_func: '[' . type VAR ']'
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 314


State 308

   47 args_func: args_func . ',' '[' type VAR ']'
   48          | args_func . error
   50 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func . ')' B NEWLINE stmts E

    error  сдвиг, и переход в состояние 315
    ','    сдвиг, и переход в состояние 316
    ')'    сдвиг, и переход в состояние 317


State 309

   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
   96 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 96 (vmdeclaration)


State 310

   67 matrix: matrix . '*' matrix
   68       | matrix . ELEMMULT matrix
   69       | matrix . '\''
   70       | matrix . RIGHTSHIFT
   71       | matrix . LEFTSHIFT
   73       | matrix . ELEMMULT vector
   74       | matrix . ELEMMULT expr
  101 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 101 (vmdeclaration)


State 311

   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
   99 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 99 (vmdeclaration)


State 312

   67 matrix: matrix . '*' matrix
   68       | matrix . ELEMMULT matrix
   69       | matrix . '\''
   70       | matrix . RIGHTSHIFT
   71       | matrix . LEFTSHIFT
   73       | matrix . ELEMMULT vector
   74       | matrix . ELEMMULT expr
  100 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    '*'         сдвиг, и переход в состояние 110

    $default  вывод с использованием правила 100 (vmdeclaration)


State 313

   86 vector: vector . ELEMMULT vector
   87       | vector . RIGHTSHIFT
   88       | vector . LEFTSHIFT
   89       | vector . ELEMMULT expr
   98 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 112
    LEFTSHIFT   сдвиг, и переход в состояние 114
    RIGHTSHIFT  сдвиг, и переход в состояние 115

    $default  вывод с использованием правила 98 (vmdeclaration)


State 314

   46 args_func: '[' type . VAR ']'

    VAR  сдвиг, и переход в состояние 318


State 315

   48 args_func: args_func error .

    $default  вывод с использованием правила 48 (args_func)


State 316

   47 args_func: args_func ',' . '[' type VAR ']'

    '['  сдвиг, и переход в состояние 319


State 317

   50 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' . B NEWLINE stmts E

    B  сдвиг, и переход в состояние 320


State 318

   46 args_func: '[' type VAR . ']'

    ']'  сдвиг, и переход в состояние 321


State 319

   47 args_func: args_func ',' '[' . type VAR ']'
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 322


State 320

   50 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B . NEWLINE stmts E

    NEWLINE  сдвиг, и переход в состояние 323


State 321

   46 args_func: '[' type VAR ']' .

    $default  вывод с использованием правила 46 (args_func)


State 322

   47 args_func: args_func ',' '[' type . VAR ']'

    VAR  сдвиг, и переход в состояние 324


State 323

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   32    | . IF error endif
   41 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   42     | . FORR error endfor
   50 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   50         | '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE . stmts E
   51         | . error E
   60 callfunction: . FVARIABLE '[' callfunc_args ']'
   61             | . error '[' callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   95 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   96              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   98              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   99              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  100              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  101              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  102              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  103 declaration: . type VAR DECLARE expr
  104            | . type VAR DECLARE vector
  105            | . type VAR DECLARE matrix
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109 print: . PRINT '(' expr ')'
  110      | . PRINT '(' VVARIABLE ')'
  111      | . PRINT '(' MVARIABLE ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 86
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 325
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 324

   47 args_func: args_func ',' '[' type VAR . ']'

    ']'  сдвиг, и переход в состояние 326


State 325

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   32    | . IF error endif
   41 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   42     | . FORR error endfor
   50 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   50         | '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts . E
   51         | . error E
   60 callfunction: . FVARIABLE '[' callfunc_args ']'
   61             | . error '[' callfunc_args ']'
   62 matrix: . '{' listexprs '}'
   63       | . MVARIABLE '(' vector ',' '[' ']' ')'
   64       | . MVARIABLE '(' '[' ']' ',' vector ')'
   65       | . MVARIABLE '(' matrix ')'
   66       | . MVARIABLE
   67       | . matrix '*' matrix
   68       | . matrix ELEMMULT matrix
   69       | . matrix '\''
   70       | . matrix RIGHTSHIFT
   71       | . matrix LEFTSHIFT
   72       | . vector '\''
   73       | . matrix ELEMMULT vector
   74       | . matrix ELEMMULT expr
   75       | . error matrix
   76       | . error vector
   77       | . error expr
   81 vector: . '{' exprs '}'
   82       | . VVARIABLE '(' vector ',' '[' ']' ')'
   83       | . MVARIABLE '(' expr ',' '[' ']' ')'
   84       | . MVARIABLE '(' '[' ']' ',' expr ')'
   85       | . VVARIABLE
   86       | . vector ELEMMULT vector
   87       | . vector RIGHTSHIFT
   88       | . vector LEFTSHIFT
   89       | . vector ELEMMULT expr
   90       | . error vector
   91       | . error expr
   95 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   96              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   98              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   99              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
  100              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
  101              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  102              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  103 declaration: . type VAR DECLARE expr
  104            | . type VAR DECLARE vector
  105            | . type VAR DECLARE matrix
  106 assignment: . VARIABLE ASSIGN expr
  107           | . VVARIABLE ASSIGN vector
  108           | . MVARIABLE ASSIGN matrix
  109 print: . PRINT '(' expr ')'
  110      | . PRINT '(' VVARIABLE ')'
  111      | . PRINT '(' MVARIABLE ')'
  112 expr: . const
  113     | . robotexit
  114     | . robotmove
  115     | . robotwall
  116     | . VARIABLE
  117     | . '-' expr
  118     | . expr '+' expr
  119     | . expr '-' expr
  120     | . expr '/' expr
  121     | . expr '<' expr
  122     | . expr '>' expr
  123     | . '!' expr
  124     | . expr CONJUNCTION expr
  125     | . '(' expr ')'
  126     | . VVARIABLE '(' expr ')'
  127     | . MVARIABLE '(' expr ',' expr ')'
  128     | . error expr
  129 type: . INT
  130     | . CINT
  131     | . VINT
  132     | . MINT
  133     | . CVINT
  134     | . CMINT
  135     | . BOOLEAN
  136     | . CBOOLEAN
  137     | . VBOOLEAN
  138     | . MBOOLEAN
  139     | . CVBOOLEAN
  140     | . CMBOOLEAN
  141 const: . INTEGER
  142      | . BOOL

    error      сдвиг, и переход в состояние 98
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    E          сдвиг, и переход в состояние 327
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 99
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 326

   47 args_func: args_func ',' '[' type VAR ']' .

    $default  вывод с использованием правила 47 (args_func)


State 327

   50 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E .

    $default  вывод с использованием правила 50 (function)
