// Generated by GNU Bison 3.3.2.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <http://www.gnu.org/software/bison/>.

digraph "interpreter.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . program $end\l  1 program: . func\l  2 func: . func stmts\l  3     | . %empty\l"]
  0 -> 1 [style=dashed label="program"]
  0 -> 2 [style=dashed label="func"]
  0 -> "0R3" [style=solid]
 "0R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  1 [label="State 1\n\l  0 $accept: program . $end\l"]
  1 -> 3 [style=solid label="$end"]
  2 [label="State 2\n\l  1 program: func .  [$end]\l  2 func: func . stmts\l  4 stmts: . stmt\l  5      | . stmts stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . function NEWLINE\l 17     | . callfunction NEWLINE\l 18     | . '(' stmts ')'\l 19 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 20 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR\l 25 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E\l 32 callfunction: . FVARIABLE '[' callfunc_args ']'\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 59 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 60              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 61              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 62              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 63              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 64              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 65              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 66              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 67 declaration: . type VAR DECLARE expr\l 68            | . type VAR DECLARE vector\l 69            | . type VAR DECLARE matrix\l 70 assignment: . VARIABLE ASSIGN expr\l 71           | . VVARIABLE ASSIGN vector\l 72           | . MVARIABLE ASSIGN matrix\l 73 print: . PRINT '(' expr ')'\l 74      | . PRINT '(' VVARIABLE ')'\l 75      | . PRINT '(' MVARIABLE ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l101 const: . INTEGER\l102      | . BOOL\l"]
  2 -> 4 [style=solid label="BOOL"]
  2 -> 5 [style=solid label="INTEGER"]
  2 -> 6 [style=solid label="VARIABLE"]
  2 -> 7 [style=solid label="VVARIABLE"]
  2 -> 8 [style=solid label="MVARIABLE"]
  2 -> 9 [style=solid label="FVARIABLE"]
  2 -> 10 [style=solid label="CINT"]
  2 -> 11 [style=solid label="VINT"]
  2 -> 12 [style=solid label="MINT"]
  2 -> 13 [style=solid label="INT"]
  2 -> 14 [style=solid label="CVINT"]
  2 -> 15 [style=solid label="CMINT"]
  2 -> 16 [style=solid label="BOOLEAN"]
  2 -> 17 [style=solid label="CBOOLEAN"]
  2 -> 18 [style=solid label="VBOOLEAN"]
  2 -> 19 [style=solid label="MBOOLEAN"]
  2 -> 20 [style=solid label="CVBOOLEAN"]
  2 -> 21 [style=solid label="CMBOOLEAN"]
  2 -> 22 [style=solid label="NEWLINE"]
  2 -> 23 [style=solid label="PRINT"]
  2 -> 24 [style=solid label="IF"]
  2 -> 25 [style=solid label="FORR"]
  2 -> 26 [style=solid label="'-'"]
  2 -> 27 [style=solid label="'!'"]
  2 -> 28 [style=solid label="'('"]
  2 -> 29 [style=solid label="'['"]
  2 -> 30 [style=solid label="'{'"]
  2 -> 31 [style=dashed label="stmts"]
  2 -> 32 [style=dashed label="stmt"]
  2 -> 33 [style=dashed label="iff"]
  2 -> 34 [style=dashed label="forr"]
  2 -> 35 [style=dashed label="function"]
  2 -> 36 [style=dashed label="callfunction"]
  2 -> 37 [style=dashed label="matrix"]
  2 -> 38 [style=dashed label="vector"]
  2 -> 39 [style=dashed label="vmdeclaration"]
  2 -> 40 [style=dashed label="declaration"]
  2 -> 41 [style=dashed label="assignment"]
  2 -> 42 [style=dashed label="print"]
  2 -> 43 [style=dashed label="expr"]
  2 -> 44 [style=dashed label="type"]
  2 -> 45 [style=dashed label="const"]
  2 -> "2R1" [style=solid]
 "2R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  3 [label="State 3\n\l  0 $accept: program $end .\l"]
  3 -> "3R0" [style=solid]
 "3R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  4 [label="State 4\n\l102 const: BOOL .\l"]
  4 -> "4R102" [style=solid]
 "4R102" [label="R102", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l101 const: INTEGER .\l"]
  5 -> "5R101" [style=solid]
 "5R101" [label="R101", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l 70 assignment: VARIABLE . ASSIGN expr\l 77 expr: VARIABLE .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']\l"]
  6 -> 46 [style=solid label="ASSIGN"]
  6 -> "6R77" [style=solid]
 "6R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l 49 vector: VVARIABLE . '(' vector ',' '[' ']' ')'\l 52       | VVARIABLE .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT]\l 59 vmdeclaration: VVARIABLE . '(' expr ')' ASSIGN expr\l 60              | VVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN vector\l 71 assignment: VVARIABLE . ASSIGN vector\l 87 expr: VVARIABLE . '(' expr ')'\l"]
  7 -> 47 [style=solid label="ASSIGN"]
  7 -> 48 [style=solid label="'('"]
  7 -> "7R52" [style=solid]
 "7R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l 34 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'\l 35       | MVARIABLE . '(' '[' ']' ',' vector ')'\l 36       | MVARIABLE . '(' matrix ')'\l 37       | MVARIABLE .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*']\l 50 vector: MVARIABLE . '(' expr ',' '[' ']' ')'\l 51       | MVARIABLE . '(' '[' ']' ',' expr ')'\l 61 vmdeclaration: MVARIABLE . '(' expr ',' expr ')' ASSIGN expr\l 62              | MVARIABLE . '(' expr ',' '[' ']' ')' ASSIGN vector\l 63              | MVARIABLE . '(' '[' ']' ',' expr ')' ASSIGN vector\l 64              | MVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN matrix\l 65              | MVARIABLE . '(' '[' ']' ',' vector ')' ASSIGN matrix\l 66              | MVARIABLE . '(' matrix ')' ASSIGN matrix\l 72 assignment: MVARIABLE . ASSIGN matrix\l 88 expr: MVARIABLE . '(' expr ',' expr ')'\l"]
  8 -> 49 [style=solid label="ASSIGN"]
  8 -> 50 [style=solid label="'('"]
  8 -> "8R37" [style=solid]
 "8R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l 32 callfunction: FVARIABLE . '[' callfunc_args ']'\l"]
  9 -> 51 [style=solid label="'['"]
  10 [label="State 10\n\l 90 type: CINT .\l"]
  10 -> "10R90" [style=solid]
 "10R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  11 [label="State 11\n\l 91 type: VINT .\l"]
  11 -> "11R91" [style=solid]
 "11R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l 92 type: MINT .\l"]
  12 -> "12R92" [style=solid]
 "12R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l 89 type: INT .\l"]
  13 -> "13R89" [style=solid]
 "13R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l 93 type: CVINT .\l"]
  14 -> "14R93" [style=solid]
 "14R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l 94 type: CMINT .\l"]
  15 -> "15R94" [style=solid]
 "15R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l 95 type: BOOLEAN .\l"]
  16 -> "16R95" [style=solid]
 "16R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l 96 type: CBOOLEAN .\l"]
  17 -> "17R96" [style=solid]
 "17R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 97 type: VBOOLEAN .\l"]
  18 -> "18R97" [style=solid]
 "18R97" [label="R97", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l 98 type: MBOOLEAN .\l"]
  19 -> "19R98" [style=solid]
 "19R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l 99 type: CVBOOLEAN .\l"]
  20 -> "20R99" [style=solid]
 "20R99" [label="R99", fillcolor=3, shape=diamond, style=filled]
  21 [label="State 21\n\l100 type: CMBOOLEAN .\l"]
  21 -> "21R100" [style=solid]
 "21R100" [label="R100", fillcolor=3, shape=diamond, style=filled]
  22 [label="State 22\n\l  6 stmt: NEWLINE .\l"]
  22 -> "22R6" [style=solid]
 "22R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  23 [label="State 23\n\l 73 print: PRINT . '(' expr ')'\l 74      | PRINT . '(' VVARIABLE ')'\l 75      | PRINT . '(' MVARIABLE ')'\l"]
  23 -> 52 [style=solid label="'('"]
  24 [label="State 24\n\l 19 iff: IF . expr NEWLINE BEGIF stmts ENDIF\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  24 -> 4 [style=solid label="BOOL"]
  24 -> 5 [style=solid label="INTEGER"]
  24 -> 53 [style=solid label="VARIABLE"]
  24 -> 54 [style=solid label="VVARIABLE"]
  24 -> 55 [style=solid label="MVARIABLE"]
  24 -> 26 [style=solid label="'-'"]
  24 -> 27 [style=solid label="'!'"]
  24 -> 56 [style=solid label="'('"]
  24 -> 57 [style=dashed label="expr"]
  24 -> 45 [style=dashed label="const"]
  25 [label="State 25\n\l 20 forr: FORR . declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR\l 67 declaration: . type VAR DECLARE expr\l 68            | . type VAR DECLARE vector\l 69            | . type VAR DECLARE matrix\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l"]
  25 -> 10 [style=solid label="CINT"]
  25 -> 11 [style=solid label="VINT"]
  25 -> 12 [style=solid label="MINT"]
  25 -> 13 [style=solid label="INT"]
  25 -> 14 [style=solid label="CVINT"]
  25 -> 15 [style=solid label="CMINT"]
  25 -> 16 [style=solid label="BOOLEAN"]
  25 -> 17 [style=solid label="CBOOLEAN"]
  25 -> 18 [style=solid label="VBOOLEAN"]
  25 -> 19 [style=solid label="MBOOLEAN"]
  25 -> 20 [style=solid label="CVBOOLEAN"]
  25 -> 21 [style=solid label="CMBOOLEAN"]
  25 -> 58 [style=dashed label="declaration"]
  25 -> 44 [style=dashed label="type"]
  26 [label="State 26\n\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 78     | '-' . expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  26 -> 4 [style=solid label="BOOL"]
  26 -> 5 [style=solid label="INTEGER"]
  26 -> 53 [style=solid label="VARIABLE"]
  26 -> 54 [style=solid label="VVARIABLE"]
  26 -> 55 [style=solid label="MVARIABLE"]
  26 -> 26 [style=solid label="'-'"]
  26 -> 27 [style=solid label="'!'"]
  26 -> 56 [style=solid label="'('"]
  26 -> 59 [style=dashed label="expr"]
  26 -> 45 [style=dashed label="const"]
  27 [label="State 27\n\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 84     | '!' . expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  27 -> 4 [style=solid label="BOOL"]
  27 -> 5 [style=solid label="INTEGER"]
  27 -> 53 [style=solid label="VARIABLE"]
  27 -> 54 [style=solid label="VVARIABLE"]
  27 -> 55 [style=solid label="MVARIABLE"]
  27 -> 26 [style=solid label="'-'"]
  27 -> 27 [style=solid label="'!'"]
  27 -> 56 [style=solid label="'('"]
  27 -> 60 [style=dashed label="expr"]
  27 -> 45 [style=dashed label="const"]
  28 [label="State 28\n\l  4 stmts: . stmt\l  5      | . stmts stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . function NEWLINE\l 17     | . callfunction NEWLINE\l 18     | . '(' stmts ')'\l 18     | '(' . stmts ')'\l 19 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 20 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR\l 25 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E\l 32 callfunction: . FVARIABLE '[' callfunc_args ']'\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 59 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 60              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 61              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 62              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 63              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 64              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 65              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 66              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 67 declaration: . type VAR DECLARE expr\l 68            | . type VAR DECLARE vector\l 69            | . type VAR DECLARE matrix\l 70 assignment: . VARIABLE ASSIGN expr\l 71           | . VVARIABLE ASSIGN vector\l 72           | . MVARIABLE ASSIGN matrix\l 73 print: . PRINT '(' expr ')'\l 74      | . PRINT '(' VVARIABLE ')'\l 75      | . PRINT '(' MVARIABLE ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 86     | '(' . expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l101 const: . INTEGER\l102      | . BOOL\l"]
  28 -> 4 [style=solid label="BOOL"]
  28 -> 5 [style=solid label="INTEGER"]
  28 -> 6 [style=solid label="VARIABLE"]
  28 -> 7 [style=solid label="VVARIABLE"]
  28 -> 8 [style=solid label="MVARIABLE"]
  28 -> 9 [style=solid label="FVARIABLE"]
  28 -> 10 [style=solid label="CINT"]
  28 -> 11 [style=solid label="VINT"]
  28 -> 12 [style=solid label="MINT"]
  28 -> 13 [style=solid label="INT"]
  28 -> 14 [style=solid label="CVINT"]
  28 -> 15 [style=solid label="CMINT"]
  28 -> 16 [style=solid label="BOOLEAN"]
  28 -> 17 [style=solid label="CBOOLEAN"]
  28 -> 18 [style=solid label="VBOOLEAN"]
  28 -> 19 [style=solid label="MBOOLEAN"]
  28 -> 20 [style=solid label="CVBOOLEAN"]
  28 -> 21 [style=solid label="CMBOOLEAN"]
  28 -> 22 [style=solid label="NEWLINE"]
  28 -> 23 [style=solid label="PRINT"]
  28 -> 24 [style=solid label="IF"]
  28 -> 25 [style=solid label="FORR"]
  28 -> 26 [style=solid label="'-'"]
  28 -> 27 [style=solid label="'!'"]
  28 -> 28 [style=solid label="'('"]
  28 -> 29 [style=solid label="'['"]
  28 -> 30 [style=solid label="'{'"]
  28 -> 61 [style=dashed label="stmts"]
  28 -> 32 [style=dashed label="stmt"]
  28 -> 33 [style=dashed label="iff"]
  28 -> 34 [style=dashed label="forr"]
  28 -> 35 [style=dashed label="function"]
  28 -> 36 [style=dashed label="callfunction"]
  28 -> 37 [style=dashed label="matrix"]
  28 -> 38 [style=dashed label="vector"]
  28 -> 39 [style=dashed label="vmdeclaration"]
  28 -> 40 [style=dashed label="declaration"]
  28 -> 41 [style=dashed label="assignment"]
  28 -> 42 [style=dashed label="print"]
  28 -> 62 [style=dashed label="expr"]
  28 -> 44 [style=dashed label="type"]
  28 -> 45 [style=dashed label="const"]
  29 [label="State 29\n\l 21 return_func: . type VAR\l 22            | . return_func ',' type VAR\l 25 function: '[' . return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l"]
  29 -> 10 [style=solid label="CINT"]
  29 -> 11 [style=solid label="VINT"]
  29 -> 12 [style=solid label="MINT"]
  29 -> 13 [style=solid label="INT"]
  29 -> 14 [style=solid label="CVINT"]
  29 -> 15 [style=solid label="CMINT"]
  29 -> 16 [style=solid label="BOOLEAN"]
  29 -> 17 [style=solid label="CBOOLEAN"]
  29 -> 18 [style=solid label="VBOOLEAN"]
  29 -> 19 [style=solid label="MBOOLEAN"]
  29 -> 20 [style=solid label="CVBOOLEAN"]
  29 -> 21 [style=solid label="CMBOOLEAN"]
  29 -> 63 [style=dashed label="return_func"]
  29 -> 64 [style=dashed label="type"]
  30 [label="State 30\n\l 33 matrix: '{' . listexprs '}'\l 46 listexprs: . vector ',' vector\l 47          | . listexprs ',' vector\l 48 vector: . '{' exprs '}'\l 48       | '{' . exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 57 exprs: . expr ',' expr\l 58      | . exprs ',' expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  30 -> 4 [style=solid label="BOOL"]
  30 -> 5 [style=solid label="INTEGER"]
  30 -> 53 [style=solid label="VARIABLE"]
  30 -> 65 [style=solid label="VVARIABLE"]
  30 -> 66 [style=solid label="MVARIABLE"]
  30 -> 26 [style=solid label="'-'"]
  30 -> 27 [style=solid label="'!'"]
  30 -> 56 [style=solid label="'('"]
  30 -> 67 [style=solid label="'{'"]
  30 -> 68 [style=dashed label="listexprs"]
  30 -> 69 [style=dashed label="vector"]
  30 -> 70 [style=dashed label="exprs"]
  30 -> 71 [style=dashed label="expr"]
  30 -> 45 [style=dashed label="const"]
  31 [label="State 31\n\l  2 func: func stmts .  [$end, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, '-', '!', '(', '[', '{']\l  5 stmts: stmts . stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . function NEWLINE\l 17     | . callfunction NEWLINE\l 18     | . '(' stmts ')'\l 19 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 20 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR\l 25 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E\l 32 callfunction: . FVARIABLE '[' callfunc_args ']'\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 59 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 60              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 61              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 62              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 63              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 64              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 65              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 66              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 67 declaration: . type VAR DECLARE expr\l 68            | . type VAR DECLARE vector\l 69            | . type VAR DECLARE matrix\l 70 assignment: . VARIABLE ASSIGN expr\l 71           | . VVARIABLE ASSIGN vector\l 72           | . MVARIABLE ASSIGN matrix\l 73 print: . PRINT '(' expr ')'\l 74      | . PRINT '(' VVARIABLE ')'\l 75      | . PRINT '(' MVARIABLE ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l101 const: . INTEGER\l102      | . BOOL\l"]
  31 -> 4 [style=solid label="BOOL"]
  31 -> 5 [style=solid label="INTEGER"]
  31 -> 6 [style=solid label="VARIABLE"]
  31 -> 7 [style=solid label="VVARIABLE"]
  31 -> 8 [style=solid label="MVARIABLE"]
  31 -> 9 [style=solid label="FVARIABLE"]
  31 -> 10 [style=solid label="CINT"]
  31 -> 11 [style=solid label="VINT"]
  31 -> 12 [style=solid label="MINT"]
  31 -> 13 [style=solid label="INT"]
  31 -> 14 [style=solid label="CVINT"]
  31 -> 15 [style=solid label="CMINT"]
  31 -> 16 [style=solid label="BOOLEAN"]
  31 -> 17 [style=solid label="CBOOLEAN"]
  31 -> 18 [style=solid label="VBOOLEAN"]
  31 -> 19 [style=solid label="MBOOLEAN"]
  31 -> 20 [style=solid label="CVBOOLEAN"]
  31 -> 21 [style=solid label="CMBOOLEAN"]
  31 -> 22 [style=solid label="NEWLINE"]
  31 -> 23 [style=solid label="PRINT"]
  31 -> 24 [style=solid label="IF"]
  31 -> 25 [style=solid label="FORR"]
  31 -> 26 [style=solid label="'-'"]
  31 -> 27 [style=solid label="'!'"]
  31 -> 28 [style=solid label="'('"]
  31 -> 29 [style=solid label="'['"]
  31 -> 30 [style=solid label="'{'"]
  31 -> 72 [style=dashed label="stmt"]
  31 -> 33 [style=dashed label="iff"]
  31 -> 34 [style=dashed label="forr"]
  31 -> 35 [style=dashed label="function"]
  31 -> 36 [style=dashed label="callfunction"]
  31 -> 37 [style=dashed label="matrix"]
  31 -> 38 [style=dashed label="vector"]
  31 -> 39 [style=dashed label="vmdeclaration"]
  31 -> 40 [style=dashed label="declaration"]
  31 -> 41 [style=dashed label="assignment"]
  31 -> 42 [style=dashed label="print"]
  31 -> 43 [style=dashed label="expr"]
  31 -> 44 [style=dashed label="type"]
  31 -> 45 [style=dashed label="const"]
  31 -> "31R2d" [label="[BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, '-', '!', '(', '[', '{']", style=solid]
 "31R2d" [label="R2", fillcolor=5, shape=diamond, style=filled]
  31 -> "31R2" [style=solid]
 "31R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  32 [label="State 32\n\l  4 stmts: stmt .\l"]
  32 -> "32R4" [style=solid]
 "32R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 14 stmt: iff . NEWLINE\l"]
  33 -> 73 [style=solid label="NEWLINE"]
  34 [label="State 34\n\l 15 stmt: forr . NEWLINE\l"]
  34 -> 74 [style=solid label="NEWLINE"]
  35 [label="State 35\n\l 16 stmt: function . NEWLINE\l"]
  35 -> 75 [style=solid label="NEWLINE"]
  36 [label="State 36\n\l 17 stmt: callfunction . NEWLINE\l"]
  36 -> 76 [style=solid label="NEWLINE"]
  37 [label="State 37\n\l  9 stmt: matrix . NEWLINE\l 38 matrix: matrix . '*' matrix\l 39       | matrix . ELEMMULT matrix\l 40       | matrix . '\\''\l 41       | matrix . RIGHTSHIFT\l 42       | matrix . LEFTSHIFT\l 44       | matrix . ELEMMULT vector\l 45       | matrix . ELEMMULT expr\l"]
  37 -> 77 [style=solid label="NEWLINE"]
  37 -> 78 [style=solid label="ELEMMULT"]
  37 -> 79 [style=solid label="'\\''"]
  37 -> 80 [style=solid label="LEFTSHIFT"]
  37 -> 81 [style=solid label="RIGHTSHIFT"]
  37 -> 82 [style=solid label="'*'"]
  38 [label="State 38\n\l  8 stmt: vector . NEWLINE\l 43 matrix: vector . '\\''\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l"]
  38 -> 83 [style=solid label="NEWLINE"]
  38 -> 84 [style=solid label="ELEMMULT"]
  38 -> 85 [style=solid label="'\\''"]
  38 -> 86 [style=solid label="LEFTSHIFT"]
  38 -> 87 [style=solid label="RIGHTSHIFT"]
  39 [label="State 39\n\l 11 stmt: vmdeclaration . NEWLINE\l"]
  39 -> 88 [style=solid label="NEWLINE"]
  40 [label="State 40\n\l 12 stmt: declaration . NEWLINE\l"]
  40 -> 89 [style=solid label="NEWLINE"]
  41 [label="State 41\n\l 13 stmt: assignment . NEWLINE\l"]
  41 -> 90 [style=solid label="NEWLINE"]
  42 [label="State 42\n\l 10 stmt: print . NEWLINE\l"]
  42 -> 91 [style=solid label="NEWLINE"]
  43 [label="State 43\n\l  7 stmt: expr . NEWLINE\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  43 -> 92 [style=solid label="NEWLINE"]
  43 -> 93 [style=solid label="CONJUNCTION"]
  43 -> 94 [style=solid label="'<'"]
  43 -> 95 [style=solid label="'>'"]
  43 -> 96 [style=solid label="'+'"]
  43 -> 97 [style=solid label="'-'"]
  43 -> 98 [style=solid label="'/'"]
  44 [label="State 44\n\l 67 declaration: type . VAR DECLARE expr\l 68            | type . VAR DECLARE vector\l 69            | type . VAR DECLARE matrix\l"]
  44 -> 99 [style=solid label="VAR"]
  45 [label="State 45\n\l 76 expr: const .\l"]
  45 -> "45R76" [style=solid]
 "45R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 70 assignment: VARIABLE ASSIGN . expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  46 -> 4 [style=solid label="BOOL"]
  46 -> 5 [style=solid label="INTEGER"]
  46 -> 53 [style=solid label="VARIABLE"]
  46 -> 54 [style=solid label="VVARIABLE"]
  46 -> 55 [style=solid label="MVARIABLE"]
  46 -> 26 [style=solid label="'-'"]
  46 -> 27 [style=solid label="'!'"]
  46 -> 56 [style=solid label="'('"]
  46 -> 100 [style=dashed label="expr"]
  46 -> 45 [style=dashed label="const"]
  47 [label="State 47\n\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 71 assignment: VVARIABLE ASSIGN . vector\l"]
  47 -> 101 [style=solid label="VVARIABLE"]
  47 -> 102 [style=solid label="MVARIABLE"]
  47 -> 67 [style=solid label="'{'"]
  47 -> 103 [style=dashed label="vector"]
  48 [label="State 48\n\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 49       | VVARIABLE '(' . vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 59 vmdeclaration: VVARIABLE '(' . expr ')' ASSIGN expr\l 60              | VVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN vector\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 87     | VVARIABLE '(' . expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  48 -> 4 [style=solid label="BOOL"]
  48 -> 5 [style=solid label="INTEGER"]
  48 -> 53 [style=solid label="VARIABLE"]
  48 -> 65 [style=solid label="VVARIABLE"]
  48 -> 66 [style=solid label="MVARIABLE"]
  48 -> 26 [style=solid label="'-'"]
  48 -> 27 [style=solid label="'!'"]
  48 -> 56 [style=solid label="'('"]
  48 -> 67 [style=solid label="'{'"]
  48 -> 104 [style=dashed label="vector"]
  48 -> 105 [style=dashed label="expr"]
  48 -> 45 [style=dashed label="const"]
  49 [label="State 49\n\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 72 assignment: MVARIABLE ASSIGN . matrix\l"]
  49 -> 101 [style=solid label="VVARIABLE"]
  49 -> 106 [style=solid label="MVARIABLE"]
  49 -> 30 [style=solid label="'{'"]
  49 -> 107 [style=dashed label="matrix"]
  49 -> 108 [style=dashed label="vector"]
  50 [label="State 50\n\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 34       | MVARIABLE '(' . vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 35       | MVARIABLE '(' . '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 36       | MVARIABLE '(' . matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 50       | MVARIABLE '(' . expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 51       | MVARIABLE '(' . '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 61 vmdeclaration: MVARIABLE '(' . expr ',' expr ')' ASSIGN expr\l 62              | MVARIABLE '(' . expr ',' '[' ']' ')' ASSIGN vector\l 63              | MVARIABLE '(' . '[' ']' ',' expr ')' ASSIGN vector\l 64              | MVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN matrix\l 65              | MVARIABLE '(' . '[' ']' ',' vector ')' ASSIGN matrix\l 66              | MVARIABLE '(' . matrix ')' ASSIGN matrix\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 88     | MVARIABLE '(' . expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  50 -> 4 [style=solid label="BOOL"]
  50 -> 5 [style=solid label="INTEGER"]
  50 -> 53 [style=solid label="VARIABLE"]
  50 -> 65 [style=solid label="VVARIABLE"]
  50 -> 109 [style=solid label="MVARIABLE"]
  50 -> 26 [style=solid label="'-'"]
  50 -> 27 [style=solid label="'!'"]
  50 -> 56 [style=solid label="'('"]
  50 -> 110 [style=solid label="'['"]
  50 -> 30 [style=solid label="'{'"]
  50 -> 111 [style=dashed label="matrix"]
  50 -> 112 [style=dashed label="vector"]
  50 -> 113 [style=dashed label="expr"]
  50 -> 45 [style=dashed label="const"]
  51 [label="State 51\n\l 26 callfunc_args: . expr\l 27              | . vector\l 28              | . matrix\l 29              | . callfunc_args ',' expr\l 30              | . callfunc_args ',' vector\l 31              | . callfunc_args ',' matrix\l 32 callfunction: FVARIABLE '[' . callfunc_args ']'\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  51 -> 4 [style=solid label="BOOL"]
  51 -> 5 [style=solid label="INTEGER"]
  51 -> 53 [style=solid label="VARIABLE"]
  51 -> 65 [style=solid label="VVARIABLE"]
  51 -> 109 [style=solid label="MVARIABLE"]
  51 -> 26 [style=solid label="'-'"]
  51 -> 27 [style=solid label="'!'"]
  51 -> 56 [style=solid label="'('"]
  51 -> 30 [style=solid label="'{'"]
  51 -> 114 [style=dashed label="callfunc_args"]
  51 -> 115 [style=dashed label="matrix"]
  51 -> 116 [style=dashed label="vector"]
  51 -> 117 [style=dashed label="expr"]
  51 -> 45 [style=dashed label="const"]
  52 [label="State 52\n\l 73 print: PRINT '(' . expr ')'\l 74      | PRINT '(' . VVARIABLE ')'\l 75      | PRINT '(' . MVARIABLE ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  52 -> 4 [style=solid label="BOOL"]
  52 -> 5 [style=solid label="INTEGER"]
  52 -> 53 [style=solid label="VARIABLE"]
  52 -> 118 [style=solid label="VVARIABLE"]
  52 -> 119 [style=solid label="MVARIABLE"]
  52 -> 26 [style=solid label="'-'"]
  52 -> 27 [style=solid label="'!'"]
  52 -> 56 [style=solid label="'('"]
  52 -> 120 [style=dashed label="expr"]
  52 -> 45 [style=dashed label="const"]
  53 [label="State 53\n\l 77 expr: VARIABLE .\l"]
  53 -> "53R77" [style=solid]
 "53R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l 87 expr: VVARIABLE . '(' expr ')'\l"]
  54 -> 121 [style=solid label="'('"]
  55 [label="State 55\n\l 88 expr: MVARIABLE . '(' expr ',' expr ')'\l"]
  55 -> 122 [style=solid label="'('"]
  56 [label="State 56\n\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 86     | '(' . expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  56 -> 4 [style=solid label="BOOL"]
  56 -> 5 [style=solid label="INTEGER"]
  56 -> 53 [style=solid label="VARIABLE"]
  56 -> 54 [style=solid label="VVARIABLE"]
  56 -> 55 [style=solid label="MVARIABLE"]
  56 -> 26 [style=solid label="'-'"]
  56 -> 27 [style=solid label="'!'"]
  56 -> 56 [style=solid label="'('"]
  56 -> 123 [style=dashed label="expr"]
  56 -> 45 [style=dashed label="const"]
  57 [label="State 57\n\l 19 iff: IF expr . NEWLINE BEGIF stmts ENDIF\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  57 -> 124 [style=solid label="NEWLINE"]
  57 -> 93 [style=solid label="CONJUNCTION"]
  57 -> 94 [style=solid label="'<'"]
  57 -> 95 [style=solid label="'>'"]
  57 -> 96 [style=solid label="'+'"]
  57 -> 97 [style=solid label="'-'"]
  57 -> 98 [style=solid label="'/'"]
  58 [label="State 58\n\l 20 forr: FORR declaration . DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR\l"]
  58 -> 125 [style=solid label="DOUBLEDOT"]
  59 [label="State 59\n\l 78 expr: '-' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']\l 79     | expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  59 -> 93 [style=solid label="CONJUNCTION"]
  59 -> "59R78d" [label="[CONJUNCTION]", style=solid]
 "59R78d" [label="R78", fillcolor=5, shape=diamond, style=filled]
  59 -> "59R78" [style=solid]
 "59R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 84     | '!' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']\l 85     | expr . CONJUNCTION expr\l"]
  60 -> 93 [style=solid label="CONJUNCTION"]
  60 -> "60R84d" [label="[CONJUNCTION]", style=solid]
 "60R84d" [label="R84", fillcolor=5, shape=diamond, style=filled]
  60 -> "60R84" [style=solid]
 "60R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l  5 stmts: stmts . stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . function NEWLINE\l 17     | . callfunction NEWLINE\l 18     | . '(' stmts ')'\l 18     | '(' stmts . ')'\l 19 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 20 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR\l 25 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E\l 32 callfunction: . FVARIABLE '[' callfunc_args ']'\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 59 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 60              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 61              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 62              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 63              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 64              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 65              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 66              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 67 declaration: . type VAR DECLARE expr\l 68            | . type VAR DECLARE vector\l 69            | . type VAR DECLARE matrix\l 70 assignment: . VARIABLE ASSIGN expr\l 71           | . VVARIABLE ASSIGN vector\l 72           | . MVARIABLE ASSIGN matrix\l 73 print: . PRINT '(' expr ')'\l 74      | . PRINT '(' VVARIABLE ')'\l 75      | . PRINT '(' MVARIABLE ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l101 const: . INTEGER\l102      | . BOOL\l"]
  61 -> 4 [style=solid label="BOOL"]
  61 -> 5 [style=solid label="INTEGER"]
  61 -> 6 [style=solid label="VARIABLE"]
  61 -> 7 [style=solid label="VVARIABLE"]
  61 -> 8 [style=solid label="MVARIABLE"]
  61 -> 9 [style=solid label="FVARIABLE"]
  61 -> 10 [style=solid label="CINT"]
  61 -> 11 [style=solid label="VINT"]
  61 -> 12 [style=solid label="MINT"]
  61 -> 13 [style=solid label="INT"]
  61 -> 14 [style=solid label="CVINT"]
  61 -> 15 [style=solid label="CMINT"]
  61 -> 16 [style=solid label="BOOLEAN"]
  61 -> 17 [style=solid label="CBOOLEAN"]
  61 -> 18 [style=solid label="VBOOLEAN"]
  61 -> 19 [style=solid label="MBOOLEAN"]
  61 -> 20 [style=solid label="CVBOOLEAN"]
  61 -> 21 [style=solid label="CMBOOLEAN"]
  61 -> 22 [style=solid label="NEWLINE"]
  61 -> 23 [style=solid label="PRINT"]
  61 -> 24 [style=solid label="IF"]
  61 -> 25 [style=solid label="FORR"]
  61 -> 26 [style=solid label="'-'"]
  61 -> 27 [style=solid label="'!'"]
  61 -> 28 [style=solid label="'('"]
  61 -> 126 [style=solid label="')'"]
  61 -> 29 [style=solid label="'['"]
  61 -> 30 [style=solid label="'{'"]
  61 -> 72 [style=dashed label="stmt"]
  61 -> 33 [style=dashed label="iff"]
  61 -> 34 [style=dashed label="forr"]
  61 -> 35 [style=dashed label="function"]
  61 -> 36 [style=dashed label="callfunction"]
  61 -> 37 [style=dashed label="matrix"]
  61 -> 38 [style=dashed label="vector"]
  61 -> 39 [style=dashed label="vmdeclaration"]
  61 -> 40 [style=dashed label="declaration"]
  61 -> 41 [style=dashed label="assignment"]
  61 -> 42 [style=dashed label="print"]
  61 -> 43 [style=dashed label="expr"]
  61 -> 44 [style=dashed label="type"]
  61 -> 45 [style=dashed label="const"]
  62 [label="State 62\n\l  7 stmt: expr . NEWLINE\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l 86     | '(' expr . ')'\l"]
  62 -> 92 [style=solid label="NEWLINE"]
  62 -> 93 [style=solid label="CONJUNCTION"]
  62 -> 94 [style=solid label="'<'"]
  62 -> 95 [style=solid label="'>'"]
  62 -> 96 [style=solid label="'+'"]
  62 -> 97 [style=solid label="'-'"]
  62 -> 98 [style=solid label="'/'"]
  62 -> 127 [style=solid label="')'"]
  63 [label="State 63\n\l 22 return_func: return_func . ',' type VAR\l 25 function: '[' return_func . ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E\l"]
  63 -> 128 [style=solid label="','"]
  63 -> 129 [style=solid label="']'"]
  64 [label="State 64\n\l 21 return_func: type . VAR\l"]
  64 -> 130 [style=solid label="VAR"]
  65 [label="State 65\n\l 49 vector: VVARIABLE . '(' vector ',' '[' ']' ')'\l 52       | VVARIABLE .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']\l 87 expr: VVARIABLE . '(' expr ')'\l"]
  65 -> 131 [style=solid label="'('"]
  65 -> "65R52" [style=solid]
 "65R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l 50 vector: MVARIABLE . '(' expr ',' '[' ']' ')'\l 51       | MVARIABLE . '(' '[' ']' ',' expr ')'\l 88 expr: MVARIABLE . '(' expr ',' expr ')'\l"]
  66 -> 132 [style=solid label="'('"]
  67 [label="State 67\n\l 48 vector: '{' . exprs '}'\l 57 exprs: . expr ',' expr\l 58      | . exprs ',' expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  67 -> 4 [style=solid label="BOOL"]
  67 -> 5 [style=solid label="INTEGER"]
  67 -> 53 [style=solid label="VARIABLE"]
  67 -> 54 [style=solid label="VVARIABLE"]
  67 -> 55 [style=solid label="MVARIABLE"]
  67 -> 26 [style=solid label="'-'"]
  67 -> 27 [style=solid label="'!'"]
  67 -> 56 [style=solid label="'('"]
  67 -> 70 [style=dashed label="exprs"]
  67 -> 71 [style=dashed label="expr"]
  67 -> 45 [style=dashed label="const"]
  68 [label="State 68\n\l 33 matrix: '{' listexprs . '}'\l 47 listexprs: listexprs . ',' vector\l"]
  68 -> 133 [style=solid label="','"]
  68 -> 134 [style=solid label="'}'"]
  69 [label="State 69\n\l 46 listexprs: vector . ',' vector\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l"]
  69 -> 84 [style=solid label="ELEMMULT"]
  69 -> 86 [style=solid label="LEFTSHIFT"]
  69 -> 87 [style=solid label="RIGHTSHIFT"]
  69 -> 135 [style=solid label="','"]
  70 [label="State 70\n\l 48 vector: '{' exprs . '}'\l 58 exprs: exprs . ',' expr\l"]
  70 -> 136 [style=solid label="','"]
  70 -> 137 [style=solid label="'}'"]
  71 [label="State 71\n\l 57 exprs: expr . ',' expr\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  71 -> 93 [style=solid label="CONJUNCTION"]
  71 -> 138 [style=solid label="','"]
  71 -> 94 [style=solid label="'<'"]
  71 -> 95 [style=solid label="'>'"]
  71 -> 96 [style=solid label="'+'"]
  71 -> 97 [style=solid label="'-'"]
  71 -> 98 [style=solid label="'/'"]
  72 [label="State 72\n\l  5 stmts: stmts stmt .\l"]
  72 -> "72R5" [style=solid]
 "72R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 14 stmt: iff NEWLINE .\l"]
  73 -> "73R14" [style=solid]
 "73R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l 15 stmt: forr NEWLINE .\l"]
  74 -> "74R15" [style=solid]
 "74R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 16 stmt: function NEWLINE .\l"]
  75 -> "75R16" [style=solid]
 "75R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l 17 stmt: callfunction NEWLINE .\l"]
  76 -> "76R17" [style=solid]
 "76R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l  9 stmt: matrix NEWLINE .\l"]
  77 -> "77R9" [style=solid]
 "77R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 39       | matrix ELEMMULT . matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 44       | matrix ELEMMULT . vector\l 45       | . matrix ELEMMULT expr\l 45       | matrix ELEMMULT . expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  78 -> 4 [style=solid label="BOOL"]
  78 -> 5 [style=solid label="INTEGER"]
  78 -> 53 [style=solid label="VARIABLE"]
  78 -> 65 [style=solid label="VVARIABLE"]
  78 -> 109 [style=solid label="MVARIABLE"]
  78 -> 26 [style=solid label="'-'"]
  78 -> 27 [style=solid label="'!'"]
  78 -> 56 [style=solid label="'('"]
  78 -> 30 [style=solid label="'{'"]
  78 -> 139 [style=dashed label="matrix"]
  78 -> 140 [style=dashed label="vector"]
  78 -> 141 [style=dashed label="expr"]
  78 -> 45 [style=dashed label="const"]
  79 [label="State 79\n\l 40 matrix: matrix '\\'' .\l"]
  79 -> "79R40" [style=solid]
 "79R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l 42 matrix: matrix LEFTSHIFT .\l"]
  80 -> "80R42" [style=solid]
 "80R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l 41 matrix: matrix RIGHTSHIFT .\l"]
  81 -> "81R41" [style=solid]
 "81R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 38       | matrix '*' . matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l"]
  82 -> 101 [style=solid label="VVARIABLE"]
  82 -> 106 [style=solid label="MVARIABLE"]
  82 -> 30 [style=solid label="'{'"]
  82 -> 142 [style=dashed label="matrix"]
  82 -> 108 [style=dashed label="vector"]
  83 [label="State 83\n\l  8 stmt: vector NEWLINE .\l"]
  83 -> "83R8" [style=solid]
 "83R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 53       | vector ELEMMULT . vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 56       | vector ELEMMULT . expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  84 -> 4 [style=solid label="BOOL"]
  84 -> 5 [style=solid label="INTEGER"]
  84 -> 53 [style=solid label="VARIABLE"]
  84 -> 65 [style=solid label="VVARIABLE"]
  84 -> 66 [style=solid label="MVARIABLE"]
  84 -> 26 [style=solid label="'-'"]
  84 -> 27 [style=solid label="'!'"]
  84 -> 56 [style=solid label="'('"]
  84 -> 67 [style=solid label="'{'"]
  84 -> 143 [style=dashed label="vector"]
  84 -> 144 [style=dashed label="expr"]
  84 -> 45 [style=dashed label="const"]
  85 [label="State 85\n\l 43 matrix: vector '\\'' .\l"]
  85 -> "85R43" [style=solid]
 "85R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l 55 vector: vector LEFTSHIFT .\l"]
  86 -> "86R55" [style=solid]
 "86R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  87 [label="State 87\n\l 54 vector: vector RIGHTSHIFT .\l"]
  87 -> "87R54" [style=solid]
 "87R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  88 [label="State 88\n\l 11 stmt: vmdeclaration NEWLINE .\l"]
  88 -> "88R11" [style=solid]
 "88R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  89 [label="State 89\n\l 12 stmt: declaration NEWLINE .\l"]
  89 -> "89R12" [style=solid]
 "89R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  90 [label="State 90\n\l 13 stmt: assignment NEWLINE .\l"]
  90 -> "90R13" [style=solid]
 "90R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  91 [label="State 91\n\l 10 stmt: print NEWLINE .\l"]
  91 -> "91R10" [style=solid]
 "91R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l  7 stmt: expr NEWLINE .\l"]
  92 -> "92R7" [style=solid]
 "92R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 85     | expr CONJUNCTION . expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  93 -> 4 [style=solid label="BOOL"]
  93 -> 5 [style=solid label="INTEGER"]
  93 -> 53 [style=solid label="VARIABLE"]
  93 -> 54 [style=solid label="VVARIABLE"]
  93 -> 55 [style=solid label="MVARIABLE"]
  93 -> 26 [style=solid label="'-'"]
  93 -> 27 [style=solid label="'!'"]
  93 -> 56 [style=solid label="'('"]
  93 -> 145 [style=dashed label="expr"]
  93 -> 45 [style=dashed label="const"]
  94 [label="State 94\n\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 82     | expr '<' . expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  94 -> 4 [style=solid label="BOOL"]
  94 -> 5 [style=solid label="INTEGER"]
  94 -> 53 [style=solid label="VARIABLE"]
  94 -> 54 [style=solid label="VVARIABLE"]
  94 -> 55 [style=solid label="MVARIABLE"]
  94 -> 26 [style=solid label="'-'"]
  94 -> 27 [style=solid label="'!'"]
  94 -> 56 [style=solid label="'('"]
  94 -> 146 [style=dashed label="expr"]
  94 -> 45 [style=dashed label="const"]
  95 [label="State 95\n\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 83     | expr '>' . expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  95 -> 4 [style=solid label="BOOL"]
  95 -> 5 [style=solid label="INTEGER"]
  95 -> 53 [style=solid label="VARIABLE"]
  95 -> 54 [style=solid label="VVARIABLE"]
  95 -> 55 [style=solid label="MVARIABLE"]
  95 -> 26 [style=solid label="'-'"]
  95 -> 27 [style=solid label="'!'"]
  95 -> 56 [style=solid label="'('"]
  95 -> 147 [style=dashed label="expr"]
  95 -> 45 [style=dashed label="const"]
  96 [label="State 96\n\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 79     | expr '+' . expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  96 -> 4 [style=solid label="BOOL"]
  96 -> 5 [style=solid label="INTEGER"]
  96 -> 53 [style=solid label="VARIABLE"]
  96 -> 54 [style=solid label="VVARIABLE"]
  96 -> 55 [style=solid label="MVARIABLE"]
  96 -> 26 [style=solid label="'-'"]
  96 -> 27 [style=solid label="'!'"]
  96 -> 56 [style=solid label="'('"]
  96 -> 148 [style=dashed label="expr"]
  96 -> 45 [style=dashed label="const"]
  97 [label="State 97\n\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 80     | expr '-' . expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  97 -> 4 [style=solid label="BOOL"]
  97 -> 5 [style=solid label="INTEGER"]
  97 -> 53 [style=solid label="VARIABLE"]
  97 -> 54 [style=solid label="VVARIABLE"]
  97 -> 55 [style=solid label="MVARIABLE"]
  97 -> 26 [style=solid label="'-'"]
  97 -> 27 [style=solid label="'!'"]
  97 -> 56 [style=solid label="'('"]
  97 -> 149 [style=dashed label="expr"]
  97 -> 45 [style=dashed label="const"]
  98 [label="State 98\n\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 81     | expr '/' . expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  98 -> 4 [style=solid label="BOOL"]
  98 -> 5 [style=solid label="INTEGER"]
  98 -> 53 [style=solid label="VARIABLE"]
  98 -> 54 [style=solid label="VVARIABLE"]
  98 -> 55 [style=solid label="MVARIABLE"]
  98 -> 26 [style=solid label="'-'"]
  98 -> 27 [style=solid label="'!'"]
  98 -> 56 [style=solid label="'('"]
  98 -> 150 [style=dashed label="expr"]
  98 -> 45 [style=dashed label="const"]
  99 [label="State 99\n\l 67 declaration: type VAR . DECLARE expr\l 68            | type VAR . DECLARE vector\l 69            | type VAR . DECLARE matrix\l"]
  99 -> 151 [style=solid label="DECLARE"]
  100 [label="State 100\n\l 70 assignment: VARIABLE ASSIGN expr .  [NEWLINE]\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  100 -> 93 [style=solid label="CONJUNCTION"]
  100 -> 94 [style=solid label="'<'"]
  100 -> 95 [style=solid label="'>'"]
  100 -> 96 [style=solid label="'+'"]
  100 -> 97 [style=solid label="'-'"]
  100 -> 98 [style=solid label="'/'"]
  100 -> "100R70" [style=solid]
 "100R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l 49 vector: VVARIABLE . '(' vector ',' '[' ']' ')'\l 52       | VVARIABLE .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', '}']\l"]
  101 -> 152 [style=solid label="'('"]
  101 -> "101R52" [style=solid]
 "101R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l 50 vector: MVARIABLE . '(' expr ',' '[' ']' ')'\l 51       | MVARIABLE . '(' '[' ']' ',' expr ')'\l"]
  102 -> 153 [style=solid label="'('"]
  103 [label="State 103\n\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l 71 assignment: VVARIABLE ASSIGN vector .  [NEWLINE]\l"]
  103 -> 84 [style=solid label="ELEMMULT"]
  103 -> 86 [style=solid label="LEFTSHIFT"]
  103 -> 87 [style=solid label="RIGHTSHIFT"]
  103 -> "103R71" [style=solid]
 "103R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  104 [label="State 104\n\l 49 vector: VVARIABLE '(' vector . ',' '[' ']' ')'\l 53       | vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l 60 vmdeclaration: VVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN vector\l"]
  104 -> 84 [style=solid label="ELEMMULT"]
  104 -> 86 [style=solid label="LEFTSHIFT"]
  104 -> 87 [style=solid label="RIGHTSHIFT"]
  104 -> 154 [style=solid label="','"]
  105 [label="State 105\n\l 59 vmdeclaration: VVARIABLE '(' expr . ')' ASSIGN expr\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l 87     | VVARIABLE '(' expr . ')'\l"]
  105 -> 93 [style=solid label="CONJUNCTION"]
  105 -> 94 [style=solid label="'<'"]
  105 -> 95 [style=solid label="'>'"]
  105 -> 96 [style=solid label="'+'"]
  105 -> 97 [style=solid label="'-'"]
  105 -> 98 [style=solid label="'/'"]
  105 -> 155 [style=solid label="')'"]
  106 [label="State 106\n\l 34 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'\l 35       | MVARIABLE . '(' '[' ']' ',' vector ')'\l 36       | MVARIABLE . '(' matrix ')'\l 37       | MVARIABLE .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']\l 50 vector: MVARIABLE . '(' expr ',' '[' ']' ')'\l 51       | MVARIABLE . '(' '[' ']' ',' expr ')'\l"]
  106 -> 156 [style=solid label="'('"]
  106 -> "106R37" [style=solid]
 "106R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  107 [label="State 107\n\l 38 matrix: matrix . '*' matrix\l 39       | matrix . ELEMMULT matrix\l 40       | matrix . '\\''\l 41       | matrix . RIGHTSHIFT\l 42       | matrix . LEFTSHIFT\l 44       | matrix . ELEMMULT vector\l 45       | matrix . ELEMMULT expr\l 72 assignment: MVARIABLE ASSIGN matrix .  [NEWLINE]\l"]
  107 -> 78 [style=solid label="ELEMMULT"]
  107 -> 79 [style=solid label="'\\''"]
  107 -> 80 [style=solid label="LEFTSHIFT"]
  107 -> 81 [style=solid label="RIGHTSHIFT"]
  107 -> 82 [style=solid label="'*'"]
  107 -> "107R72" [style=solid]
 "107R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  108 [label="State 108\n\l 43 matrix: vector . '\\''\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l"]
  108 -> 84 [style=solid label="ELEMMULT"]
  108 -> 85 [style=solid label="'\\''"]
  108 -> 86 [style=solid label="LEFTSHIFT"]
  108 -> 87 [style=solid label="RIGHTSHIFT"]
  109 [label="State 109\n\l 34 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'\l 35       | MVARIABLE . '(' '[' ']' ',' vector ')'\l 36       | MVARIABLE . '(' matrix ')'\l 37       | MVARIABLE .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']\l 50 vector: MVARIABLE . '(' expr ',' '[' ']' ')'\l 51       | MVARIABLE . '(' '[' ']' ',' expr ')'\l 88 expr: MVARIABLE . '(' expr ',' expr ')'\l"]
  109 -> 157 [style=solid label="'('"]
  109 -> "109R37" [style=solid]
 "109R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  110 [label="State 110\n\l 35 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'\l 51 vector: MVARIABLE '(' '[' . ']' ',' expr ')'\l 63 vmdeclaration: MVARIABLE '(' '[' . ']' ',' expr ')' ASSIGN vector\l 65              | MVARIABLE '(' '[' . ']' ',' vector ')' ASSIGN matrix\l"]
  110 -> 158 [style=solid label="']'"]
  111 [label="State 111\n\l 36 matrix: MVARIABLE '(' matrix . ')'\l 38       | matrix . '*' matrix\l 39       | matrix . ELEMMULT matrix\l 40       | matrix . '\\''\l 41       | matrix . RIGHTSHIFT\l 42       | matrix . LEFTSHIFT\l 44       | matrix . ELEMMULT vector\l 45       | matrix . ELEMMULT expr\l 66 vmdeclaration: MVARIABLE '(' matrix . ')' ASSIGN matrix\l"]
  111 -> 78 [style=solid label="ELEMMULT"]
  111 -> 79 [style=solid label="'\\''"]
  111 -> 80 [style=solid label="LEFTSHIFT"]
  111 -> 81 [style=solid label="RIGHTSHIFT"]
  111 -> 82 [style=solid label="'*'"]
  111 -> 159 [style=solid label="')'"]
  112 [label="State 112\n\l 34 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'\l 43       | vector . '\\''\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l 64 vmdeclaration: MVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN matrix\l"]
  112 -> 84 [style=solid label="ELEMMULT"]
  112 -> 85 [style=solid label="'\\''"]
  112 -> 86 [style=solid label="LEFTSHIFT"]
  112 -> 87 [style=solid label="RIGHTSHIFT"]
  112 -> 160 [style=solid label="','"]
  113 [label="State 113\n\l 50 vector: MVARIABLE '(' expr . ',' '[' ']' ')'\l 61 vmdeclaration: MVARIABLE '(' expr . ',' expr ')' ASSIGN expr\l 62              | MVARIABLE '(' expr . ',' '[' ']' ')' ASSIGN vector\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l 88     | MVARIABLE '(' expr . ',' expr ')'\l"]
  113 -> 93 [style=solid label="CONJUNCTION"]
  113 -> 161 [style=solid label="','"]
  113 -> 94 [style=solid label="'<'"]
  113 -> 95 [style=solid label="'>'"]
  113 -> 96 [style=solid label="'+'"]
  113 -> 97 [style=solid label="'-'"]
  113 -> 98 [style=solid label="'/'"]
  114 [label="State 114\n\l 29 callfunc_args: callfunc_args . ',' expr\l 30              | callfunc_args . ',' vector\l 31              | callfunc_args . ',' matrix\l 32 callfunction: FVARIABLE '[' callfunc_args . ']'\l"]
  114 -> 162 [style=solid label="','"]
  114 -> 163 [style=solid label="']'"]
  115 [label="State 115\n\l 28 callfunc_args: matrix .  [',', ']']\l 38 matrix: matrix . '*' matrix\l 39       | matrix . ELEMMULT matrix\l 40       | matrix . '\\''\l 41       | matrix . RIGHTSHIFT\l 42       | matrix . LEFTSHIFT\l 44       | matrix . ELEMMULT vector\l 45       | matrix . ELEMMULT expr\l"]
  115 -> 78 [style=solid label="ELEMMULT"]
  115 -> 79 [style=solid label="'\\''"]
  115 -> 80 [style=solid label="LEFTSHIFT"]
  115 -> 81 [style=solid label="RIGHTSHIFT"]
  115 -> 82 [style=solid label="'*'"]
  115 -> "115R28" [style=solid]
 "115R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  116 [label="State 116\n\l 27 callfunc_args: vector .  [',', ']']\l 43 matrix: vector . '\\''\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l"]
  116 -> 84 [style=solid label="ELEMMULT"]
  116 -> 85 [style=solid label="'\\''"]
  116 -> 86 [style=solid label="LEFTSHIFT"]
  116 -> 87 [style=solid label="RIGHTSHIFT"]
  116 -> "116R27" [style=solid]
 "116R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  117 [label="State 117\n\l 26 callfunc_args: expr .  [',', ']']\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  117 -> 93 [style=solid label="CONJUNCTION"]
  117 -> 94 [style=solid label="'<'"]
  117 -> 95 [style=solid label="'>'"]
  117 -> 96 [style=solid label="'+'"]
  117 -> 97 [style=solid label="'-'"]
  117 -> 98 [style=solid label="'/'"]
  117 -> "117R26" [style=solid]
 "117R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  118 [label="State 118\n\l 74 print: PRINT '(' VVARIABLE . ')'\l 87 expr: VVARIABLE . '(' expr ')'\l"]
  118 -> 121 [style=solid label="'('"]
  118 -> 164 [style=solid label="')'"]
  119 [label="State 119\n\l 75 print: PRINT '(' MVARIABLE . ')'\l 88 expr: MVARIABLE . '(' expr ',' expr ')'\l"]
  119 -> 122 [style=solid label="'('"]
  119 -> 165 [style=solid label="')'"]
  120 [label="State 120\n\l 73 print: PRINT '(' expr . ')'\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  120 -> 93 [style=solid label="CONJUNCTION"]
  120 -> 94 [style=solid label="'<'"]
  120 -> 95 [style=solid label="'>'"]
  120 -> 96 [style=solid label="'+'"]
  120 -> 97 [style=solid label="'-'"]
  120 -> 98 [style=solid label="'/'"]
  120 -> 166 [style=solid label="')'"]
  121 [label="State 121\n\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 87     | VVARIABLE '(' . expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  121 -> 4 [style=solid label="BOOL"]
  121 -> 5 [style=solid label="INTEGER"]
  121 -> 53 [style=solid label="VARIABLE"]
  121 -> 54 [style=solid label="VVARIABLE"]
  121 -> 55 [style=solid label="MVARIABLE"]
  121 -> 26 [style=solid label="'-'"]
  121 -> 27 [style=solid label="'!'"]
  121 -> 56 [style=solid label="'('"]
  121 -> 167 [style=dashed label="expr"]
  121 -> 45 [style=dashed label="const"]
  122 [label="State 122\n\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 88     | MVARIABLE '(' . expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  122 -> 4 [style=solid label="BOOL"]
  122 -> 5 [style=solid label="INTEGER"]
  122 -> 53 [style=solid label="VARIABLE"]
  122 -> 54 [style=solid label="VVARIABLE"]
  122 -> 55 [style=solid label="MVARIABLE"]
  122 -> 26 [style=solid label="'-'"]
  122 -> 27 [style=solid label="'!'"]
  122 -> 56 [style=solid label="'('"]
  122 -> 168 [style=dashed label="expr"]
  122 -> 45 [style=dashed label="const"]
  123 [label="State 123\n\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l 86     | '(' expr . ')'\l"]
  123 -> 93 [style=solid label="CONJUNCTION"]
  123 -> 94 [style=solid label="'<'"]
  123 -> 95 [style=solid label="'>'"]
  123 -> 96 [style=solid label="'+'"]
  123 -> 97 [style=solid label="'-'"]
  123 -> 98 [style=solid label="'/'"]
  123 -> 127 [style=solid label="')'"]
  124 [label="State 124\n\l 19 iff: IF expr NEWLINE . BEGIF stmts ENDIF\l"]
  124 -> 169 [style=solid label="BEGIF"]
  125 [label="State 125\n\l 20 forr: FORR declaration DOUBLEDOT . expr NEWLINE BEGFOR stmts ENDFOR\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  125 -> 4 [style=solid label="BOOL"]
  125 -> 5 [style=solid label="INTEGER"]
  125 -> 53 [style=solid label="VARIABLE"]
  125 -> 54 [style=solid label="VVARIABLE"]
  125 -> 55 [style=solid label="MVARIABLE"]
  125 -> 26 [style=solid label="'-'"]
  125 -> 27 [style=solid label="'!'"]
  125 -> 56 [style=solid label="'('"]
  125 -> 170 [style=dashed label="expr"]
  125 -> 45 [style=dashed label="const"]
  126 [label="State 126\n\l 18 stmt: '(' stmts ')' .\l"]
  126 -> "126R18" [style=solid]
 "126R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  127 [label="State 127\n\l 86 expr: '(' expr ')' .\l"]
  127 -> "127R86" [style=solid]
 "127R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l 22 return_func: return_func ',' . type VAR\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l"]
  128 -> 10 [style=solid label="CINT"]
  128 -> 11 [style=solid label="VINT"]
  128 -> 12 [style=solid label="MINT"]
  128 -> 13 [style=solid label="INT"]
  128 -> 14 [style=solid label="CVINT"]
  128 -> 15 [style=solid label="CMINT"]
  128 -> 16 [style=solid label="BOOLEAN"]
  128 -> 17 [style=solid label="CBOOLEAN"]
  128 -> 18 [style=solid label="VBOOLEAN"]
  128 -> 19 [style=solid label="MBOOLEAN"]
  128 -> 20 [style=solid label="CVBOOLEAN"]
  128 -> 21 [style=solid label="CMBOOLEAN"]
  128 -> 171 [style=dashed label="type"]
  129 [label="State 129\n\l 25 function: '[' return_func ']' . DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E\l"]
  129 -> 172 [style=solid label="DECLARE"]
  130 [label="State 130\n\l 21 return_func: type VAR .\l"]
  130 -> "130R21" [style=solid]
 "130R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  131 [label="State 131\n\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 49       | VVARIABLE '(' . vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 87     | VVARIABLE '(' . expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  131 -> 4 [style=solid label="BOOL"]
  131 -> 5 [style=solid label="INTEGER"]
  131 -> 53 [style=solid label="VARIABLE"]
  131 -> 65 [style=solid label="VVARIABLE"]
  131 -> 66 [style=solid label="MVARIABLE"]
  131 -> 26 [style=solid label="'-'"]
  131 -> 27 [style=solid label="'!'"]
  131 -> 56 [style=solid label="'('"]
  131 -> 67 [style=solid label="'{'"]
  131 -> 173 [style=dashed label="vector"]
  131 -> 167 [style=dashed label="expr"]
  131 -> 45 [style=dashed label="const"]
  132 [label="State 132\n\l 50 vector: MVARIABLE '(' . expr ',' '[' ']' ')'\l 51       | MVARIABLE '(' . '[' ']' ',' expr ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 88     | MVARIABLE '(' . expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  132 -> 4 [style=solid label="BOOL"]
  132 -> 5 [style=solid label="INTEGER"]
  132 -> 53 [style=solid label="VARIABLE"]
  132 -> 54 [style=solid label="VVARIABLE"]
  132 -> 55 [style=solid label="MVARIABLE"]
  132 -> 26 [style=solid label="'-'"]
  132 -> 27 [style=solid label="'!'"]
  132 -> 56 [style=solid label="'('"]
  132 -> 174 [style=solid label="'['"]
  132 -> 175 [style=dashed label="expr"]
  132 -> 45 [style=dashed label="const"]
  133 [label="State 133\n\l 47 listexprs: listexprs ',' . vector\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l"]
  133 -> 101 [style=solid label="VVARIABLE"]
  133 -> 102 [style=solid label="MVARIABLE"]
  133 -> 67 [style=solid label="'{'"]
  133 -> 176 [style=dashed label="vector"]
  134 [label="State 134\n\l 33 matrix: '{' listexprs '}' .\l"]
  134 -> "134R33" [style=solid]
 "134R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  135 [label="State 135\n\l 46 listexprs: vector ',' . vector\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l"]
  135 -> 101 [style=solid label="VVARIABLE"]
  135 -> 102 [style=solid label="MVARIABLE"]
  135 -> 67 [style=solid label="'{'"]
  135 -> 177 [style=dashed label="vector"]
  136 [label="State 136\n\l 58 exprs: exprs ',' . expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  136 -> 4 [style=solid label="BOOL"]
  136 -> 5 [style=solid label="INTEGER"]
  136 -> 53 [style=solid label="VARIABLE"]
  136 -> 54 [style=solid label="VVARIABLE"]
  136 -> 55 [style=solid label="MVARIABLE"]
  136 -> 26 [style=solid label="'-'"]
  136 -> 27 [style=solid label="'!'"]
  136 -> 56 [style=solid label="'('"]
  136 -> 178 [style=dashed label="expr"]
  136 -> 45 [style=dashed label="const"]
  137 [label="State 137\n\l 48 vector: '{' exprs '}' .\l"]
  137 -> "137R48" [style=solid]
 "137R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  138 [label="State 138\n\l 57 exprs: expr ',' . expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  138 -> 4 [style=solid label="BOOL"]
  138 -> 5 [style=solid label="INTEGER"]
  138 -> 53 [style=solid label="VARIABLE"]
  138 -> 54 [style=solid label="VVARIABLE"]
  138 -> 55 [style=solid label="MVARIABLE"]
  138 -> 26 [style=solid label="'-'"]
  138 -> 27 [style=solid label="'!'"]
  138 -> 56 [style=solid label="'('"]
  138 -> 179 [style=dashed label="expr"]
  138 -> 45 [style=dashed label="const"]
  139 [label="State 139\n\l 38 matrix: matrix . '*' matrix\l 39       | matrix . ELEMMULT matrix\l 39       | matrix ELEMMULT matrix .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']\l 40       | matrix . '\\''\l 41       | matrix . RIGHTSHIFT\l 42       | matrix . LEFTSHIFT\l 44       | matrix . ELEMMULT vector\l 45       | matrix . ELEMMULT expr\l"]
  139 -> 78 [style=solid label="ELEMMULT"]
  139 -> 79 [style=solid label="'\\''"]
  139 -> 80 [style=solid label="LEFTSHIFT"]
  139 -> 81 [style=solid label="RIGHTSHIFT"]
  139 -> 82 [style=solid label="'*'"]
  139 -> "139R39d" [label="[ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*']", style=solid]
 "139R39d" [label="R39", fillcolor=5, shape=diamond, style=filled]
  139 -> "139R39" [style=solid]
 "139R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  140 [label="State 140\n\l 43 matrix: vector . '\\''\l 44       | matrix ELEMMULT vector .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l"]
  140 -> 84 [style=solid label="ELEMMULT"]
  140 -> 85 [style=solid label="'\\''"]
  140 -> 86 [style=solid label="LEFTSHIFT"]
  140 -> 87 [style=solid label="RIGHTSHIFT"]
  140 -> "140R44d" [label="[ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT]", style=solid]
 "140R44d" [label="R44", fillcolor=5, shape=diamond, style=filled]
  140 -> "140R44" [style=solid]
 "140R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  141 [label="State 141\n\l 45 matrix: matrix ELEMMULT expr .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  141 -> 93 [style=solid label="CONJUNCTION"]
  141 -> 94 [style=solid label="'<'"]
  141 -> 95 [style=solid label="'>'"]
  141 -> 96 [style=solid label="'+'"]
  141 -> 97 [style=solid label="'-'"]
  141 -> 98 [style=solid label="'/'"]
  141 -> "141R45" [style=solid]
 "141R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 38 matrix: matrix . '*' matrix\l 38       | matrix '*' matrix .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']\l 39       | matrix . ELEMMULT matrix\l 40       | matrix . '\\''\l 41       | matrix . RIGHTSHIFT\l 42       | matrix . LEFTSHIFT\l 44       | matrix . ELEMMULT vector\l 45       | matrix . ELEMMULT expr\l"]
  142 -> 78 [style=solid label="ELEMMULT"]
  142 -> 79 [style=solid label="'\\''"]
  142 -> 80 [style=solid label="LEFTSHIFT"]
  142 -> 81 [style=solid label="RIGHTSHIFT"]
  142 -> "142R38d" [label="[ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT]", style=solid]
 "142R38d" [label="R38", fillcolor=5, shape=diamond, style=filled]
  142 -> "142R38" [style=solid]
 "142R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  143 [label="State 143\n\l 53 vector: vector . ELEMMULT vector\l 53       | vector ELEMMULT vector .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l"]
  143 -> 84 [style=solid label="ELEMMULT"]
  143 -> 86 [style=solid label="LEFTSHIFT"]
  143 -> 87 [style=solid label="RIGHTSHIFT"]
  143 -> "143R53d" [label="[ELEMMULT, LEFTSHIFT, RIGHTSHIFT]", style=solid]
 "143R53d" [label="R53", fillcolor=5, shape=diamond, style=filled]
  143 -> "143R53" [style=solid]
 "143R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  144 [label="State 144\n\l 56 vector: vector ELEMMULT expr .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  144 -> 93 [style=solid label="CONJUNCTION"]
  144 -> 94 [style=solid label="'<'"]
  144 -> 95 [style=solid label="'>'"]
  144 -> 96 [style=solid label="'+'"]
  144 -> 97 [style=solid label="'-'"]
  144 -> 98 [style=solid label="'/'"]
  144 -> "144R56" [style=solid]
 "144R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  145 [label="State 145\n\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l 85     | expr CONJUNCTION expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']\l"]
  145 -> 93 [style=solid label="CONJUNCTION"]
  145 -> 94 [style=solid label="'<'"]
  145 -> 95 [style=solid label="'>'"]
  145 -> 96 [style=solid label="'+'"]
  145 -> 97 [style=solid label="'-'"]
  145 -> 98 [style=solid label="'/'"]
  145 -> "145R85d" [label="[CONJUNCTION, '<', '>', '+', '-', '/']", style=solid]
 "145R85d" [label="R85", fillcolor=5, shape=diamond, style=filled]
  145 -> "145R85" [style=solid]
 "145R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  146 [label="State 146\n\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 82     | expr '<' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  146 -> 93 [style=solid label="CONJUNCTION"]
  146 -> 96 [style=solid label="'+'"]
  146 -> 97 [style=solid label="'-'"]
  146 -> 98 [style=solid label="'/'"]
  146 -> "146R82d" [label="[CONJUNCTION]", style=solid]
 "146R82d" [label="R82", fillcolor=5, shape=diamond, style=filled]
  146 -> "146R82" [style=solid]
 "146R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  147 [label="State 147\n\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 83     | expr '>' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']\l 85     | expr . CONJUNCTION expr\l"]
  147 -> 93 [style=solid label="CONJUNCTION"]
  147 -> 96 [style=solid label="'+'"]
  147 -> 97 [style=solid label="'-'"]
  147 -> 98 [style=solid label="'/'"]
  147 -> "147R83d" [label="[CONJUNCTION]", style=solid]
 "147R83d" [label="R83", fillcolor=5, shape=diamond, style=filled]
  147 -> "147R83" [style=solid]
 "147R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  148 [label="State 148\n\l 79 expr: expr . '+' expr\l 79     | expr '+' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  148 -> 93 [style=solid label="CONJUNCTION"]
  148 -> 98 [style=solid label="'/'"]
  148 -> "148R79d" [label="[CONJUNCTION]", style=solid]
 "148R79d" [label="R79", fillcolor=5, shape=diamond, style=filled]
  148 -> "148R79" [style=solid]
 "148R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  149 [label="State 149\n\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 80     | expr '-' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  149 -> 93 [style=solid label="CONJUNCTION"]
  149 -> 98 [style=solid label="'/'"]
  149 -> "149R80d" [label="[CONJUNCTION]", style=solid]
 "149R80d" [label="R80", fillcolor=5, shape=diamond, style=filled]
  149 -> "149R80" [style=solid]
 "149R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  150 [label="State 150\n\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 81     | expr '/' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  150 -> 93 [style=solid label="CONJUNCTION"]
  150 -> "150R81d" [label="[CONJUNCTION]", style=solid]
 "150R81d" [label="R81", fillcolor=5, shape=diamond, style=filled]
  150 -> "150R81" [style=solid]
 "150R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  151 [label="State 151\n\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 67 declaration: type VAR DECLARE . expr\l 68            | type VAR DECLARE . vector\l 69            | type VAR DECLARE . matrix\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  151 -> 4 [style=solid label="BOOL"]
  151 -> 5 [style=solid label="INTEGER"]
  151 -> 53 [style=solid label="VARIABLE"]
  151 -> 65 [style=solid label="VVARIABLE"]
  151 -> 109 [style=solid label="MVARIABLE"]
  151 -> 26 [style=solid label="'-'"]
  151 -> 27 [style=solid label="'!'"]
  151 -> 56 [style=solid label="'('"]
  151 -> 30 [style=solid label="'{'"]
  151 -> 180 [style=dashed label="matrix"]
  151 -> 181 [style=dashed label="vector"]
  151 -> 182 [style=dashed label="expr"]
  151 -> 45 [style=dashed label="const"]
  152 [label="State 152\n\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 49       | VVARIABLE '(' . vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l"]
  152 -> 101 [style=solid label="VVARIABLE"]
  152 -> 102 [style=solid label="MVARIABLE"]
  152 -> 67 [style=solid label="'{'"]
  152 -> 173 [style=dashed label="vector"]
  153 [label="State 153\n\l 50 vector: MVARIABLE '(' . expr ',' '[' ']' ')'\l 51       | MVARIABLE '(' . '[' ']' ',' expr ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  153 -> 4 [style=solid label="BOOL"]
  153 -> 5 [style=solid label="INTEGER"]
  153 -> 53 [style=solid label="VARIABLE"]
  153 -> 54 [style=solid label="VVARIABLE"]
  153 -> 55 [style=solid label="MVARIABLE"]
  153 -> 26 [style=solid label="'-'"]
  153 -> 27 [style=solid label="'!'"]
  153 -> 56 [style=solid label="'('"]
  153 -> 174 [style=solid label="'['"]
  153 -> 183 [style=dashed label="expr"]
  153 -> 45 [style=dashed label="const"]
  154 [label="State 154\n\l 49 vector: VVARIABLE '(' vector ',' . '[' ']' ')'\l 60 vmdeclaration: VVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN vector\l"]
  154 -> 184 [style=solid label="'['"]
  155 [label="State 155\n\l 59 vmdeclaration: VVARIABLE '(' expr ')' . ASSIGN expr\l 87 expr: VVARIABLE '(' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']\l"]
  155 -> 185 [style=solid label="ASSIGN"]
  155 -> "155R87" [style=solid]
 "155R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  156 [label="State 156\n\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 34       | MVARIABLE '(' . vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 35       | MVARIABLE '(' . '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 36       | MVARIABLE '(' . matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 50       | MVARIABLE '(' . expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 51       | MVARIABLE '(' . '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  156 -> 4 [style=solid label="BOOL"]
  156 -> 5 [style=solid label="INTEGER"]
  156 -> 53 [style=solid label="VARIABLE"]
  156 -> 65 [style=solid label="VVARIABLE"]
  156 -> 109 [style=solid label="MVARIABLE"]
  156 -> 26 [style=solid label="'-'"]
  156 -> 27 [style=solid label="'!'"]
  156 -> 56 [style=solid label="'('"]
  156 -> 186 [style=solid label="'['"]
  156 -> 30 [style=solid label="'{'"]
  156 -> 187 [style=dashed label="matrix"]
  156 -> 188 [style=dashed label="vector"]
  156 -> 183 [style=dashed label="expr"]
  156 -> 45 [style=dashed label="const"]
  157 [label="State 157\n\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 34       | MVARIABLE '(' . vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 35       | MVARIABLE '(' . '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 36       | MVARIABLE '(' . matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 50       | MVARIABLE '(' . expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 51       | MVARIABLE '(' . '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 88     | MVARIABLE '(' . expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  157 -> 4 [style=solid label="BOOL"]
  157 -> 5 [style=solid label="INTEGER"]
  157 -> 53 [style=solid label="VARIABLE"]
  157 -> 65 [style=solid label="VVARIABLE"]
  157 -> 109 [style=solid label="MVARIABLE"]
  157 -> 26 [style=solid label="'-'"]
  157 -> 27 [style=solid label="'!'"]
  157 -> 56 [style=solid label="'('"]
  157 -> 186 [style=solid label="'['"]
  157 -> 30 [style=solid label="'{'"]
  157 -> 187 [style=dashed label="matrix"]
  157 -> 188 [style=dashed label="vector"]
  157 -> 175 [style=dashed label="expr"]
  157 -> 45 [style=dashed label="const"]
  158 [label="State 158\n\l 35 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'\l 51 vector: MVARIABLE '(' '[' ']' . ',' expr ')'\l 63 vmdeclaration: MVARIABLE '(' '[' ']' . ',' expr ')' ASSIGN vector\l 65              | MVARIABLE '(' '[' ']' . ',' vector ')' ASSIGN matrix\l"]
  158 -> 189 [style=solid label="','"]
  159 [label="State 159\n\l 36 matrix: MVARIABLE '(' matrix ')' .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*']\l 66 vmdeclaration: MVARIABLE '(' matrix ')' . ASSIGN matrix\l"]
  159 -> 190 [style=solid label="ASSIGN"]
  159 -> "159R36" [style=solid]
 "159R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  160 [label="State 160\n\l 34 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'\l 64 vmdeclaration: MVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN matrix\l"]
  160 -> 191 [style=solid label="'['"]
  161 [label="State 161\n\l 50 vector: MVARIABLE '(' expr ',' . '[' ']' ')'\l 61 vmdeclaration: MVARIABLE '(' expr ',' . expr ')' ASSIGN expr\l 62              | MVARIABLE '(' expr ',' . '[' ']' ')' ASSIGN vector\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 88     | MVARIABLE '(' expr ',' . expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  161 -> 4 [style=solid label="BOOL"]
  161 -> 5 [style=solid label="INTEGER"]
  161 -> 53 [style=solid label="VARIABLE"]
  161 -> 54 [style=solid label="VVARIABLE"]
  161 -> 55 [style=solid label="MVARIABLE"]
  161 -> 26 [style=solid label="'-'"]
  161 -> 27 [style=solid label="'!'"]
  161 -> 56 [style=solid label="'('"]
  161 -> 192 [style=solid label="'['"]
  161 -> 193 [style=dashed label="expr"]
  161 -> 45 [style=dashed label="const"]
  162 [label="State 162\n\l 29 callfunc_args: callfunc_args ',' . expr\l 30              | callfunc_args ',' . vector\l 31              | callfunc_args ',' . matrix\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  162 -> 4 [style=solid label="BOOL"]
  162 -> 5 [style=solid label="INTEGER"]
  162 -> 53 [style=solid label="VARIABLE"]
  162 -> 65 [style=solid label="VVARIABLE"]
  162 -> 109 [style=solid label="MVARIABLE"]
  162 -> 26 [style=solid label="'-'"]
  162 -> 27 [style=solid label="'!'"]
  162 -> 56 [style=solid label="'('"]
  162 -> 30 [style=solid label="'{'"]
  162 -> 194 [style=dashed label="matrix"]
  162 -> 195 [style=dashed label="vector"]
  162 -> 196 [style=dashed label="expr"]
  162 -> 45 [style=dashed label="const"]
  163 [label="State 163\n\l 32 callfunction: FVARIABLE '[' callfunc_args ']' .\l"]
  163 -> "163R32" [style=solid]
 "163R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  164 [label="State 164\n\l 74 print: PRINT '(' VVARIABLE ')' .\l"]
  164 -> "164R74" [style=solid]
 "164R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  165 [label="State 165\n\l 75 print: PRINT '(' MVARIABLE ')' .\l"]
  165 -> "165R75" [style=solid]
 "165R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  166 [label="State 166\n\l 73 print: PRINT '(' expr ')' .\l"]
  166 -> "166R73" [style=solid]
 "166R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  167 [label="State 167\n\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l 87     | VVARIABLE '(' expr . ')'\l"]
  167 -> 93 [style=solid label="CONJUNCTION"]
  167 -> 94 [style=solid label="'<'"]
  167 -> 95 [style=solid label="'>'"]
  167 -> 96 [style=solid label="'+'"]
  167 -> 97 [style=solid label="'-'"]
  167 -> 98 [style=solid label="'/'"]
  167 -> 197 [style=solid label="')'"]
  168 [label="State 168\n\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l 88     | MVARIABLE '(' expr . ',' expr ')'\l"]
  168 -> 93 [style=solid label="CONJUNCTION"]
  168 -> 198 [style=solid label="','"]
  168 -> 94 [style=solid label="'<'"]
  168 -> 95 [style=solid label="'>'"]
  168 -> 96 [style=solid label="'+'"]
  168 -> 97 [style=solid label="'-'"]
  168 -> 98 [style=solid label="'/'"]
  169 [label="State 169\n\l  4 stmts: . stmt\l  5      | . stmts stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . function NEWLINE\l 17     | . callfunction NEWLINE\l 18     | . '(' stmts ')'\l 19 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 19    | IF expr NEWLINE BEGIF . stmts ENDIF\l 20 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR\l 25 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E\l 32 callfunction: . FVARIABLE '[' callfunc_args ']'\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 59 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 60              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 61              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 62              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 63              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 64              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 65              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 66              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 67 declaration: . type VAR DECLARE expr\l 68            | . type VAR DECLARE vector\l 69            | . type VAR DECLARE matrix\l 70 assignment: . VARIABLE ASSIGN expr\l 71           | . VVARIABLE ASSIGN vector\l 72           | . MVARIABLE ASSIGN matrix\l 73 print: . PRINT '(' expr ')'\l 74      | . PRINT '(' VVARIABLE ')'\l 75      | . PRINT '(' MVARIABLE ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l101 const: . INTEGER\l102      | . BOOL\l"]
  169 -> 4 [style=solid label="BOOL"]
  169 -> 5 [style=solid label="INTEGER"]
  169 -> 6 [style=solid label="VARIABLE"]
  169 -> 7 [style=solid label="VVARIABLE"]
  169 -> 8 [style=solid label="MVARIABLE"]
  169 -> 9 [style=solid label="FVARIABLE"]
  169 -> 10 [style=solid label="CINT"]
  169 -> 11 [style=solid label="VINT"]
  169 -> 12 [style=solid label="MINT"]
  169 -> 13 [style=solid label="INT"]
  169 -> 14 [style=solid label="CVINT"]
  169 -> 15 [style=solid label="CMINT"]
  169 -> 16 [style=solid label="BOOLEAN"]
  169 -> 17 [style=solid label="CBOOLEAN"]
  169 -> 18 [style=solid label="VBOOLEAN"]
  169 -> 19 [style=solid label="MBOOLEAN"]
  169 -> 20 [style=solid label="CVBOOLEAN"]
  169 -> 21 [style=solid label="CMBOOLEAN"]
  169 -> 22 [style=solid label="NEWLINE"]
  169 -> 23 [style=solid label="PRINT"]
  169 -> 24 [style=solid label="IF"]
  169 -> 25 [style=solid label="FORR"]
  169 -> 26 [style=solid label="'-'"]
  169 -> 27 [style=solid label="'!'"]
  169 -> 28 [style=solid label="'('"]
  169 -> 29 [style=solid label="'['"]
  169 -> 30 [style=solid label="'{'"]
  169 -> 199 [style=dashed label="stmts"]
  169 -> 32 [style=dashed label="stmt"]
  169 -> 33 [style=dashed label="iff"]
  169 -> 34 [style=dashed label="forr"]
  169 -> 35 [style=dashed label="function"]
  169 -> 36 [style=dashed label="callfunction"]
  169 -> 37 [style=dashed label="matrix"]
  169 -> 38 [style=dashed label="vector"]
  169 -> 39 [style=dashed label="vmdeclaration"]
  169 -> 40 [style=dashed label="declaration"]
  169 -> 41 [style=dashed label="assignment"]
  169 -> 42 [style=dashed label="print"]
  169 -> 43 [style=dashed label="expr"]
  169 -> 44 [style=dashed label="type"]
  169 -> 45 [style=dashed label="const"]
  170 [label="State 170\n\l 20 forr: FORR declaration DOUBLEDOT expr . NEWLINE BEGFOR stmts ENDFOR\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  170 -> 200 [style=solid label="NEWLINE"]
  170 -> 93 [style=solid label="CONJUNCTION"]
  170 -> 94 [style=solid label="'<'"]
  170 -> 95 [style=solid label="'>'"]
  170 -> 96 [style=solid label="'+'"]
  170 -> 97 [style=solid label="'-'"]
  170 -> 98 [style=solid label="'/'"]
  171 [label="State 171\n\l 22 return_func: return_func ',' type . VAR\l"]
  171 -> 201 [style=solid label="VAR"]
  172 [label="State 172\n\l 25 function: '[' return_func ']' DECLARE . FUNC VAR '(' args_func ')' B NEWLINE stmts E\l"]
  172 -> 202 [style=solid label="FUNC"]
  173 [label="State 173\n\l 49 vector: VVARIABLE '(' vector . ',' '[' ']' ')'\l 53       | vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l"]
  173 -> 84 [style=solid label="ELEMMULT"]
  173 -> 86 [style=solid label="LEFTSHIFT"]
  173 -> 87 [style=solid label="RIGHTSHIFT"]
  173 -> 203 [style=solid label="','"]
  174 [label="State 174\n\l 51 vector: MVARIABLE '(' '[' . ']' ',' expr ')'\l"]
  174 -> 204 [style=solid label="']'"]
  175 [label="State 175\n\l 50 vector: MVARIABLE '(' expr . ',' '[' ']' ')'\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l 88     | MVARIABLE '(' expr . ',' expr ')'\l"]
  175 -> 93 [style=solid label="CONJUNCTION"]
  175 -> 205 [style=solid label="','"]
  175 -> 94 [style=solid label="'<'"]
  175 -> 95 [style=solid label="'>'"]
  175 -> 96 [style=solid label="'+'"]
  175 -> 97 [style=solid label="'-'"]
  175 -> 98 [style=solid label="'/'"]
  176 [label="State 176\n\l 47 listexprs: listexprs ',' vector .  [',', '}']\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l"]
  176 -> 84 [style=solid label="ELEMMULT"]
  176 -> 86 [style=solid label="LEFTSHIFT"]
  176 -> 87 [style=solid label="RIGHTSHIFT"]
  176 -> "176R47" [style=solid]
 "176R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  177 [label="State 177\n\l 46 listexprs: vector ',' vector .  [',', '}']\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l"]
  177 -> 84 [style=solid label="ELEMMULT"]
  177 -> 86 [style=solid label="LEFTSHIFT"]
  177 -> 87 [style=solid label="RIGHTSHIFT"]
  177 -> "177R46" [style=solid]
 "177R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  178 [label="State 178\n\l 58 exprs: exprs ',' expr .  [',', '}']\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  178 -> 93 [style=solid label="CONJUNCTION"]
  178 -> 94 [style=solid label="'<'"]
  178 -> 95 [style=solid label="'>'"]
  178 -> 96 [style=solid label="'+'"]
  178 -> 97 [style=solid label="'-'"]
  178 -> 98 [style=solid label="'/'"]
  178 -> "178R58" [style=solid]
 "178R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  179 [label="State 179\n\l 57 exprs: expr ',' expr .  [',', '}']\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  179 -> 93 [style=solid label="CONJUNCTION"]
  179 -> 94 [style=solid label="'<'"]
  179 -> 95 [style=solid label="'>'"]
  179 -> 96 [style=solid label="'+'"]
  179 -> 97 [style=solid label="'-'"]
  179 -> 98 [style=solid label="'/'"]
  179 -> "179R57" [style=solid]
 "179R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  180 [label="State 180\n\l 38 matrix: matrix . '*' matrix\l 39       | matrix . ELEMMULT matrix\l 40       | matrix . '\\''\l 41       | matrix . RIGHTSHIFT\l 42       | matrix . LEFTSHIFT\l 44       | matrix . ELEMMULT vector\l 45       | matrix . ELEMMULT expr\l 69 declaration: type VAR DECLARE matrix .  [NEWLINE, DOUBLEDOT]\l"]
  180 -> 78 [style=solid label="ELEMMULT"]
  180 -> 79 [style=solid label="'\\''"]
  180 -> 80 [style=solid label="LEFTSHIFT"]
  180 -> 81 [style=solid label="RIGHTSHIFT"]
  180 -> 82 [style=solid label="'*'"]
  180 -> "180R69" [style=solid]
 "180R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  181 [label="State 181\n\l 43 matrix: vector . '\\''\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l 68 declaration: type VAR DECLARE vector .  [NEWLINE, DOUBLEDOT]\l"]
  181 -> 84 [style=solid label="ELEMMULT"]
  181 -> 85 [style=solid label="'\\''"]
  181 -> 86 [style=solid label="LEFTSHIFT"]
  181 -> 87 [style=solid label="RIGHTSHIFT"]
  181 -> "181R68" [style=solid]
 "181R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  182 [label="State 182\n\l 67 declaration: type VAR DECLARE expr .  [NEWLINE, DOUBLEDOT]\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  182 -> 93 [style=solid label="CONJUNCTION"]
  182 -> 94 [style=solid label="'<'"]
  182 -> 95 [style=solid label="'>'"]
  182 -> 96 [style=solid label="'+'"]
  182 -> 97 [style=solid label="'-'"]
  182 -> 98 [style=solid label="'/'"]
  182 -> "182R67" [style=solid]
 "182R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  183 [label="State 183\n\l 50 vector: MVARIABLE '(' expr . ',' '[' ']' ')'\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  183 -> 93 [style=solid label="CONJUNCTION"]
  183 -> 206 [style=solid label="','"]
  183 -> 94 [style=solid label="'<'"]
  183 -> 95 [style=solid label="'>'"]
  183 -> 96 [style=solid label="'+'"]
  183 -> 97 [style=solid label="'-'"]
  183 -> 98 [style=solid label="'/'"]
  184 [label="State 184\n\l 49 vector: VVARIABLE '(' vector ',' '[' . ']' ')'\l 60 vmdeclaration: VVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN vector\l"]
  184 -> 207 [style=solid label="']'"]
  185 [label="State 185\n\l 59 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN . expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  185 -> 4 [style=solid label="BOOL"]
  185 -> 5 [style=solid label="INTEGER"]
  185 -> 53 [style=solid label="VARIABLE"]
  185 -> 54 [style=solid label="VVARIABLE"]
  185 -> 55 [style=solid label="MVARIABLE"]
  185 -> 26 [style=solid label="'-'"]
  185 -> 27 [style=solid label="'!'"]
  185 -> 56 [style=solid label="'('"]
  185 -> 208 [style=dashed label="expr"]
  185 -> 45 [style=dashed label="const"]
  186 [label="State 186\n\l 35 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'\l 51 vector: MVARIABLE '(' '[' . ']' ',' expr ')'\l"]
  186 -> 209 [style=solid label="']'"]
  187 [label="State 187\n\l 36 matrix: MVARIABLE '(' matrix . ')'\l 38       | matrix . '*' matrix\l 39       | matrix . ELEMMULT matrix\l 40       | matrix . '\\''\l 41       | matrix . RIGHTSHIFT\l 42       | matrix . LEFTSHIFT\l 44       | matrix . ELEMMULT vector\l 45       | matrix . ELEMMULT expr\l"]
  187 -> 78 [style=solid label="ELEMMULT"]
  187 -> 79 [style=solid label="'\\''"]
  187 -> 80 [style=solid label="LEFTSHIFT"]
  187 -> 81 [style=solid label="RIGHTSHIFT"]
  187 -> 82 [style=solid label="'*'"]
  187 -> 210 [style=solid label="')'"]
  188 [label="State 188\n\l 34 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'\l 43       | vector . '\\''\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l"]
  188 -> 84 [style=solid label="ELEMMULT"]
  188 -> 85 [style=solid label="'\\''"]
  188 -> 86 [style=solid label="LEFTSHIFT"]
  188 -> 87 [style=solid label="RIGHTSHIFT"]
  188 -> 211 [style=solid label="','"]
  189 [label="State 189\n\l 35 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 51       | MVARIABLE '(' '[' ']' ',' . expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 63 vmdeclaration: MVARIABLE '(' '[' ']' ',' . expr ')' ASSIGN vector\l 65              | MVARIABLE '(' '[' ']' ',' . vector ')' ASSIGN matrix\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  189 -> 4 [style=solid label="BOOL"]
  189 -> 5 [style=solid label="INTEGER"]
  189 -> 53 [style=solid label="VARIABLE"]
  189 -> 65 [style=solid label="VVARIABLE"]
  189 -> 66 [style=solid label="MVARIABLE"]
  189 -> 26 [style=solid label="'-'"]
  189 -> 27 [style=solid label="'!'"]
  189 -> 56 [style=solid label="'('"]
  189 -> 67 [style=solid label="'{'"]
  189 -> 212 [style=dashed label="vector"]
  189 -> 213 [style=dashed label="expr"]
  189 -> 45 [style=dashed label="const"]
  190 [label="State 190\n\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 66 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN . matrix\l"]
  190 -> 101 [style=solid label="VVARIABLE"]
  190 -> 106 [style=solid label="MVARIABLE"]
  190 -> 30 [style=solid label="'{'"]
  190 -> 214 [style=dashed label="matrix"]
  190 -> 108 [style=dashed label="vector"]
  191 [label="State 191\n\l 34 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'\l 64 vmdeclaration: MVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN matrix\l"]
  191 -> 215 [style=solid label="']'"]
  192 [label="State 192\n\l 50 vector: MVARIABLE '(' expr ',' '[' . ']' ')'\l 62 vmdeclaration: MVARIABLE '(' expr ',' '[' . ']' ')' ASSIGN vector\l"]
  192 -> 216 [style=solid label="']'"]
  193 [label="State 193\n\l 61 vmdeclaration: MVARIABLE '(' expr ',' expr . ')' ASSIGN expr\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l 88     | MVARIABLE '(' expr ',' expr . ')'\l"]
  193 -> 93 [style=solid label="CONJUNCTION"]
  193 -> 94 [style=solid label="'<'"]
  193 -> 95 [style=solid label="'>'"]
  193 -> 96 [style=solid label="'+'"]
  193 -> 97 [style=solid label="'-'"]
  193 -> 98 [style=solid label="'/'"]
  193 -> 217 [style=solid label="')'"]
  194 [label="State 194\n\l 31 callfunc_args: callfunc_args ',' matrix .  [',', ']']\l 38 matrix: matrix . '*' matrix\l 39       | matrix . ELEMMULT matrix\l 40       | matrix . '\\''\l 41       | matrix . RIGHTSHIFT\l 42       | matrix . LEFTSHIFT\l 44       | matrix . ELEMMULT vector\l 45       | matrix . ELEMMULT expr\l"]
  194 -> 78 [style=solid label="ELEMMULT"]
  194 -> 79 [style=solid label="'\\''"]
  194 -> 80 [style=solid label="LEFTSHIFT"]
  194 -> 81 [style=solid label="RIGHTSHIFT"]
  194 -> 82 [style=solid label="'*'"]
  194 -> "194R31" [style=solid]
 "194R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  195 [label="State 195\n\l 30 callfunc_args: callfunc_args ',' vector .  [',', ']']\l 43 matrix: vector . '\\''\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l"]
  195 -> 84 [style=solid label="ELEMMULT"]
  195 -> 85 [style=solid label="'\\''"]
  195 -> 86 [style=solid label="LEFTSHIFT"]
  195 -> 87 [style=solid label="RIGHTSHIFT"]
  195 -> "195R30" [style=solid]
 "195R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  196 [label="State 196\n\l 29 callfunc_args: callfunc_args ',' expr .  [',', ']']\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  196 -> 93 [style=solid label="CONJUNCTION"]
  196 -> 94 [style=solid label="'<'"]
  196 -> 95 [style=solid label="'>'"]
  196 -> 96 [style=solid label="'+'"]
  196 -> 97 [style=solid label="'-'"]
  196 -> 98 [style=solid label="'/'"]
  196 -> "196R29" [style=solid]
 "196R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  197 [label="State 197\n\l 87 expr: VVARIABLE '(' expr ')' .\l"]
  197 -> "197R87" [style=solid]
 "197R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  198 [label="State 198\n\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 88     | MVARIABLE '(' expr ',' . expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  198 -> 4 [style=solid label="BOOL"]
  198 -> 5 [style=solid label="INTEGER"]
  198 -> 53 [style=solid label="VARIABLE"]
  198 -> 54 [style=solid label="VVARIABLE"]
  198 -> 55 [style=solid label="MVARIABLE"]
  198 -> 26 [style=solid label="'-'"]
  198 -> 27 [style=solid label="'!'"]
  198 -> 56 [style=solid label="'('"]
  198 -> 218 [style=dashed label="expr"]
  198 -> 45 [style=dashed label="const"]
  199 [label="State 199\n\l  5 stmts: stmts . stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . function NEWLINE\l 17     | . callfunction NEWLINE\l 18     | . '(' stmts ')'\l 19 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 19    | IF expr NEWLINE BEGIF stmts . ENDIF\l 20 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR\l 25 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E\l 32 callfunction: . FVARIABLE '[' callfunc_args ']'\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 59 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 60              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 61              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 62              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 63              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 64              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 65              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 66              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 67 declaration: . type VAR DECLARE expr\l 68            | . type VAR DECLARE vector\l 69            | . type VAR DECLARE matrix\l 70 assignment: . VARIABLE ASSIGN expr\l 71           | . VVARIABLE ASSIGN vector\l 72           | . MVARIABLE ASSIGN matrix\l 73 print: . PRINT '(' expr ')'\l 74      | . PRINT '(' VVARIABLE ')'\l 75      | . PRINT '(' MVARIABLE ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l101 const: . INTEGER\l102      | . BOOL\l"]
  199 -> 4 [style=solid label="BOOL"]
  199 -> 5 [style=solid label="INTEGER"]
  199 -> 6 [style=solid label="VARIABLE"]
  199 -> 7 [style=solid label="VVARIABLE"]
  199 -> 8 [style=solid label="MVARIABLE"]
  199 -> 9 [style=solid label="FVARIABLE"]
  199 -> 10 [style=solid label="CINT"]
  199 -> 11 [style=solid label="VINT"]
  199 -> 12 [style=solid label="MINT"]
  199 -> 13 [style=solid label="INT"]
  199 -> 14 [style=solid label="CVINT"]
  199 -> 15 [style=solid label="CMINT"]
  199 -> 16 [style=solid label="BOOLEAN"]
  199 -> 17 [style=solid label="CBOOLEAN"]
  199 -> 18 [style=solid label="VBOOLEAN"]
  199 -> 19 [style=solid label="MBOOLEAN"]
  199 -> 20 [style=solid label="CVBOOLEAN"]
  199 -> 21 [style=solid label="CMBOOLEAN"]
  199 -> 22 [style=solid label="NEWLINE"]
  199 -> 23 [style=solid label="PRINT"]
  199 -> 24 [style=solid label="IF"]
  199 -> 25 [style=solid label="FORR"]
  199 -> 219 [style=solid label="ENDIF"]
  199 -> 26 [style=solid label="'-'"]
  199 -> 27 [style=solid label="'!'"]
  199 -> 28 [style=solid label="'('"]
  199 -> 29 [style=solid label="'['"]
  199 -> 30 [style=solid label="'{'"]
  199 -> 72 [style=dashed label="stmt"]
  199 -> 33 [style=dashed label="iff"]
  199 -> 34 [style=dashed label="forr"]
  199 -> 35 [style=dashed label="function"]
  199 -> 36 [style=dashed label="callfunction"]
  199 -> 37 [style=dashed label="matrix"]
  199 -> 38 [style=dashed label="vector"]
  199 -> 39 [style=dashed label="vmdeclaration"]
  199 -> 40 [style=dashed label="declaration"]
  199 -> 41 [style=dashed label="assignment"]
  199 -> 42 [style=dashed label="print"]
  199 -> 43 [style=dashed label="expr"]
  199 -> 44 [style=dashed label="type"]
  199 -> 45 [style=dashed label="const"]
  200 [label="State 200\n\l 20 forr: FORR declaration DOUBLEDOT expr NEWLINE . BEGFOR stmts ENDFOR\l"]
  200 -> 220 [style=solid label="BEGFOR"]
  201 [label="State 201\n\l 22 return_func: return_func ',' type VAR .\l"]
  201 -> "201R22" [style=solid]
 "201R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  202 [label="State 202\n\l 25 function: '[' return_func ']' DECLARE FUNC . VAR '(' args_func ')' B NEWLINE stmts E\l"]
  202 -> 221 [style=solid label="VAR"]
  203 [label="State 203\n\l 49 vector: VVARIABLE '(' vector ',' . '[' ']' ')'\l"]
  203 -> 222 [style=solid label="'['"]
  204 [label="State 204\n\l 51 vector: MVARIABLE '(' '[' ']' . ',' expr ')'\l"]
  204 -> 223 [style=solid label="','"]
  205 [label="State 205\n\l 50 vector: MVARIABLE '(' expr ',' . '[' ']' ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 88     | MVARIABLE '(' expr ',' . expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  205 -> 4 [style=solid label="BOOL"]
  205 -> 5 [style=solid label="INTEGER"]
  205 -> 53 [style=solid label="VARIABLE"]
  205 -> 54 [style=solid label="VVARIABLE"]
  205 -> 55 [style=solid label="MVARIABLE"]
  205 -> 26 [style=solid label="'-'"]
  205 -> 27 [style=solid label="'!'"]
  205 -> 56 [style=solid label="'('"]
  205 -> 224 [style=solid label="'['"]
  205 -> 218 [style=dashed label="expr"]
  205 -> 45 [style=dashed label="const"]
  206 [label="State 206\n\l 50 vector: MVARIABLE '(' expr ',' . '[' ']' ')'\l"]
  206 -> 224 [style=solid label="'['"]
  207 [label="State 207\n\l 49 vector: VVARIABLE '(' vector ',' '[' ']' . ')'\l 60 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN vector\l"]
  207 -> 225 [style=solid label="')'"]
  208 [label="State 208\n\l 59 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr .  [NEWLINE]\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  208 -> 93 [style=solid label="CONJUNCTION"]
  208 -> 94 [style=solid label="'<'"]
  208 -> 95 [style=solid label="'>'"]
  208 -> 96 [style=solid label="'+'"]
  208 -> 97 [style=solid label="'-'"]
  208 -> 98 [style=solid label="'/'"]
  208 -> "208R59" [style=solid]
 "208R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  209 [label="State 209\n\l 35 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'\l 51 vector: MVARIABLE '(' '[' ']' . ',' expr ')'\l"]
  209 -> 226 [style=solid label="','"]
  210 [label="State 210\n\l 36 matrix: MVARIABLE '(' matrix ')' .\l"]
  210 -> "210R36" [style=solid]
 "210R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  211 [label="State 211\n\l 34 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'\l"]
  211 -> 227 [style=solid label="'['"]
  212 [label="State 212\n\l 35 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l 65 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector . ')' ASSIGN matrix\l"]
  212 -> 84 [style=solid label="ELEMMULT"]
  212 -> 86 [style=solid label="LEFTSHIFT"]
  212 -> 87 [style=solid label="RIGHTSHIFT"]
  212 -> 228 [style=solid label="')'"]
  213 [label="State 213\n\l 51 vector: MVARIABLE '(' '[' ']' ',' expr . ')'\l 63 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr . ')' ASSIGN vector\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  213 -> 93 [style=solid label="CONJUNCTION"]
  213 -> 94 [style=solid label="'<'"]
  213 -> 95 [style=solid label="'>'"]
  213 -> 96 [style=solid label="'+'"]
  213 -> 97 [style=solid label="'-'"]
  213 -> 98 [style=solid label="'/'"]
  213 -> 229 [style=solid label="')'"]
  214 [label="State 214\n\l 38 matrix: matrix . '*' matrix\l 39       | matrix . ELEMMULT matrix\l 40       | matrix . '\\''\l 41       | matrix . RIGHTSHIFT\l 42       | matrix . LEFTSHIFT\l 44       | matrix . ELEMMULT vector\l 45       | matrix . ELEMMULT expr\l 66 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN matrix .  [NEWLINE]\l"]
  214 -> 78 [style=solid label="ELEMMULT"]
  214 -> 79 [style=solid label="'\\''"]
  214 -> 80 [style=solid label="LEFTSHIFT"]
  214 -> 81 [style=solid label="RIGHTSHIFT"]
  214 -> 82 [style=solid label="'*'"]
  214 -> "214R66" [style=solid]
 "214R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  215 [label="State 215\n\l 34 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'\l 64 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN matrix\l"]
  215 -> 230 [style=solid label="')'"]
  216 [label="State 216\n\l 50 vector: MVARIABLE '(' expr ',' '[' ']' . ')'\l 62 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' . ')' ASSIGN vector\l"]
  216 -> 231 [style=solid label="')'"]
  217 [label="State 217\n\l 61 vmdeclaration: MVARIABLE '(' expr ',' expr ')' . ASSIGN expr\l 88 expr: MVARIABLE '(' expr ',' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']\l"]
  217 -> 232 [style=solid label="ASSIGN"]
  217 -> "217R88" [style=solid]
 "217R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  218 [label="State 218\n\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l 88     | MVARIABLE '(' expr ',' expr . ')'\l"]
  218 -> 93 [style=solid label="CONJUNCTION"]
  218 -> 94 [style=solid label="'<'"]
  218 -> 95 [style=solid label="'>'"]
  218 -> 96 [style=solid label="'+'"]
  218 -> 97 [style=solid label="'-'"]
  218 -> 98 [style=solid label="'/'"]
  218 -> 233 [style=solid label="')'"]
  219 [label="State 219\n\l 19 iff: IF expr NEWLINE BEGIF stmts ENDIF .\l"]
  219 -> "219R19" [style=solid]
 "219R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  220 [label="State 220\n\l  4 stmts: . stmt\l  5      | . stmts stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . function NEWLINE\l 17     | . callfunction NEWLINE\l 18     | . '(' stmts ')'\l 19 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 20 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR\l 20     | FORR declaration DOUBLEDOT expr NEWLINE BEGFOR . stmts ENDFOR\l 25 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E\l 32 callfunction: . FVARIABLE '[' callfunc_args ']'\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 59 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 60              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 61              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 62              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 63              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 64              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 65              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 66              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 67 declaration: . type VAR DECLARE expr\l 68            | . type VAR DECLARE vector\l 69            | . type VAR DECLARE matrix\l 70 assignment: . VARIABLE ASSIGN expr\l 71           | . VVARIABLE ASSIGN vector\l 72           | . MVARIABLE ASSIGN matrix\l 73 print: . PRINT '(' expr ')'\l 74      | . PRINT '(' VVARIABLE ')'\l 75      | . PRINT '(' MVARIABLE ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l101 const: . INTEGER\l102      | . BOOL\l"]
  220 -> 4 [style=solid label="BOOL"]
  220 -> 5 [style=solid label="INTEGER"]
  220 -> 6 [style=solid label="VARIABLE"]
  220 -> 7 [style=solid label="VVARIABLE"]
  220 -> 8 [style=solid label="MVARIABLE"]
  220 -> 9 [style=solid label="FVARIABLE"]
  220 -> 10 [style=solid label="CINT"]
  220 -> 11 [style=solid label="VINT"]
  220 -> 12 [style=solid label="MINT"]
  220 -> 13 [style=solid label="INT"]
  220 -> 14 [style=solid label="CVINT"]
  220 -> 15 [style=solid label="CMINT"]
  220 -> 16 [style=solid label="BOOLEAN"]
  220 -> 17 [style=solid label="CBOOLEAN"]
  220 -> 18 [style=solid label="VBOOLEAN"]
  220 -> 19 [style=solid label="MBOOLEAN"]
  220 -> 20 [style=solid label="CVBOOLEAN"]
  220 -> 21 [style=solid label="CMBOOLEAN"]
  220 -> 22 [style=solid label="NEWLINE"]
  220 -> 23 [style=solid label="PRINT"]
  220 -> 24 [style=solid label="IF"]
  220 -> 25 [style=solid label="FORR"]
  220 -> 26 [style=solid label="'-'"]
  220 -> 27 [style=solid label="'!'"]
  220 -> 28 [style=solid label="'('"]
  220 -> 29 [style=solid label="'['"]
  220 -> 30 [style=solid label="'{'"]
  220 -> 234 [style=dashed label="stmts"]
  220 -> 32 [style=dashed label="stmt"]
  220 -> 33 [style=dashed label="iff"]
  220 -> 34 [style=dashed label="forr"]
  220 -> 35 [style=dashed label="function"]
  220 -> 36 [style=dashed label="callfunction"]
  220 -> 37 [style=dashed label="matrix"]
  220 -> 38 [style=dashed label="vector"]
  220 -> 39 [style=dashed label="vmdeclaration"]
  220 -> 40 [style=dashed label="declaration"]
  220 -> 41 [style=dashed label="assignment"]
  220 -> 42 [style=dashed label="print"]
  220 -> 43 [style=dashed label="expr"]
  220 -> 44 [style=dashed label="type"]
  220 -> 45 [style=dashed label="const"]
  221 [label="State 221\n\l 25 function: '[' return_func ']' DECLARE FUNC VAR . '(' args_func ')' B NEWLINE stmts E\l"]
  221 -> 235 [style=solid label="'('"]
  222 [label="State 222\n\l 49 vector: VVARIABLE '(' vector ',' '[' . ']' ')'\l"]
  222 -> 236 [style=solid label="']'"]
  223 [label="State 223\n\l 51 vector: MVARIABLE '(' '[' ']' ',' . expr ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  223 -> 4 [style=solid label="BOOL"]
  223 -> 5 [style=solid label="INTEGER"]
  223 -> 53 [style=solid label="VARIABLE"]
  223 -> 54 [style=solid label="VVARIABLE"]
  223 -> 55 [style=solid label="MVARIABLE"]
  223 -> 26 [style=solid label="'-'"]
  223 -> 27 [style=solid label="'!'"]
  223 -> 56 [style=solid label="'('"]
  223 -> 237 [style=dashed label="expr"]
  223 -> 45 [style=dashed label="const"]
  224 [label="State 224\n\l 50 vector: MVARIABLE '(' expr ',' '[' . ']' ')'\l"]
  224 -> 238 [style=solid label="']'"]
  225 [label="State 225\n\l 49 vector: VVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT]\l 60 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN vector\l"]
  225 -> 239 [style=solid label="ASSIGN"]
  225 -> "225R49" [style=solid]
 "225R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  226 [label="State 226\n\l 35 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 51       | MVARIABLE '(' '[' ']' ',' . expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  226 -> 4 [style=solid label="BOOL"]
  226 -> 5 [style=solid label="INTEGER"]
  226 -> 53 [style=solid label="VARIABLE"]
  226 -> 65 [style=solid label="VVARIABLE"]
  226 -> 66 [style=solid label="MVARIABLE"]
  226 -> 26 [style=solid label="'-'"]
  226 -> 27 [style=solid label="'!'"]
  226 -> 56 [style=solid label="'('"]
  226 -> 67 [style=solid label="'{'"]
  226 -> 240 [style=dashed label="vector"]
  226 -> 237 [style=dashed label="expr"]
  226 -> 45 [style=dashed label="const"]
  227 [label="State 227\n\l 34 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'\l"]
  227 -> 241 [style=solid label="']'"]
  228 [label="State 228\n\l 35 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*']\l 65 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' . ASSIGN matrix\l"]
  228 -> 242 [style=solid label="ASSIGN"]
  228 -> "228R35" [style=solid]
 "228R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  229 [label="State 229\n\l 51 vector: MVARIABLE '(' '[' ']' ',' expr ')' .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT]\l 63 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' . ASSIGN vector\l"]
  229 -> 243 [style=solid label="ASSIGN"]
  229 -> "229R51" [style=solid]
 "229R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  230 [label="State 230\n\l 34 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*']\l 64 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN matrix\l"]
  230 -> 244 [style=solid label="ASSIGN"]
  230 -> "230R34" [style=solid]
 "230R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  231 [label="State 231\n\l 50 vector: MVARIABLE '(' expr ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT]\l 62 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' . ASSIGN vector\l"]
  231 -> 245 [style=solid label="ASSIGN"]
  231 -> "231R50" [style=solid]
 "231R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  232 [label="State 232\n\l 61 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN . expr\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l101 const: . INTEGER\l102      | . BOOL\l"]
  232 -> 4 [style=solid label="BOOL"]
  232 -> 5 [style=solid label="INTEGER"]
  232 -> 53 [style=solid label="VARIABLE"]
  232 -> 54 [style=solid label="VVARIABLE"]
  232 -> 55 [style=solid label="MVARIABLE"]
  232 -> 26 [style=solid label="'-'"]
  232 -> 27 [style=solid label="'!'"]
  232 -> 56 [style=solid label="'('"]
  232 -> 246 [style=dashed label="expr"]
  232 -> 45 [style=dashed label="const"]
  233 [label="State 233\n\l 88 expr: MVARIABLE '(' expr ',' expr ')' .\l"]
  233 -> "233R88" [style=solid]
 "233R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  234 [label="State 234\n\l  5 stmts: stmts . stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . function NEWLINE\l 17     | . callfunction NEWLINE\l 18     | . '(' stmts ')'\l 19 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 20 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR\l 20     | FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts . ENDFOR\l 25 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E\l 32 callfunction: . FVARIABLE '[' callfunc_args ']'\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 59 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 60              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 61              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 62              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 63              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 64              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 65              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 66              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 67 declaration: . type VAR DECLARE expr\l 68            | . type VAR DECLARE vector\l 69            | . type VAR DECLARE matrix\l 70 assignment: . VARIABLE ASSIGN expr\l 71           | . VVARIABLE ASSIGN vector\l 72           | . MVARIABLE ASSIGN matrix\l 73 print: . PRINT '(' expr ')'\l 74      | . PRINT '(' VVARIABLE ')'\l 75      | . PRINT '(' MVARIABLE ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l101 const: . INTEGER\l102      | . BOOL\l"]
  234 -> 4 [style=solid label="BOOL"]
  234 -> 5 [style=solid label="INTEGER"]
  234 -> 6 [style=solid label="VARIABLE"]
  234 -> 7 [style=solid label="VVARIABLE"]
  234 -> 8 [style=solid label="MVARIABLE"]
  234 -> 9 [style=solid label="FVARIABLE"]
  234 -> 10 [style=solid label="CINT"]
  234 -> 11 [style=solid label="VINT"]
  234 -> 12 [style=solid label="MINT"]
  234 -> 13 [style=solid label="INT"]
  234 -> 14 [style=solid label="CVINT"]
  234 -> 15 [style=solid label="CMINT"]
  234 -> 16 [style=solid label="BOOLEAN"]
  234 -> 17 [style=solid label="CBOOLEAN"]
  234 -> 18 [style=solid label="VBOOLEAN"]
  234 -> 19 [style=solid label="MBOOLEAN"]
  234 -> 20 [style=solid label="CVBOOLEAN"]
  234 -> 21 [style=solid label="CMBOOLEAN"]
  234 -> 22 [style=solid label="NEWLINE"]
  234 -> 23 [style=solid label="PRINT"]
  234 -> 24 [style=solid label="IF"]
  234 -> 25 [style=solid label="FORR"]
  234 -> 247 [style=solid label="ENDFOR"]
  234 -> 26 [style=solid label="'-'"]
  234 -> 27 [style=solid label="'!'"]
  234 -> 28 [style=solid label="'('"]
  234 -> 29 [style=solid label="'['"]
  234 -> 30 [style=solid label="'{'"]
  234 -> 72 [style=dashed label="stmt"]
  234 -> 33 [style=dashed label="iff"]
  234 -> 34 [style=dashed label="forr"]
  234 -> 35 [style=dashed label="function"]
  234 -> 36 [style=dashed label="callfunction"]
  234 -> 37 [style=dashed label="matrix"]
  234 -> 38 [style=dashed label="vector"]
  234 -> 39 [style=dashed label="vmdeclaration"]
  234 -> 40 [style=dashed label="declaration"]
  234 -> 41 [style=dashed label="assignment"]
  234 -> 42 [style=dashed label="print"]
  234 -> 43 [style=dashed label="expr"]
  234 -> 44 [style=dashed label="type"]
  234 -> 45 [style=dashed label="const"]
  235 [label="State 235\n\l 23 args_func: . '[' type VAR ']'\l 24          | . args_func ',' '[' type VAR ']'\l 25 function: '[' return_func ']' DECLARE FUNC VAR '(' . args_func ')' B NEWLINE stmts E\l"]
  235 -> 248 [style=solid label="'['"]
  235 -> 249 [style=dashed label="args_func"]
  236 [label="State 236\n\l 49 vector: VVARIABLE '(' vector ',' '[' ']' . ')'\l"]
  236 -> 250 [style=solid label="')'"]
  237 [label="State 237\n\l 51 vector: MVARIABLE '(' '[' ']' ',' expr . ')'\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  237 -> 93 [style=solid label="CONJUNCTION"]
  237 -> 94 [style=solid label="'<'"]
  237 -> 95 [style=solid label="'>'"]
  237 -> 96 [style=solid label="'+'"]
  237 -> 97 [style=solid label="'-'"]
  237 -> 98 [style=solid label="'/'"]
  237 -> 251 [style=solid label="')'"]
  238 [label="State 238\n\l 50 vector: MVARIABLE '(' expr ',' '[' ']' . ')'\l"]
  238 -> 252 [style=solid label="')'"]
  239 [label="State 239\n\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 60 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . vector\l"]
  239 -> 101 [style=solid label="VVARIABLE"]
  239 -> 102 [style=solid label="MVARIABLE"]
  239 -> 67 [style=solid label="'{'"]
  239 -> 253 [style=dashed label="vector"]
  240 [label="State 240\n\l 35 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l"]
  240 -> 84 [style=solid label="ELEMMULT"]
  240 -> 86 [style=solid label="LEFTSHIFT"]
  240 -> 87 [style=solid label="RIGHTSHIFT"]
  240 -> 254 [style=solid label="')'"]
  241 [label="State 241\n\l 34 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'\l"]
  241 -> 255 [style=solid label="')'"]
  242 [label="State 242\n\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 65 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN . matrix\l"]
  242 -> 101 [style=solid label="VVARIABLE"]
  242 -> 106 [style=solid label="MVARIABLE"]
  242 -> 30 [style=solid label="'{'"]
  242 -> 256 [style=dashed label="matrix"]
  242 -> 108 [style=dashed label="vector"]
  243 [label="State 243\n\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 63 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN . vector\l"]
  243 -> 101 [style=solid label="VVARIABLE"]
  243 -> 102 [style=solid label="MVARIABLE"]
  243 -> 67 [style=solid label="'{'"]
  243 -> 257 [style=dashed label="vector"]
  244 [label="State 244\n\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 64 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . matrix\l"]
  244 -> 101 [style=solid label="VVARIABLE"]
  244 -> 106 [style=solid label="MVARIABLE"]
  244 -> 30 [style=solid label="'{'"]
  244 -> 258 [style=dashed label="matrix"]
  244 -> 108 [style=dashed label="vector"]
  245 [label="State 245\n\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 62 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN . vector\l"]
  245 -> 101 [style=solid label="VVARIABLE"]
  245 -> 102 [style=solid label="MVARIABLE"]
  245 -> 67 [style=solid label="'{'"]
  245 -> 259 [style=dashed label="vector"]
  246 [label="State 246\n\l 61 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN expr .  [NEWLINE]\l 79 expr: expr . '+' expr\l 80     | expr . '-' expr\l 81     | expr . '/' expr\l 82     | expr . '<' expr\l 83     | expr . '>' expr\l 85     | expr . CONJUNCTION expr\l"]
  246 -> 93 [style=solid label="CONJUNCTION"]
  246 -> 94 [style=solid label="'<'"]
  246 -> 95 [style=solid label="'>'"]
  246 -> 96 [style=solid label="'+'"]
  246 -> 97 [style=solid label="'-'"]
  246 -> 98 [style=solid label="'/'"]
  246 -> "246R61" [style=solid]
 "246R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  247 [label="State 247\n\l 20 forr: FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR .\l"]
  247 -> "247R20" [style=solid]
 "247R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  248 [label="State 248\n\l 23 args_func: '[' . type VAR ']'\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l"]
  248 -> 10 [style=solid label="CINT"]
  248 -> 11 [style=solid label="VINT"]
  248 -> 12 [style=solid label="MINT"]
  248 -> 13 [style=solid label="INT"]
  248 -> 14 [style=solid label="CVINT"]
  248 -> 15 [style=solid label="CMINT"]
  248 -> 16 [style=solid label="BOOLEAN"]
  248 -> 17 [style=solid label="CBOOLEAN"]
  248 -> 18 [style=solid label="VBOOLEAN"]
  248 -> 19 [style=solid label="MBOOLEAN"]
  248 -> 20 [style=solid label="CVBOOLEAN"]
  248 -> 21 [style=solid label="CMBOOLEAN"]
  248 -> 260 [style=dashed label="type"]
  249 [label="State 249\n\l 24 args_func: args_func . ',' '[' type VAR ']'\l 25 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func . ')' B NEWLINE stmts E\l"]
  249 -> 261 [style=solid label="','"]
  249 -> 262 [style=solid label="')'"]
  250 [label="State 250\n\l 49 vector: VVARIABLE '(' vector ',' '[' ']' ')' .\l"]
  250 -> "250R49" [style=solid]
 "250R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  251 [label="State 251\n\l 51 vector: MVARIABLE '(' '[' ']' ',' expr ')' .\l"]
  251 -> "251R51" [style=solid]
 "251R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  252 [label="State 252\n\l 50 vector: MVARIABLE '(' expr ',' '[' ']' ')' .\l"]
  252 -> "252R50" [style=solid]
 "252R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  253 [label="State 253\n\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l 60 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]\l"]
  253 -> 84 [style=solid label="ELEMMULT"]
  253 -> 86 [style=solid label="LEFTSHIFT"]
  253 -> 87 [style=solid label="RIGHTSHIFT"]
  253 -> "253R60" [style=solid]
 "253R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  254 [label="State 254\n\l 35 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .\l"]
  254 -> "254R35" [style=solid]
 "254R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  255 [label="State 255\n\l 34 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .\l"]
  255 -> "255R34" [style=solid]
 "255R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  256 [label="State 256\n\l 38 matrix: matrix . '*' matrix\l 39       | matrix . ELEMMULT matrix\l 40       | matrix . '\\''\l 41       | matrix . RIGHTSHIFT\l 42       | matrix . LEFTSHIFT\l 44       | matrix . ELEMMULT vector\l 45       | matrix . ELEMMULT expr\l 65 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix .  [NEWLINE]\l"]
  256 -> 78 [style=solid label="ELEMMULT"]
  256 -> 79 [style=solid label="'\\''"]
  256 -> 80 [style=solid label="LEFTSHIFT"]
  256 -> 81 [style=solid label="RIGHTSHIFT"]
  256 -> 82 [style=solid label="'*'"]
  256 -> "256R65" [style=solid]
 "256R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  257 [label="State 257\n\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l 63 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector .  [NEWLINE]\l"]
  257 -> 84 [style=solid label="ELEMMULT"]
  257 -> 86 [style=solid label="LEFTSHIFT"]
  257 -> 87 [style=solid label="RIGHTSHIFT"]
  257 -> "257R63" [style=solid]
 "257R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  258 [label="State 258\n\l 38 matrix: matrix . '*' matrix\l 39       | matrix . ELEMMULT matrix\l 40       | matrix . '\\''\l 41       | matrix . RIGHTSHIFT\l 42       | matrix . LEFTSHIFT\l 44       | matrix . ELEMMULT vector\l 45       | matrix . ELEMMULT expr\l 64 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix .  [NEWLINE]\l"]
  258 -> 78 [style=solid label="ELEMMULT"]
  258 -> 79 [style=solid label="'\\''"]
  258 -> 80 [style=solid label="LEFTSHIFT"]
  258 -> 81 [style=solid label="RIGHTSHIFT"]
  258 -> 82 [style=solid label="'*'"]
  258 -> "258R64" [style=solid]
 "258R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  259 [label="State 259\n\l 53 vector: vector . ELEMMULT vector\l 54       | vector . RIGHTSHIFT\l 55       | vector . LEFTSHIFT\l 56       | vector . ELEMMULT expr\l 62 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]\l"]
  259 -> 84 [style=solid label="ELEMMULT"]
  259 -> 86 [style=solid label="LEFTSHIFT"]
  259 -> 87 [style=solid label="RIGHTSHIFT"]
  259 -> "259R62" [style=solid]
 "259R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  260 [label="State 260\n\l 23 args_func: '[' type . VAR ']'\l"]
  260 -> 263 [style=solid label="VAR"]
  261 [label="State 261\n\l 24 args_func: args_func ',' . '[' type VAR ']'\l"]
  261 -> 264 [style=solid label="'['"]
  262 [label="State 262\n\l 25 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' . B NEWLINE stmts E\l"]
  262 -> 265 [style=solid label="B"]
  263 [label="State 263\n\l 23 args_func: '[' type VAR . ']'\l"]
  263 -> 266 [style=solid label="']'"]
  264 [label="State 264\n\l 24 args_func: args_func ',' '[' . type VAR ']'\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l"]
  264 -> 10 [style=solid label="CINT"]
  264 -> 11 [style=solid label="VINT"]
  264 -> 12 [style=solid label="MINT"]
  264 -> 13 [style=solid label="INT"]
  264 -> 14 [style=solid label="CVINT"]
  264 -> 15 [style=solid label="CMINT"]
  264 -> 16 [style=solid label="BOOLEAN"]
  264 -> 17 [style=solid label="CBOOLEAN"]
  264 -> 18 [style=solid label="VBOOLEAN"]
  264 -> 19 [style=solid label="MBOOLEAN"]
  264 -> 20 [style=solid label="CVBOOLEAN"]
  264 -> 21 [style=solid label="CMBOOLEAN"]
  264 -> 267 [style=dashed label="type"]
  265 [label="State 265\n\l 25 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B . NEWLINE stmts E\l"]
  265 -> 268 [style=solid label="NEWLINE"]
  266 [label="State 266\n\l 23 args_func: '[' type VAR ']' .\l"]
  266 -> "266R23" [style=solid]
 "266R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  267 [label="State 267\n\l 24 args_func: args_func ',' '[' type . VAR ']'\l"]
  267 -> 269 [style=solid label="VAR"]
  268 [label="State 268\n\l  4 stmts: . stmt\l  5      | . stmts stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . function NEWLINE\l 17     | . callfunction NEWLINE\l 18     | . '(' stmts ')'\l 19 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 20 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR\l 25 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E\l 25         | '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE . stmts E\l 32 callfunction: . FVARIABLE '[' callfunc_args ']'\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 59 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 60              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 61              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 62              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 63              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 64              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 65              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 66              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 67 declaration: . type VAR DECLARE expr\l 68            | . type VAR DECLARE vector\l 69            | . type VAR DECLARE matrix\l 70 assignment: . VARIABLE ASSIGN expr\l 71           | . VVARIABLE ASSIGN vector\l 72           | . MVARIABLE ASSIGN matrix\l 73 print: . PRINT '(' expr ')'\l 74      | . PRINT '(' VVARIABLE ')'\l 75      | . PRINT '(' MVARIABLE ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l101 const: . INTEGER\l102      | . BOOL\l"]
  268 -> 4 [style=solid label="BOOL"]
  268 -> 5 [style=solid label="INTEGER"]
  268 -> 6 [style=solid label="VARIABLE"]
  268 -> 7 [style=solid label="VVARIABLE"]
  268 -> 8 [style=solid label="MVARIABLE"]
  268 -> 9 [style=solid label="FVARIABLE"]
  268 -> 10 [style=solid label="CINT"]
  268 -> 11 [style=solid label="VINT"]
  268 -> 12 [style=solid label="MINT"]
  268 -> 13 [style=solid label="INT"]
  268 -> 14 [style=solid label="CVINT"]
  268 -> 15 [style=solid label="CMINT"]
  268 -> 16 [style=solid label="BOOLEAN"]
  268 -> 17 [style=solid label="CBOOLEAN"]
  268 -> 18 [style=solid label="VBOOLEAN"]
  268 -> 19 [style=solid label="MBOOLEAN"]
  268 -> 20 [style=solid label="CVBOOLEAN"]
  268 -> 21 [style=solid label="CMBOOLEAN"]
  268 -> 22 [style=solid label="NEWLINE"]
  268 -> 23 [style=solid label="PRINT"]
  268 -> 24 [style=solid label="IF"]
  268 -> 25 [style=solid label="FORR"]
  268 -> 26 [style=solid label="'-'"]
  268 -> 27 [style=solid label="'!'"]
  268 -> 28 [style=solid label="'('"]
  268 -> 29 [style=solid label="'['"]
  268 -> 30 [style=solid label="'{'"]
  268 -> 270 [style=dashed label="stmts"]
  268 -> 32 [style=dashed label="stmt"]
  268 -> 33 [style=dashed label="iff"]
  268 -> 34 [style=dashed label="forr"]
  268 -> 35 [style=dashed label="function"]
  268 -> 36 [style=dashed label="callfunction"]
  268 -> 37 [style=dashed label="matrix"]
  268 -> 38 [style=dashed label="vector"]
  268 -> 39 [style=dashed label="vmdeclaration"]
  268 -> 40 [style=dashed label="declaration"]
  268 -> 41 [style=dashed label="assignment"]
  268 -> 42 [style=dashed label="print"]
  268 -> 43 [style=dashed label="expr"]
  268 -> 44 [style=dashed label="type"]
  268 -> 45 [style=dashed label="const"]
  269 [label="State 269\n\l 24 args_func: args_func ',' '[' type VAR . ']'\l"]
  269 -> 271 [style=solid label="']'"]
  270 [label="State 270\n\l  5 stmts: stmts . stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . function NEWLINE\l 17     | . callfunction NEWLINE\l 18     | . '(' stmts ')'\l 19 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 20 forr: . FORR declaration DOUBLEDOT expr NEWLINE BEGFOR stmts ENDFOR\l 25 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E\l 25         | '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts . E\l 32 callfunction: . FVARIABLE '[' callfunc_args ']'\l 33 matrix: . '{' listexprs '}'\l 34       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 35       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 36       | . MVARIABLE '(' matrix ')'\l 37       | . MVARIABLE\l 38       | . matrix '*' matrix\l 39       | . matrix ELEMMULT matrix\l 40       | . matrix '\\''\l 41       | . matrix RIGHTSHIFT\l 42       | . matrix LEFTSHIFT\l 43       | . vector '\\''\l 44       | . matrix ELEMMULT vector\l 45       | . matrix ELEMMULT expr\l 48 vector: . '{' exprs '}'\l 49       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 50       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 51       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 52       | . VVARIABLE\l 53       | . vector ELEMMULT vector\l 54       | . vector RIGHTSHIFT\l 55       | . vector LEFTSHIFT\l 56       | . vector ELEMMULT expr\l 59 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 60              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 61              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 62              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 63              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 64              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 65              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 66              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 67 declaration: . type VAR DECLARE expr\l 68            | . type VAR DECLARE vector\l 69            | . type VAR DECLARE matrix\l 70 assignment: . VARIABLE ASSIGN expr\l 71           | . VVARIABLE ASSIGN vector\l 72           | . MVARIABLE ASSIGN matrix\l 73 print: . PRINT '(' expr ')'\l 74      | . PRINT '(' VVARIABLE ')'\l 75      | . PRINT '(' MVARIABLE ')'\l 76 expr: . const\l 77     | . VARIABLE\l 78     | . '-' expr\l 79     | . expr '+' expr\l 80     | . expr '-' expr\l 81     | . expr '/' expr\l 82     | . expr '<' expr\l 83     | . expr '>' expr\l 84     | . '!' expr\l 85     | . expr CONJUNCTION expr\l 86     | . '(' expr ')'\l 87     | . VVARIABLE '(' expr ')'\l 88     | . MVARIABLE '(' expr ',' expr ')'\l 89 type: . INT\l 90     | . CINT\l 91     | . VINT\l 92     | . MINT\l 93     | . CVINT\l 94     | . CMINT\l 95     | . BOOLEAN\l 96     | . CBOOLEAN\l 97     | . VBOOLEAN\l 98     | . MBOOLEAN\l 99     | . CVBOOLEAN\l100     | . CMBOOLEAN\l101 const: . INTEGER\l102      | . BOOL\l"]
  270 -> 4 [style=solid label="BOOL"]
  270 -> 5 [style=solid label="INTEGER"]
  270 -> 6 [style=solid label="VARIABLE"]
  270 -> 7 [style=solid label="VVARIABLE"]
  270 -> 8 [style=solid label="MVARIABLE"]
  270 -> 9 [style=solid label="FVARIABLE"]
  270 -> 10 [style=solid label="CINT"]
  270 -> 11 [style=solid label="VINT"]
  270 -> 12 [style=solid label="MINT"]
  270 -> 13 [style=solid label="INT"]
  270 -> 14 [style=solid label="CVINT"]
  270 -> 15 [style=solid label="CMINT"]
  270 -> 16 [style=solid label="BOOLEAN"]
  270 -> 17 [style=solid label="CBOOLEAN"]
  270 -> 18 [style=solid label="VBOOLEAN"]
  270 -> 19 [style=solid label="MBOOLEAN"]
  270 -> 20 [style=solid label="CVBOOLEAN"]
  270 -> 21 [style=solid label="CMBOOLEAN"]
  270 -> 22 [style=solid label="NEWLINE"]
  270 -> 23 [style=solid label="PRINT"]
  270 -> 24 [style=solid label="IF"]
  270 -> 25 [style=solid label="FORR"]
  270 -> 272 [style=solid label="E"]
  270 -> 26 [style=solid label="'-'"]
  270 -> 27 [style=solid label="'!'"]
  270 -> 28 [style=solid label="'('"]
  270 -> 29 [style=solid label="'['"]
  270 -> 30 [style=solid label="'{'"]
  270 -> 72 [style=dashed label="stmt"]
  270 -> 33 [style=dashed label="iff"]
  270 -> 34 [style=dashed label="forr"]
  270 -> 35 [style=dashed label="function"]
  270 -> 36 [style=dashed label="callfunction"]
  270 -> 37 [style=dashed label="matrix"]
  270 -> 38 [style=dashed label="vector"]
  270 -> 39 [style=dashed label="vmdeclaration"]
  270 -> 40 [style=dashed label="declaration"]
  270 -> 41 [style=dashed label="assignment"]
  270 -> 42 [style=dashed label="print"]
  270 -> 43 [style=dashed label="expr"]
  270 -> 44 [style=dashed label="type"]
  270 -> 45 [style=dashed label="const"]
  271 [label="State 271\n\l 24 args_func: args_func ',' '[' type VAR ']' .\l"]
  271 -> "271R24" [style=solid]
 "271R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  272 [label="State 272\n\l 25 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E .\l"]
  272 -> "272R25" [style=solid]
 "272R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
}
