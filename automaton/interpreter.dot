// Generated by GNU Bison 3.3.2.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <http://www.gnu.org/software/bison/>.

digraph "interpreter.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . program $end\l  1 program: . function\l  2 function: . function stmt\l  3         | . %empty\l"]
  0 -> 1 [style=dashed label="program"]
  0 -> 2 [style=dashed label="function"]
  0 -> "0R3" [style=solid]
 "0R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  1 [label="State 1\n\l  0 $accept: program . $end\l"]
  1 -> 3 [style=solid label="$end"]
  2 [label="State 2\n\l  1 program: function .  [$end]\l  2 function: function . stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . print NEWLINE\l  9     | . declaration NEWLINE\l 10     | . assignment NEWLINE\l 11     | . '(' stmts ')'\l 14 declaration: . type VARIABLE DECLARE expr\l 15            | . type VARIABLE DECLARE '{' exprs '}'\l 16 assignment: . VARIABLE ASSIGN expr\l 17           | . VARIABLE ASSIGN '{' exprs '}'\l 18 print: . PRINT '(' expr ')'\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 31 type: . INT\l 32     | . CINT\l 33     | . VINT\l 34     | . MINT\l 35     | . CVINT\l 36     | . CMINT\l 37     | . BOOLEAN\l 38     | . CBOOLEAN\l 39     | . VBOOLEAN\l 40     | . MBOOLEAN\l 41     | . CVBOOLEAN\l 42     | . CMBOOLEAN\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  2 -> 4 [style=solid label="BOOL"]
  2 -> 5 [style=solid label="INTEGER"]
  2 -> 6 [style=solid label="VARIABLE"]
  2 -> 7 [style=solid label="CINT"]
  2 -> 8 [style=solid label="VINT"]
  2 -> 9 [style=solid label="MINT"]
  2 -> 10 [style=solid label="INT"]
  2 -> 11 [style=solid label="CVINT"]
  2 -> 12 [style=solid label="CMINT"]
  2 -> 13 [style=solid label="BOOLEAN"]
  2 -> 14 [style=solid label="CBOOLEAN"]
  2 -> 15 [style=solid label="VBOOLEAN"]
  2 -> 16 [style=solid label="MBOOLEAN"]
  2 -> 17 [style=solid label="CVBOOLEAN"]
  2 -> 18 [style=solid label="CMBOOLEAN"]
  2 -> 19 [style=solid label="NEWLINE"]
  2 -> 20 [style=solid label="PRINT"]
  2 -> 21 [style=solid label="'-'"]
  2 -> 22 [style=solid label="'!'"]
  2 -> 23 [style=solid label="'('"]
  2 -> 24 [style=dashed label="stmt"]
  2 -> 25 [style=dashed label="declaration"]
  2 -> 26 [style=dashed label="assignment"]
  2 -> 27 [style=dashed label="print"]
  2 -> 28 [style=dashed label="expr"]
  2 -> 29 [style=dashed label="type"]
  2 -> 30 [style=dashed label="const"]
  2 -> "2R1" [style=solid]
 "2R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  3 [label="State 3\n\l  0 $accept: program $end .\l"]
  3 -> "3R0" [style=solid]
 "3R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  4 [label="State 4\n\l 44 const: BOOL .\l"]
  4 -> "4R44" [style=solid]
 "4R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l 43 const: INTEGER .\l"]
  5 -> "5R43" [style=solid]
 "5R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l 16 assignment: VARIABLE . ASSIGN expr\l 17           | VARIABLE . ASSIGN '{' exprs '}'\l 20 expr: VARIABLE .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '*', '/', ')']\l"]
  6 -> 31 [style=solid label="ASSIGN"]
  6 -> "6R20" [style=solid]
 "6R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l 32 type: CINT .\l"]
  7 -> "7R32" [style=solid]
 "7R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l 33 type: VINT .\l"]
  8 -> "8R33" [style=solid]
 "8R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l 34 type: MINT .\l"]
  9 -> "9R34" [style=solid]
 "9R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  10 [label="State 10\n\l 31 type: INT .\l"]
  10 -> "10R31" [style=solid]
 "10R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  11 [label="State 11\n\l 35 type: CVINT .\l"]
  11 -> "11R35" [style=solid]
 "11R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l 36 type: CMINT .\l"]
  12 -> "12R36" [style=solid]
 "12R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l 37 type: BOOLEAN .\l"]
  13 -> "13R37" [style=solid]
 "13R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l 38 type: CBOOLEAN .\l"]
  14 -> "14R38" [style=solid]
 "14R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l 39 type: VBOOLEAN .\l"]
  15 -> "15R39" [style=solid]
 "15R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l 40 type: MBOOLEAN .\l"]
  16 -> "16R40" [style=solid]
 "16R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l 41 type: CVBOOLEAN .\l"]
  17 -> "17R41" [style=solid]
 "17R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 42 type: CMBOOLEAN .\l"]
  18 -> "18R42" [style=solid]
 "18R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l  6 stmt: NEWLINE .\l"]
  19 -> "19R6" [style=solid]
 "19R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l 18 print: PRINT . '(' expr ')'\l"]
  20 -> 32 [style=solid label="'('"]
  21 [label="State 21\n\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 21     | '-' . expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  21 -> 4 [style=solid label="BOOL"]
  21 -> 5 [style=solid label="INTEGER"]
  21 -> 33 [style=solid label="VARIABLE"]
  21 -> 21 [style=solid label="'-'"]
  21 -> 22 [style=solid label="'!'"]
  21 -> 34 [style=solid label="'('"]
  21 -> 35 [style=dashed label="expr"]
  21 -> 30 [style=dashed label="const"]
  22 [label="State 22\n\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 28     | '!' . expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  22 -> 4 [style=solid label="BOOL"]
  22 -> 5 [style=solid label="INTEGER"]
  22 -> 33 [style=solid label="VARIABLE"]
  22 -> 21 [style=solid label="'-'"]
  22 -> 22 [style=solid label="'!'"]
  22 -> 34 [style=solid label="'('"]
  22 -> 36 [style=dashed label="expr"]
  22 -> 30 [style=dashed label="const"]
  23 [label="State 23\n\l  4 stmts: . stmt\l  5      | . stmts stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . print NEWLINE\l  9     | . declaration NEWLINE\l 10     | . assignment NEWLINE\l 11     | . '(' stmts ')'\l 11     | '(' . stmts ')'\l 14 declaration: . type VARIABLE DECLARE expr\l 15            | . type VARIABLE DECLARE '{' exprs '}'\l 16 assignment: . VARIABLE ASSIGN expr\l 17           | . VARIABLE ASSIGN '{' exprs '}'\l 18 print: . PRINT '(' expr ')'\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 30     | '(' . expr ')'\l 31 type: . INT\l 32     | . CINT\l 33     | . VINT\l 34     | . MINT\l 35     | . CVINT\l 36     | . CMINT\l 37     | . BOOLEAN\l 38     | . CBOOLEAN\l 39     | . VBOOLEAN\l 40     | . MBOOLEAN\l 41     | . CVBOOLEAN\l 42     | . CMBOOLEAN\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  23 -> 4 [style=solid label="BOOL"]
  23 -> 5 [style=solid label="INTEGER"]
  23 -> 6 [style=solid label="VARIABLE"]
  23 -> 7 [style=solid label="CINT"]
  23 -> 8 [style=solid label="VINT"]
  23 -> 9 [style=solid label="MINT"]
  23 -> 10 [style=solid label="INT"]
  23 -> 11 [style=solid label="CVINT"]
  23 -> 12 [style=solid label="CMINT"]
  23 -> 13 [style=solid label="BOOLEAN"]
  23 -> 14 [style=solid label="CBOOLEAN"]
  23 -> 15 [style=solid label="VBOOLEAN"]
  23 -> 16 [style=solid label="MBOOLEAN"]
  23 -> 17 [style=solid label="CVBOOLEAN"]
  23 -> 18 [style=solid label="CMBOOLEAN"]
  23 -> 19 [style=solid label="NEWLINE"]
  23 -> 20 [style=solid label="PRINT"]
  23 -> 21 [style=solid label="'-'"]
  23 -> 22 [style=solid label="'!'"]
  23 -> 23 [style=solid label="'('"]
  23 -> 37 [style=dashed label="stmts"]
  23 -> 38 [style=dashed label="stmt"]
  23 -> 25 [style=dashed label="declaration"]
  23 -> 26 [style=dashed label="assignment"]
  23 -> 27 [style=dashed label="print"]
  23 -> 39 [style=dashed label="expr"]
  23 -> 29 [style=dashed label="type"]
  23 -> 30 [style=dashed label="const"]
  24 [label="State 24\n\l  2 function: function stmt .\l"]
  24 -> "24R2" [style=solid]
 "24R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l  9 stmt: declaration . NEWLINE\l"]
  25 -> 40 [style=solid label="NEWLINE"]
  26 [label="State 26\n\l 10 stmt: assignment . NEWLINE\l"]
  26 -> 41 [style=solid label="NEWLINE"]
  27 [label="State 27\n\l  8 stmt: print . NEWLINE\l"]
  27 -> 42 [style=solid label="NEWLINE"]
  28 [label="State 28\n\l  7 stmt: expr . NEWLINE\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l"]
  28 -> 43 [style=solid label="NEWLINE"]
  28 -> 44 [style=solid label="CONJUNCTION"]
  28 -> 45 [style=solid label="'<'"]
  28 -> 46 [style=solid label="'>'"]
  28 -> 47 [style=solid label="'+'"]
  28 -> 48 [style=solid label="'-'"]
  28 -> 49 [style=solid label="'*'"]
  28 -> 50 [style=solid label="'/'"]
  29 [label="State 29\n\l 14 declaration: type . VARIABLE DECLARE expr\l 15            | type . VARIABLE DECLARE '{' exprs '}'\l"]
  29 -> 51 [style=solid label="VARIABLE"]
  30 [label="State 30\n\l 19 expr: const .\l"]
  30 -> "30R19" [style=solid]
 "30R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l 16 assignment: VARIABLE ASSIGN . expr\l 17           | VARIABLE ASSIGN . '{' exprs '}'\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  31 -> 4 [style=solid label="BOOL"]
  31 -> 5 [style=solid label="INTEGER"]
  31 -> 33 [style=solid label="VARIABLE"]
  31 -> 21 [style=solid label="'-'"]
  31 -> 22 [style=solid label="'!'"]
  31 -> 34 [style=solid label="'('"]
  31 -> 52 [style=solid label="'{'"]
  31 -> 53 [style=dashed label="expr"]
  31 -> 30 [style=dashed label="const"]
  32 [label="State 32\n\l 18 print: PRINT '(' . expr ')'\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  32 -> 4 [style=solid label="BOOL"]
  32 -> 5 [style=solid label="INTEGER"]
  32 -> 33 [style=solid label="VARIABLE"]
  32 -> 21 [style=solid label="'-'"]
  32 -> 22 [style=solid label="'!'"]
  32 -> 34 [style=solid label="'('"]
  32 -> 54 [style=dashed label="expr"]
  32 -> 30 [style=dashed label="const"]
  33 [label="State 33\n\l 20 expr: VARIABLE .\l"]
  33 -> "33R20" [style=solid]
 "33R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  34 [label="State 34\n\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 30     | '(' . expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  34 -> 4 [style=solid label="BOOL"]
  34 -> 5 [style=solid label="INTEGER"]
  34 -> 33 [style=solid label="VARIABLE"]
  34 -> 21 [style=solid label="'-'"]
  34 -> 22 [style=solid label="'!'"]
  34 -> 34 [style=solid label="'('"]
  34 -> 55 [style=dashed label="expr"]
  34 -> 30 [style=dashed label="const"]
  35 [label="State 35\n\l 21 expr: '-' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', '+', '-', '*', '/', ')', '}']\l 22     | expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l"]
  35 -> 44 [style=solid label="CONJUNCTION"]
  35 -> "35R21d" [label="[CONJUNCTION]", style=solid]
 "35R21d" [label="R21", fillcolor=5, shape=diamond, style=filled]
  35 -> "35R21" [style=solid]
 "35R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 28     | '!' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', '+', '-', '*', '/', ')', '}']\l 29     | expr . CONJUNCTION expr\l"]
  36 -> 44 [style=solid label="CONJUNCTION"]
  36 -> "36R28d" [label="[CONJUNCTION]", style=solid]
 "36R28d" [label="R28", fillcolor=5, shape=diamond, style=filled]
  36 -> "36R28" [style=solid]
 "36R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  37 [label="State 37\n\l  5 stmts: stmts . stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . print NEWLINE\l  9     | . declaration NEWLINE\l 10     | . assignment NEWLINE\l 11     | . '(' stmts ')'\l 11     | '(' stmts . ')'\l 14 declaration: . type VARIABLE DECLARE expr\l 15            | . type VARIABLE DECLARE '{' exprs '}'\l 16 assignment: . VARIABLE ASSIGN expr\l 17           | . VARIABLE ASSIGN '{' exprs '}'\l 18 print: . PRINT '(' expr ')'\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 31 type: . INT\l 32     | . CINT\l 33     | . VINT\l 34     | . MINT\l 35     | . CVINT\l 36     | . CMINT\l 37     | . BOOLEAN\l 38     | . CBOOLEAN\l 39     | . VBOOLEAN\l 40     | . MBOOLEAN\l 41     | . CVBOOLEAN\l 42     | . CMBOOLEAN\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  37 -> 4 [style=solid label="BOOL"]
  37 -> 5 [style=solid label="INTEGER"]
  37 -> 6 [style=solid label="VARIABLE"]
  37 -> 7 [style=solid label="CINT"]
  37 -> 8 [style=solid label="VINT"]
  37 -> 9 [style=solid label="MINT"]
  37 -> 10 [style=solid label="INT"]
  37 -> 11 [style=solid label="CVINT"]
  37 -> 12 [style=solid label="CMINT"]
  37 -> 13 [style=solid label="BOOLEAN"]
  37 -> 14 [style=solid label="CBOOLEAN"]
  37 -> 15 [style=solid label="VBOOLEAN"]
  37 -> 16 [style=solid label="MBOOLEAN"]
  37 -> 17 [style=solid label="CVBOOLEAN"]
  37 -> 18 [style=solid label="CMBOOLEAN"]
  37 -> 19 [style=solid label="NEWLINE"]
  37 -> 20 [style=solid label="PRINT"]
  37 -> 21 [style=solid label="'-'"]
  37 -> 22 [style=solid label="'!'"]
  37 -> 23 [style=solid label="'('"]
  37 -> 56 [style=solid label="')'"]
  37 -> 57 [style=dashed label="stmt"]
  37 -> 25 [style=dashed label="declaration"]
  37 -> 26 [style=dashed label="assignment"]
  37 -> 27 [style=dashed label="print"]
  37 -> 28 [style=dashed label="expr"]
  37 -> 29 [style=dashed label="type"]
  37 -> 30 [style=dashed label="const"]
  38 [label="State 38\n\l  4 stmts: stmt .\l"]
  38 -> "38R4" [style=solid]
 "38R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l  7 stmt: expr . NEWLINE\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l 30     | '(' expr . ')'\l"]
  39 -> 43 [style=solid label="NEWLINE"]
  39 -> 44 [style=solid label="CONJUNCTION"]
  39 -> 45 [style=solid label="'<'"]
  39 -> 46 [style=solid label="'>'"]
  39 -> 47 [style=solid label="'+'"]
  39 -> 48 [style=solid label="'-'"]
  39 -> 49 [style=solid label="'*'"]
  39 -> 50 [style=solid label="'/'"]
  39 -> 58 [style=solid label="')'"]
  40 [label="State 40\n\l  9 stmt: declaration NEWLINE .\l"]
  40 -> "40R9" [style=solid]
 "40R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 10 stmt: assignment NEWLINE .\l"]
  41 -> "41R10" [style=solid]
 "41R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  42 [label="State 42\n\l  8 stmt: print NEWLINE .\l"]
  42 -> "42R8" [style=solid]
 "42R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l  7 stmt: expr NEWLINE .\l"]
  43 -> "43R7" [style=solid]
 "43R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 29     | expr CONJUNCTION . expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  44 -> 4 [style=solid label="BOOL"]
  44 -> 5 [style=solid label="INTEGER"]
  44 -> 33 [style=solid label="VARIABLE"]
  44 -> 21 [style=solid label="'-'"]
  44 -> 22 [style=solid label="'!'"]
  44 -> 34 [style=solid label="'('"]
  44 -> 59 [style=dashed label="expr"]
  44 -> 30 [style=dashed label="const"]
  45 [label="State 45\n\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 26     | expr '<' . expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  45 -> 4 [style=solid label="BOOL"]
  45 -> 5 [style=solid label="INTEGER"]
  45 -> 33 [style=solid label="VARIABLE"]
  45 -> 21 [style=solid label="'-'"]
  45 -> 22 [style=solid label="'!'"]
  45 -> 34 [style=solid label="'('"]
  45 -> 60 [style=dashed label="expr"]
  45 -> 30 [style=dashed label="const"]
  46 [label="State 46\n\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 27     | expr '>' . expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  46 -> 4 [style=solid label="BOOL"]
  46 -> 5 [style=solid label="INTEGER"]
  46 -> 33 [style=solid label="VARIABLE"]
  46 -> 21 [style=solid label="'-'"]
  46 -> 22 [style=solid label="'!'"]
  46 -> 34 [style=solid label="'('"]
  46 -> 61 [style=dashed label="expr"]
  46 -> 30 [style=dashed label="const"]
  47 [label="State 47\n\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 22     | expr '+' . expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  47 -> 4 [style=solid label="BOOL"]
  47 -> 5 [style=solid label="INTEGER"]
  47 -> 33 [style=solid label="VARIABLE"]
  47 -> 21 [style=solid label="'-'"]
  47 -> 22 [style=solid label="'!'"]
  47 -> 34 [style=solid label="'('"]
  47 -> 62 [style=dashed label="expr"]
  47 -> 30 [style=dashed label="const"]
  48 [label="State 48\n\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 23     | expr '-' . expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  48 -> 4 [style=solid label="BOOL"]
  48 -> 5 [style=solid label="INTEGER"]
  48 -> 33 [style=solid label="VARIABLE"]
  48 -> 21 [style=solid label="'-'"]
  48 -> 22 [style=solid label="'!'"]
  48 -> 34 [style=solid label="'('"]
  48 -> 63 [style=dashed label="expr"]
  48 -> 30 [style=dashed label="const"]
  49 [label="State 49\n\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 24     | expr '*' . expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  49 -> 4 [style=solid label="BOOL"]
  49 -> 5 [style=solid label="INTEGER"]
  49 -> 33 [style=solid label="VARIABLE"]
  49 -> 21 [style=solid label="'-'"]
  49 -> 22 [style=solid label="'!'"]
  49 -> 34 [style=solid label="'('"]
  49 -> 64 [style=dashed label="expr"]
  49 -> 30 [style=dashed label="const"]
  50 [label="State 50\n\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 25     | expr '/' . expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  50 -> 4 [style=solid label="BOOL"]
  50 -> 5 [style=solid label="INTEGER"]
  50 -> 33 [style=solid label="VARIABLE"]
  50 -> 21 [style=solid label="'-'"]
  50 -> 22 [style=solid label="'!'"]
  50 -> 34 [style=solid label="'('"]
  50 -> 65 [style=dashed label="expr"]
  50 -> 30 [style=dashed label="const"]
  51 [label="State 51\n\l 14 declaration: type VARIABLE . DECLARE expr\l 15            | type VARIABLE . DECLARE '{' exprs '}'\l"]
  51 -> 66 [style=solid label="DECLARE"]
  52 [label="State 52\n\l 12 exprs: . expr ',' expr\l 13      | . exprs ',' expr\l 17 assignment: VARIABLE ASSIGN '{' . exprs '}'\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  52 -> 4 [style=solid label="BOOL"]
  52 -> 5 [style=solid label="INTEGER"]
  52 -> 33 [style=solid label="VARIABLE"]
  52 -> 21 [style=solid label="'-'"]
  52 -> 22 [style=solid label="'!'"]
  52 -> 34 [style=solid label="'('"]
  52 -> 67 [style=dashed label="exprs"]
  52 -> 68 [style=dashed label="expr"]
  52 -> 30 [style=dashed label="const"]
  53 [label="State 53\n\l 16 assignment: VARIABLE ASSIGN expr .  [NEWLINE]\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l"]
  53 -> 44 [style=solid label="CONJUNCTION"]
  53 -> 45 [style=solid label="'<'"]
  53 -> 46 [style=solid label="'>'"]
  53 -> 47 [style=solid label="'+'"]
  53 -> 48 [style=solid label="'-'"]
  53 -> 49 [style=solid label="'*'"]
  53 -> 50 [style=solid label="'/'"]
  53 -> "53R16" [style=solid]
 "53R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l 18 print: PRINT '(' expr . ')'\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l"]
  54 -> 44 [style=solid label="CONJUNCTION"]
  54 -> 45 [style=solid label="'<'"]
  54 -> 46 [style=solid label="'>'"]
  54 -> 47 [style=solid label="'+'"]
  54 -> 48 [style=solid label="'-'"]
  54 -> 49 [style=solid label="'*'"]
  54 -> 50 [style=solid label="'/'"]
  54 -> 69 [style=solid label="')'"]
  55 [label="State 55\n\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l 30     | '(' expr . ')'\l"]
  55 -> 44 [style=solid label="CONJUNCTION"]
  55 -> 45 [style=solid label="'<'"]
  55 -> 46 [style=solid label="'>'"]
  55 -> 47 [style=solid label="'+'"]
  55 -> 48 [style=solid label="'-'"]
  55 -> 49 [style=solid label="'*'"]
  55 -> 50 [style=solid label="'/'"]
  55 -> 58 [style=solid label="')'"]
  56 [label="State 56\n\l 11 stmt: '(' stmts ')' .\l"]
  56 -> "56R11" [style=solid]
 "56R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l  5 stmts: stmts stmt .\l"]
  57 -> "57R5" [style=solid]
 "57R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  58 [label="State 58\n\l 30 expr: '(' expr ')' .\l"]
  58 -> "58R30" [style=solid]
 "58R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l 29     | expr CONJUNCTION expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', '+', '-', '*', '/', ')', '}']\l"]
  59 -> 44 [style=solid label="CONJUNCTION"]
  59 -> 45 [style=solid label="'<'"]
  59 -> 46 [style=solid label="'>'"]
  59 -> 47 [style=solid label="'+'"]
  59 -> 48 [style=solid label="'-'"]
  59 -> 49 [style=solid label="'*'"]
  59 -> 50 [style=solid label="'/'"]
  59 -> "59R29d" [label="[CONJUNCTION, '<', '>', '+', '-', '*', '/']", style=solid]
 "59R29d" [label="R29", fillcolor=5, shape=diamond, style=filled]
  59 -> "59R29" [style=solid]
 "59R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 26     | expr '<' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', ')', '}']\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l"]
  60 -> 44 [style=solid label="CONJUNCTION"]
  60 -> 47 [style=solid label="'+'"]
  60 -> 48 [style=solid label="'-'"]
  60 -> 49 [style=solid label="'*'"]
  60 -> 50 [style=solid label="'/'"]
  60 -> "60R26d" [label="[CONJUNCTION]", style=solid]
 "60R26d" [label="R26", fillcolor=5, shape=diamond, style=filled]
  60 -> "60R26" [style=solid]
 "60R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 27     | expr '>' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', ')', '}']\l 29     | expr . CONJUNCTION expr\l"]
  61 -> 44 [style=solid label="CONJUNCTION"]
  61 -> 47 [style=solid label="'+'"]
  61 -> 48 [style=solid label="'-'"]
  61 -> 49 [style=solid label="'*'"]
  61 -> 50 [style=solid label="'/'"]
  61 -> "61R27d" [label="[CONJUNCTION]", style=solid]
 "61R27d" [label="R27", fillcolor=5, shape=diamond, style=filled]
  61 -> "61R27" [style=solid]
 "61R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l 22 expr: expr . '+' expr\l 22     | expr '+' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', '+', '-', ')', '}']\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l"]
  62 -> 44 [style=solid label="CONJUNCTION"]
  62 -> 49 [style=solid label="'*'"]
  62 -> 50 [style=solid label="'/'"]
  62 -> "62R22d" [label="[CONJUNCTION]", style=solid]
 "62R22d" [label="R22", fillcolor=5, shape=diamond, style=filled]
  62 -> "62R22" [style=solid]
 "62R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  63 [label="State 63\n\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 23     | expr '-' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', '+', '-', ')', '}']\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l"]
  63 -> 44 [style=solid label="CONJUNCTION"]
  63 -> 49 [style=solid label="'*'"]
  63 -> 50 [style=solid label="'/'"]
  63 -> "63R23d" [label="[CONJUNCTION]", style=solid]
 "63R23d" [label="R23", fillcolor=5, shape=diamond, style=filled]
  63 -> "63R23" [style=solid]
 "63R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 24     | expr '*' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', '+', '-', '*', '/', ')', '}']\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l"]
  64 -> 44 [style=solid label="CONJUNCTION"]
  64 -> "64R24d" [label="[CONJUNCTION]", style=solid]
 "64R24d" [label="R24", fillcolor=5, shape=diamond, style=filled]
  64 -> "64R24" [style=solid]
 "64R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  65 [label="State 65\n\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 25     | expr '/' expr .  [NEWLINE, CONJUNCTION, ',', '<', '>', '+', '-', '*', '/', ')', '}']\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l"]
  65 -> 44 [style=solid label="CONJUNCTION"]
  65 -> "65R25d" [label="[CONJUNCTION]", style=solid]
 "65R25d" [label="R25", fillcolor=5, shape=diamond, style=filled]
  65 -> "65R25" [style=solid]
 "65R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l 14 declaration: type VARIABLE DECLARE . expr\l 15            | type VARIABLE DECLARE . '{' exprs '}'\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  66 -> 4 [style=solid label="BOOL"]
  66 -> 5 [style=solid label="INTEGER"]
  66 -> 33 [style=solid label="VARIABLE"]
  66 -> 21 [style=solid label="'-'"]
  66 -> 22 [style=solid label="'!'"]
  66 -> 34 [style=solid label="'('"]
  66 -> 70 [style=solid label="'{'"]
  66 -> 71 [style=dashed label="expr"]
  66 -> 30 [style=dashed label="const"]
  67 [label="State 67\n\l 13 exprs: exprs . ',' expr\l 17 assignment: VARIABLE ASSIGN '{' exprs . '}'\l"]
  67 -> 72 [style=solid label="','"]
  67 -> 73 [style=solid label="'}'"]
  68 [label="State 68\n\l 12 exprs: expr . ',' expr\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l"]
  68 -> 44 [style=solid label="CONJUNCTION"]
  68 -> 74 [style=solid label="','"]
  68 -> 45 [style=solid label="'<'"]
  68 -> 46 [style=solid label="'>'"]
  68 -> 47 [style=solid label="'+'"]
  68 -> 48 [style=solid label="'-'"]
  68 -> 49 [style=solid label="'*'"]
  68 -> 50 [style=solid label="'/'"]
  69 [label="State 69\n\l 18 print: PRINT '(' expr ')' .\l"]
  69 -> "69R18" [style=solid]
 "69R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l 12 exprs: . expr ',' expr\l 13      | . exprs ',' expr\l 15 declaration: type VARIABLE DECLARE '{' . exprs '}'\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  70 -> 4 [style=solid label="BOOL"]
  70 -> 5 [style=solid label="INTEGER"]
  70 -> 33 [style=solid label="VARIABLE"]
  70 -> 21 [style=solid label="'-'"]
  70 -> 22 [style=solid label="'!'"]
  70 -> 34 [style=solid label="'('"]
  70 -> 75 [style=dashed label="exprs"]
  70 -> 68 [style=dashed label="expr"]
  70 -> 30 [style=dashed label="const"]
  71 [label="State 71\n\l 14 declaration: type VARIABLE DECLARE expr .  [NEWLINE]\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l"]
  71 -> 44 [style=solid label="CONJUNCTION"]
  71 -> 45 [style=solid label="'<'"]
  71 -> 46 [style=solid label="'>'"]
  71 -> 47 [style=solid label="'+'"]
  71 -> 48 [style=solid label="'-'"]
  71 -> 49 [style=solid label="'*'"]
  71 -> 50 [style=solid label="'/'"]
  71 -> "71R14" [style=solid]
 "71R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 13 exprs: exprs ',' . expr\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  72 -> 4 [style=solid label="BOOL"]
  72 -> 5 [style=solid label="INTEGER"]
  72 -> 33 [style=solid label="VARIABLE"]
  72 -> 21 [style=solid label="'-'"]
  72 -> 22 [style=solid label="'!'"]
  72 -> 34 [style=solid label="'('"]
  72 -> 76 [style=dashed label="expr"]
  72 -> 30 [style=dashed label="const"]
  73 [label="State 73\n\l 17 assignment: VARIABLE ASSIGN '{' exprs '}' .\l"]
  73 -> "73R17" [style=solid]
 "73R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l 12 exprs: expr ',' . expr\l 19 expr: . const\l 20     | . VARIABLE\l 21     | . '-' expr\l 22     | . expr '+' expr\l 23     | . expr '-' expr\l 24     | . expr '*' expr\l 25     | . expr '/' expr\l 26     | . expr '<' expr\l 27     | . expr '>' expr\l 28     | . '!' expr\l 29     | . expr CONJUNCTION expr\l 30     | . '(' expr ')'\l 43 const: . INTEGER\l 44      | . BOOL\l"]
  74 -> 4 [style=solid label="BOOL"]
  74 -> 5 [style=solid label="INTEGER"]
  74 -> 33 [style=solid label="VARIABLE"]
  74 -> 21 [style=solid label="'-'"]
  74 -> 22 [style=solid label="'!'"]
  74 -> 34 [style=solid label="'('"]
  74 -> 77 [style=dashed label="expr"]
  74 -> 30 [style=dashed label="const"]
  75 [label="State 75\n\l 13 exprs: exprs . ',' expr\l 15 declaration: type VARIABLE DECLARE '{' exprs . '}'\l"]
  75 -> 72 [style=solid label="','"]
  75 -> 78 [style=solid label="'}'"]
  76 [label="State 76\n\l 13 exprs: exprs ',' expr .  [',', '}']\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l"]
  76 -> 44 [style=solid label="CONJUNCTION"]
  76 -> 45 [style=solid label="'<'"]
  76 -> 46 [style=solid label="'>'"]
  76 -> 47 [style=solid label="'+'"]
  76 -> 48 [style=solid label="'-'"]
  76 -> 49 [style=solid label="'*'"]
  76 -> 50 [style=solid label="'/'"]
  76 -> "76R13" [style=solid]
 "76R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 12 exprs: expr ',' expr .  [',', '}']\l 22 expr: expr . '+' expr\l 23     | expr . '-' expr\l 24     | expr . '*' expr\l 25     | expr . '/' expr\l 26     | expr . '<' expr\l 27     | expr . '>' expr\l 29     | expr . CONJUNCTION expr\l"]
  77 -> 44 [style=solid label="CONJUNCTION"]
  77 -> 45 [style=solid label="'<'"]
  77 -> 46 [style=solid label="'>'"]
  77 -> 47 [style=solid label="'+'"]
  77 -> 48 [style=solid label="'-'"]
  77 -> 49 [style=solid label="'*'"]
  77 -> 50 [style=solid label="'/'"]
  77 -> "77R12" [style=solid]
 "77R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 15 declaration: type VARIABLE DECLARE '{' exprs '}' .\l"]
  78 -> "78R15" [style=solid]
 "78R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
}
