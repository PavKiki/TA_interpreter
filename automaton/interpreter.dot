// Generated by GNU Bison 3.3.2.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <http://www.gnu.org/software/bison/>.

digraph "interpreter.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . program $end\l  1 program: . function\l  2 function: . function stmts\l  3         | . %empty\l"]
  0 -> 1 [style=dashed label="program"]
  0 -> 2 [style=dashed label="function"]
  0 -> "0R3" [style=solid]
 "0R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  1 [label="State 1\n\l  0 $accept: program . $end\l"]
  1 -> 3 [style=solid label="$end"]
  2 [label="State 2\n\l  1 program: function .  [$end]\l  2 function: function . stmts\l  4 stmts: . stmt\l  5      | . stmts stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . '(' stmts ')'\l 17 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 18 forr: . FOR type VARIABLE DECLARE expr ':' expr NEWLINE BEGFOR stmts ENDFOR\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 45 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 46              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 47              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 48              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 49              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 50              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 51              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 52              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 53 declaration: . type VARIABLE DECLARE expr\l 54            | . type VARIABLE DECLARE vector\l 55            | . type VARIABLE DECLARE matrix\l 56 assignment: . VARIABLE ASSIGN expr\l 57           | . VVARIABLE ASSIGN vector\l 58           | . MVARIABLE ASSIGN matrix\l 59 print: . PRINT '(' expr ')'\l 60      | . PRINT '(' VVARIABLE ')'\l 61      | . PRINT '(' MVARIABLE ')'\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 75 type: . INT\l 76     | . CINT\l 77     | . VINT\l 78     | . MINT\l 79     | . CVINT\l 80     | . CMINT\l 81     | . BOOLEAN\l 82     | . CBOOLEAN\l 83     | . VBOOLEAN\l 84     | . MBOOLEAN\l 85     | . CVBOOLEAN\l 86     | . CMBOOLEAN\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  2 -> 4 [style=solid label="BOOL"]
  2 -> 5 [style=solid label="INTEGER"]
  2 -> 6 [style=solid label="VARIABLE"]
  2 -> 7 [style=solid label="VVARIABLE"]
  2 -> 8 [style=solid label="MVARIABLE"]
  2 -> 9 [style=solid label="CINT"]
  2 -> 10 [style=solid label="VINT"]
  2 -> 11 [style=solid label="MINT"]
  2 -> 12 [style=solid label="INT"]
  2 -> 13 [style=solid label="CVINT"]
  2 -> 14 [style=solid label="CMINT"]
  2 -> 15 [style=solid label="BOOLEAN"]
  2 -> 16 [style=solid label="CBOOLEAN"]
  2 -> 17 [style=solid label="VBOOLEAN"]
  2 -> 18 [style=solid label="MBOOLEAN"]
  2 -> 19 [style=solid label="CVBOOLEAN"]
  2 -> 20 [style=solid label="CMBOOLEAN"]
  2 -> 21 [style=solid label="NEWLINE"]
  2 -> 22 [style=solid label="PRINT"]
  2 -> 23 [style=solid label="IF"]
  2 -> 24 [style=solid label="FOR"]
  2 -> 25 [style=solid label="'-'"]
  2 -> 26 [style=solid label="'!'"]
  2 -> 27 [style=solid label="'('"]
  2 -> 28 [style=solid label="'{'"]
  2 -> 29 [style=dashed label="stmts"]
  2 -> 30 [style=dashed label="stmt"]
  2 -> 31 [style=dashed label="iff"]
  2 -> 32 [style=dashed label="forr"]
  2 -> 33 [style=dashed label="matrix"]
  2 -> 34 [style=dashed label="vector"]
  2 -> 35 [style=dashed label="vmdeclaration"]
  2 -> 36 [style=dashed label="declaration"]
  2 -> 37 [style=dashed label="assignment"]
  2 -> 38 [style=dashed label="print"]
  2 -> 39 [style=dashed label="expr"]
  2 -> 40 [style=dashed label="type"]
  2 -> 41 [style=dashed label="const"]
  2 -> "2R1" [style=solid]
 "2R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  3 [label="State 3\n\l  0 $accept: program $end .\l"]
  3 -> "3R0" [style=solid]
 "3R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  4 [label="State 4\n\l 88 const: BOOL .\l"]
  4 -> "4R88" [style=solid]
 "4R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l 87 const: INTEGER .\l"]
  5 -> "5R87" [style=solid]
 "5R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l 56 assignment: VARIABLE . ASSIGN expr\l 63 expr: VARIABLE .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']\l"]
  6 -> 42 [style=solid label="ASSIGN"]
  6 -> "6R63" [style=solid]
 "6R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l 35 vector: VVARIABLE . '(' vector ',' '[' ']' ')'\l 38       | VVARIABLE .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT]\l 45 vmdeclaration: VVARIABLE . '(' expr ')' ASSIGN expr\l 46              | VVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN vector\l 57 assignment: VVARIABLE . ASSIGN vector\l 73 expr: VVARIABLE . '(' expr ')'\l"]
  7 -> 43 [style=solid label="ASSIGN"]
  7 -> 44 [style=solid label="'('"]
  7 -> "7R38" [style=solid]
 "7R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l 20 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'\l 21       | MVARIABLE . '(' '[' ']' ',' vector ')'\l 22       | MVARIABLE . '(' matrix ')'\l 23       | MVARIABLE .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*']\l 36 vector: MVARIABLE . '(' expr ',' '[' ']' ')'\l 37       | MVARIABLE . '(' '[' ']' ',' expr ')'\l 47 vmdeclaration: MVARIABLE . '(' expr ',' expr ')' ASSIGN expr\l 48              | MVARIABLE . '(' expr ',' '[' ']' ')' ASSIGN vector\l 49              | MVARIABLE . '(' '[' ']' ',' expr ')' ASSIGN vector\l 50              | MVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN matrix\l 51              | MVARIABLE . '(' '[' ']' ',' vector ')' ASSIGN matrix\l 52              | MVARIABLE . '(' matrix ')' ASSIGN matrix\l 58 assignment: MVARIABLE . ASSIGN matrix\l 74 expr: MVARIABLE . '(' expr ',' expr ')'\l"]
  8 -> 45 [style=solid label="ASSIGN"]
  8 -> 46 [style=solid label="'('"]
  8 -> "8R23" [style=solid]
 "8R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l 76 type: CINT .\l"]
  9 -> "9R76" [style=solid]
 "9R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  10 [label="State 10\n\l 77 type: VINT .\l"]
  10 -> "10R77" [style=solid]
 "10R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  11 [label="State 11\n\l 78 type: MINT .\l"]
  11 -> "11R78" [style=solid]
 "11R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l 75 type: INT .\l"]
  12 -> "12R75" [style=solid]
 "12R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l 79 type: CVINT .\l"]
  13 -> "13R79" [style=solid]
 "13R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l 80 type: CMINT .\l"]
  14 -> "14R80" [style=solid]
 "14R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l 81 type: BOOLEAN .\l"]
  15 -> "15R81" [style=solid]
 "15R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l 82 type: CBOOLEAN .\l"]
  16 -> "16R82" [style=solid]
 "16R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l 83 type: VBOOLEAN .\l"]
  17 -> "17R83" [style=solid]
 "17R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 84 type: MBOOLEAN .\l"]
  18 -> "18R84" [style=solid]
 "18R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l 85 type: CVBOOLEAN .\l"]
  19 -> "19R85" [style=solid]
 "19R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l 86 type: CMBOOLEAN .\l"]
  20 -> "20R86" [style=solid]
 "20R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  21 [label="State 21\n\l  6 stmt: NEWLINE .\l"]
  21 -> "21R6" [style=solid]
 "21R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  22 [label="State 22\n\l 59 print: PRINT . '(' expr ')'\l 60      | PRINT . '(' VVARIABLE ')'\l 61      | PRINT . '(' MVARIABLE ')'\l"]
  22 -> 47 [style=solid label="'('"]
  23 [label="State 23\n\l 17 iff: IF . expr NEWLINE BEGIF stmts ENDIF\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  23 -> 4 [style=solid label="BOOL"]
  23 -> 5 [style=solid label="INTEGER"]
  23 -> 48 [style=solid label="VARIABLE"]
  23 -> 49 [style=solid label="VVARIABLE"]
  23 -> 50 [style=solid label="MVARIABLE"]
  23 -> 25 [style=solid label="'-'"]
  23 -> 26 [style=solid label="'!'"]
  23 -> 51 [style=solid label="'('"]
  23 -> 52 [style=dashed label="expr"]
  23 -> 41 [style=dashed label="const"]
  24 [label="State 24\n\l 18 forr: FOR . type VARIABLE DECLARE expr ':' expr NEWLINE BEGFOR stmts ENDFOR\l 75 type: . INT\l 76     | . CINT\l 77     | . VINT\l 78     | . MINT\l 79     | . CVINT\l 80     | . CMINT\l 81     | . BOOLEAN\l 82     | . CBOOLEAN\l 83     | . VBOOLEAN\l 84     | . MBOOLEAN\l 85     | . CVBOOLEAN\l 86     | . CMBOOLEAN\l"]
  24 -> 9 [style=solid label="CINT"]
  24 -> 10 [style=solid label="VINT"]
  24 -> 11 [style=solid label="MINT"]
  24 -> 12 [style=solid label="INT"]
  24 -> 13 [style=solid label="CVINT"]
  24 -> 14 [style=solid label="CMINT"]
  24 -> 15 [style=solid label="BOOLEAN"]
  24 -> 16 [style=solid label="CBOOLEAN"]
  24 -> 17 [style=solid label="VBOOLEAN"]
  24 -> 18 [style=solid label="MBOOLEAN"]
  24 -> 19 [style=solid label="CVBOOLEAN"]
  24 -> 20 [style=solid label="CMBOOLEAN"]
  24 -> 53 [style=dashed label="type"]
  25 [label="State 25\n\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 64     | '-' . expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  25 -> 4 [style=solid label="BOOL"]
  25 -> 5 [style=solid label="INTEGER"]
  25 -> 48 [style=solid label="VARIABLE"]
  25 -> 49 [style=solid label="VVARIABLE"]
  25 -> 50 [style=solid label="MVARIABLE"]
  25 -> 25 [style=solid label="'-'"]
  25 -> 26 [style=solid label="'!'"]
  25 -> 51 [style=solid label="'('"]
  25 -> 54 [style=dashed label="expr"]
  25 -> 41 [style=dashed label="const"]
  26 [label="State 26\n\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 70     | '!' . expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  26 -> 4 [style=solid label="BOOL"]
  26 -> 5 [style=solid label="INTEGER"]
  26 -> 48 [style=solid label="VARIABLE"]
  26 -> 49 [style=solid label="VVARIABLE"]
  26 -> 50 [style=solid label="MVARIABLE"]
  26 -> 25 [style=solid label="'-'"]
  26 -> 26 [style=solid label="'!'"]
  26 -> 51 [style=solid label="'('"]
  26 -> 55 [style=dashed label="expr"]
  26 -> 41 [style=dashed label="const"]
  27 [label="State 27\n\l  4 stmts: . stmt\l  5      | . stmts stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . '(' stmts ')'\l 16     | '(' . stmts ')'\l 17 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 18 forr: . FOR type VARIABLE DECLARE expr ':' expr NEWLINE BEGFOR stmts ENDFOR\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 45 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 46              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 47              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 48              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 49              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 50              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 51              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 52              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 53 declaration: . type VARIABLE DECLARE expr\l 54            | . type VARIABLE DECLARE vector\l 55            | . type VARIABLE DECLARE matrix\l 56 assignment: . VARIABLE ASSIGN expr\l 57           | . VVARIABLE ASSIGN vector\l 58           | . MVARIABLE ASSIGN matrix\l 59 print: . PRINT '(' expr ')'\l 60      | . PRINT '(' VVARIABLE ')'\l 61      | . PRINT '(' MVARIABLE ')'\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 72     | '(' . expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 75 type: . INT\l 76     | . CINT\l 77     | . VINT\l 78     | . MINT\l 79     | . CVINT\l 80     | . CMINT\l 81     | . BOOLEAN\l 82     | . CBOOLEAN\l 83     | . VBOOLEAN\l 84     | . MBOOLEAN\l 85     | . CVBOOLEAN\l 86     | . CMBOOLEAN\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  27 -> 4 [style=solid label="BOOL"]
  27 -> 5 [style=solid label="INTEGER"]
  27 -> 6 [style=solid label="VARIABLE"]
  27 -> 7 [style=solid label="VVARIABLE"]
  27 -> 8 [style=solid label="MVARIABLE"]
  27 -> 9 [style=solid label="CINT"]
  27 -> 10 [style=solid label="VINT"]
  27 -> 11 [style=solid label="MINT"]
  27 -> 12 [style=solid label="INT"]
  27 -> 13 [style=solid label="CVINT"]
  27 -> 14 [style=solid label="CMINT"]
  27 -> 15 [style=solid label="BOOLEAN"]
  27 -> 16 [style=solid label="CBOOLEAN"]
  27 -> 17 [style=solid label="VBOOLEAN"]
  27 -> 18 [style=solid label="MBOOLEAN"]
  27 -> 19 [style=solid label="CVBOOLEAN"]
  27 -> 20 [style=solid label="CMBOOLEAN"]
  27 -> 21 [style=solid label="NEWLINE"]
  27 -> 22 [style=solid label="PRINT"]
  27 -> 23 [style=solid label="IF"]
  27 -> 24 [style=solid label="FOR"]
  27 -> 25 [style=solid label="'-'"]
  27 -> 26 [style=solid label="'!'"]
  27 -> 27 [style=solid label="'('"]
  27 -> 28 [style=solid label="'{'"]
  27 -> 56 [style=dashed label="stmts"]
  27 -> 30 [style=dashed label="stmt"]
  27 -> 31 [style=dashed label="iff"]
  27 -> 32 [style=dashed label="forr"]
  27 -> 33 [style=dashed label="matrix"]
  27 -> 34 [style=dashed label="vector"]
  27 -> 35 [style=dashed label="vmdeclaration"]
  27 -> 36 [style=dashed label="declaration"]
  27 -> 37 [style=dashed label="assignment"]
  27 -> 38 [style=dashed label="print"]
  27 -> 57 [style=dashed label="expr"]
  27 -> 40 [style=dashed label="type"]
  27 -> 41 [style=dashed label="const"]
  28 [label="State 28\n\l 19 matrix: '{' . listexprs '}'\l 32 listexprs: . vector ',' vector\l 33          | . listexprs ',' vector\l 34 vector: . '{' exprs '}'\l 34       | '{' . exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 43 exprs: . expr ',' expr\l 44      | . exprs ',' expr\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  28 -> 4 [style=solid label="BOOL"]
  28 -> 5 [style=solid label="INTEGER"]
  28 -> 48 [style=solid label="VARIABLE"]
  28 -> 58 [style=solid label="VVARIABLE"]
  28 -> 59 [style=solid label="MVARIABLE"]
  28 -> 25 [style=solid label="'-'"]
  28 -> 26 [style=solid label="'!'"]
  28 -> 51 [style=solid label="'('"]
  28 -> 60 [style=solid label="'{'"]
  28 -> 61 [style=dashed label="listexprs"]
  28 -> 62 [style=dashed label="vector"]
  28 -> 63 [style=dashed label="exprs"]
  28 -> 64 [style=dashed label="expr"]
  28 -> 41 [style=dashed label="const"]
  29 [label="State 29\n\l  2 function: function stmts .  [$end, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FOR, '-', '!', '(', '{']\l  5 stmts: stmts . stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . '(' stmts ')'\l 17 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 18 forr: . FOR type VARIABLE DECLARE expr ':' expr NEWLINE BEGFOR stmts ENDFOR\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 45 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 46              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 47              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 48              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 49              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 50              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 51              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 52              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 53 declaration: . type VARIABLE DECLARE expr\l 54            | . type VARIABLE DECLARE vector\l 55            | . type VARIABLE DECLARE matrix\l 56 assignment: . VARIABLE ASSIGN expr\l 57           | . VVARIABLE ASSIGN vector\l 58           | . MVARIABLE ASSIGN matrix\l 59 print: . PRINT '(' expr ')'\l 60      | . PRINT '(' VVARIABLE ')'\l 61      | . PRINT '(' MVARIABLE ')'\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 75 type: . INT\l 76     | . CINT\l 77     | . VINT\l 78     | . MINT\l 79     | . CVINT\l 80     | . CMINT\l 81     | . BOOLEAN\l 82     | . CBOOLEAN\l 83     | . VBOOLEAN\l 84     | . MBOOLEAN\l 85     | . CVBOOLEAN\l 86     | . CMBOOLEAN\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  29 -> 4 [style=solid label="BOOL"]
  29 -> 5 [style=solid label="INTEGER"]
  29 -> 6 [style=solid label="VARIABLE"]
  29 -> 7 [style=solid label="VVARIABLE"]
  29 -> 8 [style=solid label="MVARIABLE"]
  29 -> 9 [style=solid label="CINT"]
  29 -> 10 [style=solid label="VINT"]
  29 -> 11 [style=solid label="MINT"]
  29 -> 12 [style=solid label="INT"]
  29 -> 13 [style=solid label="CVINT"]
  29 -> 14 [style=solid label="CMINT"]
  29 -> 15 [style=solid label="BOOLEAN"]
  29 -> 16 [style=solid label="CBOOLEAN"]
  29 -> 17 [style=solid label="VBOOLEAN"]
  29 -> 18 [style=solid label="MBOOLEAN"]
  29 -> 19 [style=solid label="CVBOOLEAN"]
  29 -> 20 [style=solid label="CMBOOLEAN"]
  29 -> 21 [style=solid label="NEWLINE"]
  29 -> 22 [style=solid label="PRINT"]
  29 -> 23 [style=solid label="IF"]
  29 -> 24 [style=solid label="FOR"]
  29 -> 25 [style=solid label="'-'"]
  29 -> 26 [style=solid label="'!'"]
  29 -> 27 [style=solid label="'('"]
  29 -> 28 [style=solid label="'{'"]
  29 -> 65 [style=dashed label="stmt"]
  29 -> 31 [style=dashed label="iff"]
  29 -> 32 [style=dashed label="forr"]
  29 -> 33 [style=dashed label="matrix"]
  29 -> 34 [style=dashed label="vector"]
  29 -> 35 [style=dashed label="vmdeclaration"]
  29 -> 36 [style=dashed label="declaration"]
  29 -> 37 [style=dashed label="assignment"]
  29 -> 38 [style=dashed label="print"]
  29 -> 39 [style=dashed label="expr"]
  29 -> 40 [style=dashed label="type"]
  29 -> 41 [style=dashed label="const"]
  29 -> "29R2d" [label="[BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FOR, '-', '!', '(', '{']", style=solid]
 "29R2d" [label="R2", fillcolor=5, shape=diamond, style=filled]
  29 -> "29R2" [style=solid]
 "29R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l  4 stmts: stmt .\l"]
  30 -> "30R4" [style=solid]
 "30R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l 14 stmt: iff . NEWLINE\l"]
  31 -> 66 [style=solid label="NEWLINE"]
  32 [label="State 32\n\l 15 stmt: forr . NEWLINE\l"]
  32 -> 67 [style=solid label="NEWLINE"]
  33 [label="State 33\n\l  9 stmt: matrix . NEWLINE\l 24 matrix: matrix . '*' matrix\l 25       | matrix . ELEMMULT matrix\l 26       | matrix . '\\''\l 27       | matrix . RIGHTSHIFT\l 28       | matrix . LEFTSHIFT\l 30       | matrix . ELEMMULT vector\l 31       | matrix . ELEMMULT expr\l"]
  33 -> 68 [style=solid label="NEWLINE"]
  33 -> 69 [style=solid label="ELEMMULT"]
  33 -> 70 [style=solid label="'\\''"]
  33 -> 71 [style=solid label="LEFTSHIFT"]
  33 -> 72 [style=solid label="RIGHTSHIFT"]
  33 -> 73 [style=solid label="'*'"]
  34 [label="State 34\n\l  8 stmt: vector . NEWLINE\l 29 matrix: vector . '\\''\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l"]
  34 -> 74 [style=solid label="NEWLINE"]
  34 -> 75 [style=solid label="ELEMMULT"]
  34 -> 76 [style=solid label="'\\''"]
  34 -> 77 [style=solid label="LEFTSHIFT"]
  34 -> 78 [style=solid label="RIGHTSHIFT"]
  35 [label="State 35\n\l 11 stmt: vmdeclaration . NEWLINE\l"]
  35 -> 79 [style=solid label="NEWLINE"]
  36 [label="State 36\n\l 12 stmt: declaration . NEWLINE\l"]
  36 -> 80 [style=solid label="NEWLINE"]
  37 [label="State 37\n\l 13 stmt: assignment . NEWLINE\l"]
  37 -> 81 [style=solid label="NEWLINE"]
  38 [label="State 38\n\l 10 stmt: print . NEWLINE\l"]
  38 -> 82 [style=solid label="NEWLINE"]
  39 [label="State 39\n\l  7 stmt: expr . NEWLINE\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  39 -> 83 [style=solid label="NEWLINE"]
  39 -> 84 [style=solid label="CONJUNCTION"]
  39 -> 85 [style=solid label="'<'"]
  39 -> 86 [style=solid label="'>'"]
  39 -> 87 [style=solid label="'+'"]
  39 -> 88 [style=solid label="'-'"]
  39 -> 89 [style=solid label="'/'"]
  40 [label="State 40\n\l 53 declaration: type . VARIABLE DECLARE expr\l 54            | type . VARIABLE DECLARE vector\l 55            | type . VARIABLE DECLARE matrix\l"]
  40 -> 90 [style=solid label="VARIABLE"]
  41 [label="State 41\n\l 62 expr: const .\l"]
  41 -> "41R62" [style=solid]
 "41R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  42 [label="State 42\n\l 56 assignment: VARIABLE ASSIGN . expr\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  42 -> 4 [style=solid label="BOOL"]
  42 -> 5 [style=solid label="INTEGER"]
  42 -> 48 [style=solid label="VARIABLE"]
  42 -> 49 [style=solid label="VVARIABLE"]
  42 -> 50 [style=solid label="MVARIABLE"]
  42 -> 25 [style=solid label="'-'"]
  42 -> 26 [style=solid label="'!'"]
  42 -> 51 [style=solid label="'('"]
  42 -> 91 [style=dashed label="expr"]
  42 -> 41 [style=dashed label="const"]
  43 [label="State 43\n\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 57 assignment: VVARIABLE ASSIGN . vector\l"]
  43 -> 92 [style=solid label="VVARIABLE"]
  43 -> 93 [style=solid label="MVARIABLE"]
  43 -> 60 [style=solid label="'{'"]
  43 -> 94 [style=dashed label="vector"]
  44 [label="State 44\n\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 35       | VVARIABLE '(' . vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 45 vmdeclaration: VVARIABLE '(' . expr ')' ASSIGN expr\l 46              | VVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN vector\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 73     | VVARIABLE '(' . expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  44 -> 4 [style=solid label="BOOL"]
  44 -> 5 [style=solid label="INTEGER"]
  44 -> 48 [style=solid label="VARIABLE"]
  44 -> 58 [style=solid label="VVARIABLE"]
  44 -> 59 [style=solid label="MVARIABLE"]
  44 -> 25 [style=solid label="'-'"]
  44 -> 26 [style=solid label="'!'"]
  44 -> 51 [style=solid label="'('"]
  44 -> 60 [style=solid label="'{'"]
  44 -> 95 [style=dashed label="vector"]
  44 -> 96 [style=dashed label="expr"]
  44 -> 41 [style=dashed label="const"]
  45 [label="State 45\n\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 58 assignment: MVARIABLE ASSIGN . matrix\l"]
  45 -> 92 [style=solid label="VVARIABLE"]
  45 -> 97 [style=solid label="MVARIABLE"]
  45 -> 28 [style=solid label="'{'"]
  45 -> 98 [style=dashed label="matrix"]
  45 -> 99 [style=dashed label="vector"]
  46 [label="State 46\n\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 20       | MVARIABLE '(' . vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 21       | MVARIABLE '(' . '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 22       | MVARIABLE '(' . matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 36       | MVARIABLE '(' . expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 37       | MVARIABLE '(' . '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 47 vmdeclaration: MVARIABLE '(' . expr ',' expr ')' ASSIGN expr\l 48              | MVARIABLE '(' . expr ',' '[' ']' ')' ASSIGN vector\l 49              | MVARIABLE '(' . '[' ']' ',' expr ')' ASSIGN vector\l 50              | MVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN matrix\l 51              | MVARIABLE '(' . '[' ']' ',' vector ')' ASSIGN matrix\l 52              | MVARIABLE '(' . matrix ')' ASSIGN matrix\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 74     | MVARIABLE '(' . expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  46 -> 4 [style=solid label="BOOL"]
  46 -> 5 [style=solid label="INTEGER"]
  46 -> 48 [style=solid label="VARIABLE"]
  46 -> 58 [style=solid label="VVARIABLE"]
  46 -> 100 [style=solid label="MVARIABLE"]
  46 -> 25 [style=solid label="'-'"]
  46 -> 26 [style=solid label="'!'"]
  46 -> 51 [style=solid label="'('"]
  46 -> 28 [style=solid label="'{'"]
  46 -> 101 [style=solid label="'['"]
  46 -> 102 [style=dashed label="matrix"]
  46 -> 103 [style=dashed label="vector"]
  46 -> 104 [style=dashed label="expr"]
  46 -> 41 [style=dashed label="const"]
  47 [label="State 47\n\l 59 print: PRINT '(' . expr ')'\l 60      | PRINT '(' . VVARIABLE ')'\l 61      | PRINT '(' . MVARIABLE ')'\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  47 -> 4 [style=solid label="BOOL"]
  47 -> 5 [style=solid label="INTEGER"]
  47 -> 48 [style=solid label="VARIABLE"]
  47 -> 105 [style=solid label="VVARIABLE"]
  47 -> 106 [style=solid label="MVARIABLE"]
  47 -> 25 [style=solid label="'-'"]
  47 -> 26 [style=solid label="'!'"]
  47 -> 51 [style=solid label="'('"]
  47 -> 107 [style=dashed label="expr"]
  47 -> 41 [style=dashed label="const"]
  48 [label="State 48\n\l 63 expr: VARIABLE .\l"]
  48 -> "48R63" [style=solid]
 "48R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  49 [label="State 49\n\l 73 expr: VVARIABLE . '(' expr ')'\l"]
  49 -> 108 [style=solid label="'('"]
  50 [label="State 50\n\l 74 expr: MVARIABLE . '(' expr ',' expr ')'\l"]
  50 -> 109 [style=solid label="'('"]
  51 [label="State 51\n\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 72     | '(' . expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  51 -> 4 [style=solid label="BOOL"]
  51 -> 5 [style=solid label="INTEGER"]
  51 -> 48 [style=solid label="VARIABLE"]
  51 -> 49 [style=solid label="VVARIABLE"]
  51 -> 50 [style=solid label="MVARIABLE"]
  51 -> 25 [style=solid label="'-'"]
  51 -> 26 [style=solid label="'!'"]
  51 -> 51 [style=solid label="'('"]
  51 -> 110 [style=dashed label="expr"]
  51 -> 41 [style=dashed label="const"]
  52 [label="State 52\n\l 17 iff: IF expr . NEWLINE BEGIF stmts ENDIF\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  52 -> 111 [style=solid label="NEWLINE"]
  52 -> 84 [style=solid label="CONJUNCTION"]
  52 -> 85 [style=solid label="'<'"]
  52 -> 86 [style=solid label="'>'"]
  52 -> 87 [style=solid label="'+'"]
  52 -> 88 [style=solid label="'-'"]
  52 -> 89 [style=solid label="'/'"]
  53 [label="State 53\n\l 18 forr: FOR type . VARIABLE DECLARE expr ':' expr NEWLINE BEGFOR stmts ENDFOR\l"]
  53 -> 112 [style=solid label="VARIABLE"]
  54 [label="State 54\n\l 64 expr: '-' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '+', '-', '*', '/', ')', ':', '}']\l 65     | expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  54 -> 84 [style=solid label="CONJUNCTION"]
  54 -> "54R64d" [label="[CONJUNCTION]", style=solid]
 "54R64d" [label="R64", fillcolor=5, shape=diamond, style=filled]
  54 -> "54R64" [style=solid]
 "54R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  55 [label="State 55\n\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 70     | '!' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '+', '-', '*', '/', ')', ':', '}']\l 71     | expr . CONJUNCTION expr\l"]
  55 -> 84 [style=solid label="CONJUNCTION"]
  55 -> "55R70d" [label="[CONJUNCTION]", style=solid]
 "55R70d" [label="R70", fillcolor=5, shape=diamond, style=filled]
  55 -> "55R70" [style=solid]
 "55R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  56 [label="State 56\n\l  5 stmts: stmts . stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . '(' stmts ')'\l 16     | '(' stmts . ')'\l 17 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 18 forr: . FOR type VARIABLE DECLARE expr ':' expr NEWLINE BEGFOR stmts ENDFOR\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 45 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 46              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 47              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 48              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 49              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 50              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 51              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 52              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 53 declaration: . type VARIABLE DECLARE expr\l 54            | . type VARIABLE DECLARE vector\l 55            | . type VARIABLE DECLARE matrix\l 56 assignment: . VARIABLE ASSIGN expr\l 57           | . VVARIABLE ASSIGN vector\l 58           | . MVARIABLE ASSIGN matrix\l 59 print: . PRINT '(' expr ')'\l 60      | . PRINT '(' VVARIABLE ')'\l 61      | . PRINT '(' MVARIABLE ')'\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 75 type: . INT\l 76     | . CINT\l 77     | . VINT\l 78     | . MINT\l 79     | . CVINT\l 80     | . CMINT\l 81     | . BOOLEAN\l 82     | . CBOOLEAN\l 83     | . VBOOLEAN\l 84     | . MBOOLEAN\l 85     | . CVBOOLEAN\l 86     | . CMBOOLEAN\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  56 -> 4 [style=solid label="BOOL"]
  56 -> 5 [style=solid label="INTEGER"]
  56 -> 6 [style=solid label="VARIABLE"]
  56 -> 7 [style=solid label="VVARIABLE"]
  56 -> 8 [style=solid label="MVARIABLE"]
  56 -> 9 [style=solid label="CINT"]
  56 -> 10 [style=solid label="VINT"]
  56 -> 11 [style=solid label="MINT"]
  56 -> 12 [style=solid label="INT"]
  56 -> 13 [style=solid label="CVINT"]
  56 -> 14 [style=solid label="CMINT"]
  56 -> 15 [style=solid label="BOOLEAN"]
  56 -> 16 [style=solid label="CBOOLEAN"]
  56 -> 17 [style=solid label="VBOOLEAN"]
  56 -> 18 [style=solid label="MBOOLEAN"]
  56 -> 19 [style=solid label="CVBOOLEAN"]
  56 -> 20 [style=solid label="CMBOOLEAN"]
  56 -> 21 [style=solid label="NEWLINE"]
  56 -> 22 [style=solid label="PRINT"]
  56 -> 23 [style=solid label="IF"]
  56 -> 24 [style=solid label="FOR"]
  56 -> 25 [style=solid label="'-'"]
  56 -> 26 [style=solid label="'!'"]
  56 -> 27 [style=solid label="'('"]
  56 -> 113 [style=solid label="')'"]
  56 -> 28 [style=solid label="'{'"]
  56 -> 65 [style=dashed label="stmt"]
  56 -> 31 [style=dashed label="iff"]
  56 -> 32 [style=dashed label="forr"]
  56 -> 33 [style=dashed label="matrix"]
  56 -> 34 [style=dashed label="vector"]
  56 -> 35 [style=dashed label="vmdeclaration"]
  56 -> 36 [style=dashed label="declaration"]
  56 -> 37 [style=dashed label="assignment"]
  56 -> 38 [style=dashed label="print"]
  56 -> 39 [style=dashed label="expr"]
  56 -> 40 [style=dashed label="type"]
  56 -> 41 [style=dashed label="const"]
  57 [label="State 57\n\l  7 stmt: expr . NEWLINE\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l 72     | '(' expr . ')'\l"]
  57 -> 83 [style=solid label="NEWLINE"]
  57 -> 84 [style=solid label="CONJUNCTION"]
  57 -> 85 [style=solid label="'<'"]
  57 -> 86 [style=solid label="'>'"]
  57 -> 87 [style=solid label="'+'"]
  57 -> 88 [style=solid label="'-'"]
  57 -> 89 [style=solid label="'/'"]
  57 -> 114 [style=solid label="')'"]
  58 [label="State 58\n\l 35 vector: VVARIABLE . '(' vector ',' '[' ']' ')'\l 38       | VVARIABLE .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', '*', ')', '}']\l 73 expr: VVARIABLE . '(' expr ')'\l"]
  58 -> 115 [style=solid label="'('"]
  58 -> "58R38" [style=solid]
 "58R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l 36 vector: MVARIABLE . '(' expr ',' '[' ']' ')'\l 37       | MVARIABLE . '(' '[' ']' ',' expr ')'\l 74 expr: MVARIABLE . '(' expr ',' expr ')'\l"]
  59 -> 116 [style=solid label="'('"]
  60 [label="State 60\n\l 34 vector: '{' . exprs '}'\l 43 exprs: . expr ',' expr\l 44      | . exprs ',' expr\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  60 -> 4 [style=solid label="BOOL"]
  60 -> 5 [style=solid label="INTEGER"]
  60 -> 48 [style=solid label="VARIABLE"]
  60 -> 49 [style=solid label="VVARIABLE"]
  60 -> 50 [style=solid label="MVARIABLE"]
  60 -> 25 [style=solid label="'-'"]
  60 -> 26 [style=solid label="'!'"]
  60 -> 51 [style=solid label="'('"]
  60 -> 63 [style=dashed label="exprs"]
  60 -> 64 [style=dashed label="expr"]
  60 -> 41 [style=dashed label="const"]
  61 [label="State 61\n\l 19 matrix: '{' listexprs . '}'\l 33 listexprs: listexprs . ',' vector\l"]
  61 -> 117 [style=solid label="','"]
  61 -> 118 [style=solid label="'}'"]
  62 [label="State 62\n\l 32 listexprs: vector . ',' vector\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l"]
  62 -> 75 [style=solid label="ELEMMULT"]
  62 -> 77 [style=solid label="LEFTSHIFT"]
  62 -> 78 [style=solid label="RIGHTSHIFT"]
  62 -> 119 [style=solid label="','"]
  63 [label="State 63\n\l 34 vector: '{' exprs . '}'\l 44 exprs: exprs . ',' expr\l"]
  63 -> 120 [style=solid label="','"]
  63 -> 121 [style=solid label="'}'"]
  64 [label="State 64\n\l 43 exprs: expr . ',' expr\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  64 -> 84 [style=solid label="CONJUNCTION"]
  64 -> 122 [style=solid label="','"]
  64 -> 85 [style=solid label="'<'"]
  64 -> 86 [style=solid label="'>'"]
  64 -> 87 [style=solid label="'+'"]
  64 -> 88 [style=solid label="'-'"]
  64 -> 89 [style=solid label="'/'"]
  65 [label="State 65\n\l  5 stmts: stmts stmt .\l"]
  65 -> "65R5" [style=solid]
 "65R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l 14 stmt: iff NEWLINE .\l"]
  66 -> "66R14" [style=solid]
 "66R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l 15 stmt: forr NEWLINE .\l"]
  67 -> "67R15" [style=solid]
 "67R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l  9 stmt: matrix NEWLINE .\l"]
  68 -> "68R9" [style=solid]
 "68R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 25       | matrix ELEMMULT . matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 30       | matrix ELEMMULT . vector\l 31       | . matrix ELEMMULT expr\l 31       | matrix ELEMMULT . expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  69 -> 4 [style=solid label="BOOL"]
  69 -> 5 [style=solid label="INTEGER"]
  69 -> 48 [style=solid label="VARIABLE"]
  69 -> 58 [style=solid label="VVARIABLE"]
  69 -> 100 [style=solid label="MVARIABLE"]
  69 -> 25 [style=solid label="'-'"]
  69 -> 26 [style=solid label="'!'"]
  69 -> 51 [style=solid label="'('"]
  69 -> 28 [style=solid label="'{'"]
  69 -> 123 [style=dashed label="matrix"]
  69 -> 124 [style=dashed label="vector"]
  69 -> 125 [style=dashed label="expr"]
  69 -> 41 [style=dashed label="const"]
  70 [label="State 70\n\l 26 matrix: matrix '\\'' .\l"]
  70 -> "70R26" [style=solid]
 "70R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l 28 matrix: matrix LEFTSHIFT .\l"]
  71 -> "71R28" [style=solid]
 "71R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 27 matrix: matrix RIGHTSHIFT .\l"]
  72 -> "72R27" [style=solid]
 "72R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 24       | matrix '*' . matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l"]
  73 -> 92 [style=solid label="VVARIABLE"]
  73 -> 97 [style=solid label="MVARIABLE"]
  73 -> 28 [style=solid label="'{'"]
  73 -> 126 [style=dashed label="matrix"]
  73 -> 99 [style=dashed label="vector"]
  74 [label="State 74\n\l  8 stmt: vector NEWLINE .\l"]
  74 -> "74R8" [style=solid]
 "74R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 39       | vector ELEMMULT . vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 42       | vector ELEMMULT . expr\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  75 -> 4 [style=solid label="BOOL"]
  75 -> 5 [style=solid label="INTEGER"]
  75 -> 48 [style=solid label="VARIABLE"]
  75 -> 58 [style=solid label="VVARIABLE"]
  75 -> 59 [style=solid label="MVARIABLE"]
  75 -> 25 [style=solid label="'-'"]
  75 -> 26 [style=solid label="'!'"]
  75 -> 51 [style=solid label="'('"]
  75 -> 60 [style=solid label="'{'"]
  75 -> 127 [style=dashed label="vector"]
  75 -> 128 [style=dashed label="expr"]
  75 -> 41 [style=dashed label="const"]
  76 [label="State 76\n\l 29 matrix: vector '\\'' .\l"]
  76 -> "76R29" [style=solid]
 "76R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 41 vector: vector LEFTSHIFT .\l"]
  77 -> "77R41" [style=solid]
 "77R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 40 vector: vector RIGHTSHIFT .\l"]
  78 -> "78R40" [style=solid]
 "78R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l 11 stmt: vmdeclaration NEWLINE .\l"]
  79 -> "79R11" [style=solid]
 "79R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l 12 stmt: declaration NEWLINE .\l"]
  80 -> "80R12" [style=solid]
 "80R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l 13 stmt: assignment NEWLINE .\l"]
  81 -> "81R13" [style=solid]
 "81R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l 10 stmt: print NEWLINE .\l"]
  82 -> "82R10" [style=solid]
 "82R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l  7 stmt: expr NEWLINE .\l"]
  83 -> "83R7" [style=solid]
 "83R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 71     | expr CONJUNCTION . expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  84 -> 4 [style=solid label="BOOL"]
  84 -> 5 [style=solid label="INTEGER"]
  84 -> 48 [style=solid label="VARIABLE"]
  84 -> 49 [style=solid label="VVARIABLE"]
  84 -> 50 [style=solid label="MVARIABLE"]
  84 -> 25 [style=solid label="'-'"]
  84 -> 26 [style=solid label="'!'"]
  84 -> 51 [style=solid label="'('"]
  84 -> 129 [style=dashed label="expr"]
  84 -> 41 [style=dashed label="const"]
  85 [label="State 85\n\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 68     | expr '<' . expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  85 -> 4 [style=solid label="BOOL"]
  85 -> 5 [style=solid label="INTEGER"]
  85 -> 48 [style=solid label="VARIABLE"]
  85 -> 49 [style=solid label="VVARIABLE"]
  85 -> 50 [style=solid label="MVARIABLE"]
  85 -> 25 [style=solid label="'-'"]
  85 -> 26 [style=solid label="'!'"]
  85 -> 51 [style=solid label="'('"]
  85 -> 130 [style=dashed label="expr"]
  85 -> 41 [style=dashed label="const"]
  86 [label="State 86\n\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 69     | expr '>' . expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  86 -> 4 [style=solid label="BOOL"]
  86 -> 5 [style=solid label="INTEGER"]
  86 -> 48 [style=solid label="VARIABLE"]
  86 -> 49 [style=solid label="VVARIABLE"]
  86 -> 50 [style=solid label="MVARIABLE"]
  86 -> 25 [style=solid label="'-'"]
  86 -> 26 [style=solid label="'!'"]
  86 -> 51 [style=solid label="'('"]
  86 -> 131 [style=dashed label="expr"]
  86 -> 41 [style=dashed label="const"]
  87 [label="State 87\n\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 65     | expr '+' . expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  87 -> 4 [style=solid label="BOOL"]
  87 -> 5 [style=solid label="INTEGER"]
  87 -> 48 [style=solid label="VARIABLE"]
  87 -> 49 [style=solid label="VVARIABLE"]
  87 -> 50 [style=solid label="MVARIABLE"]
  87 -> 25 [style=solid label="'-'"]
  87 -> 26 [style=solid label="'!'"]
  87 -> 51 [style=solid label="'('"]
  87 -> 132 [style=dashed label="expr"]
  87 -> 41 [style=dashed label="const"]
  88 [label="State 88\n\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 66     | expr '-' . expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  88 -> 4 [style=solid label="BOOL"]
  88 -> 5 [style=solid label="INTEGER"]
  88 -> 48 [style=solid label="VARIABLE"]
  88 -> 49 [style=solid label="VVARIABLE"]
  88 -> 50 [style=solid label="MVARIABLE"]
  88 -> 25 [style=solid label="'-'"]
  88 -> 26 [style=solid label="'!'"]
  88 -> 51 [style=solid label="'('"]
  88 -> 133 [style=dashed label="expr"]
  88 -> 41 [style=dashed label="const"]
  89 [label="State 89\n\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 67     | expr '/' . expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  89 -> 4 [style=solid label="BOOL"]
  89 -> 5 [style=solid label="INTEGER"]
  89 -> 48 [style=solid label="VARIABLE"]
  89 -> 49 [style=solid label="VVARIABLE"]
  89 -> 50 [style=solid label="MVARIABLE"]
  89 -> 25 [style=solid label="'-'"]
  89 -> 26 [style=solid label="'!'"]
  89 -> 51 [style=solid label="'('"]
  89 -> 134 [style=dashed label="expr"]
  89 -> 41 [style=dashed label="const"]
  90 [label="State 90\n\l 53 declaration: type VARIABLE . DECLARE expr\l 54            | type VARIABLE . DECLARE vector\l 55            | type VARIABLE . DECLARE matrix\l"]
  90 -> 135 [style=solid label="DECLARE"]
  91 [label="State 91\n\l 56 assignment: VARIABLE ASSIGN expr .  [NEWLINE]\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  91 -> 84 [style=solid label="CONJUNCTION"]
  91 -> 85 [style=solid label="'<'"]
  91 -> 86 [style=solid label="'>'"]
  91 -> 87 [style=solid label="'+'"]
  91 -> 88 [style=solid label="'-'"]
  91 -> 89 [style=solid label="'/'"]
  91 -> "91R56" [style=solid]
 "91R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l 35 vector: VVARIABLE . '(' vector ',' '[' ']' ')'\l 38       | VVARIABLE .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', '}']\l"]
  92 -> 136 [style=solid label="'('"]
  92 -> "92R38" [style=solid]
 "92R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l 36 vector: MVARIABLE . '(' expr ',' '[' ']' ')'\l 37       | MVARIABLE . '(' '[' ']' ',' expr ')'\l"]
  93 -> 137 [style=solid label="'('"]
  94 [label="State 94\n\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l 57 assignment: VVARIABLE ASSIGN vector .  [NEWLINE]\l"]
  94 -> 75 [style=solid label="ELEMMULT"]
  94 -> 77 [style=solid label="LEFTSHIFT"]
  94 -> 78 [style=solid label="RIGHTSHIFT"]
  94 -> "94R57" [style=solid]
 "94R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  95 [label="State 95\n\l 35 vector: VVARIABLE '(' vector . ',' '[' ']' ')'\l 39       | vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l 46 vmdeclaration: VVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN vector\l"]
  95 -> 75 [style=solid label="ELEMMULT"]
  95 -> 77 [style=solid label="LEFTSHIFT"]
  95 -> 78 [style=solid label="RIGHTSHIFT"]
  95 -> 138 [style=solid label="','"]
  96 [label="State 96\n\l 45 vmdeclaration: VVARIABLE '(' expr . ')' ASSIGN expr\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l 73     | VVARIABLE '(' expr . ')'\l"]
  96 -> 84 [style=solid label="CONJUNCTION"]
  96 -> 85 [style=solid label="'<'"]
  96 -> 86 [style=solid label="'>'"]
  96 -> 87 [style=solid label="'+'"]
  96 -> 88 [style=solid label="'-'"]
  96 -> 89 [style=solid label="'/'"]
  96 -> 139 [style=solid label="')'"]
  97 [label="State 97\n\l 20 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'\l 21       | MVARIABLE . '(' '[' ']' ',' vector ')'\l 22       | MVARIABLE . '(' matrix ')'\l 23       | MVARIABLE .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*', ')']\l 36 vector: MVARIABLE . '(' expr ',' '[' ']' ')'\l 37       | MVARIABLE . '(' '[' ']' ',' expr ')'\l"]
  97 -> 140 [style=solid label="'('"]
  97 -> "97R23" [style=solid]
 "97R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l 24 matrix: matrix . '*' matrix\l 25       | matrix . ELEMMULT matrix\l 26       | matrix . '\\''\l 27       | matrix . RIGHTSHIFT\l 28       | matrix . LEFTSHIFT\l 30       | matrix . ELEMMULT vector\l 31       | matrix . ELEMMULT expr\l 58 assignment: MVARIABLE ASSIGN matrix .  [NEWLINE]\l"]
  98 -> 69 [style=solid label="ELEMMULT"]
  98 -> 70 [style=solid label="'\\''"]
  98 -> 71 [style=solid label="LEFTSHIFT"]
  98 -> 72 [style=solid label="RIGHTSHIFT"]
  98 -> 73 [style=solid label="'*'"]
  98 -> "98R58" [style=solid]
 "98R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l 29 matrix: vector . '\\''\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l"]
  99 -> 75 [style=solid label="ELEMMULT"]
  99 -> 76 [style=solid label="'\\''"]
  99 -> 77 [style=solid label="LEFTSHIFT"]
  99 -> 78 [style=solid label="RIGHTSHIFT"]
  100 [label="State 100\n\l 20 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'\l 21       | MVARIABLE . '(' '[' ']' ',' vector ')'\l 22       | MVARIABLE . '(' matrix ')'\l 23       | MVARIABLE .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*', ')']\l 36 vector: MVARIABLE . '(' expr ',' '[' ']' ')'\l 37       | MVARIABLE . '(' '[' ']' ',' expr ')'\l 74 expr: MVARIABLE . '(' expr ',' expr ')'\l"]
  100 -> 141 [style=solid label="'('"]
  100 -> "100R23" [style=solid]
 "100R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l 21 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'\l 37 vector: MVARIABLE '(' '[' . ']' ',' expr ')'\l 49 vmdeclaration: MVARIABLE '(' '[' . ']' ',' expr ')' ASSIGN vector\l 51              | MVARIABLE '(' '[' . ']' ',' vector ')' ASSIGN matrix\l"]
  101 -> 142 [style=solid label="']'"]
  102 [label="State 102\n\l 22 matrix: MVARIABLE '(' matrix . ')'\l 24       | matrix . '*' matrix\l 25       | matrix . ELEMMULT matrix\l 26       | matrix . '\\''\l 27       | matrix . RIGHTSHIFT\l 28       | matrix . LEFTSHIFT\l 30       | matrix . ELEMMULT vector\l 31       | matrix . ELEMMULT expr\l 52 vmdeclaration: MVARIABLE '(' matrix . ')' ASSIGN matrix\l"]
  102 -> 69 [style=solid label="ELEMMULT"]
  102 -> 70 [style=solid label="'\\''"]
  102 -> 71 [style=solid label="LEFTSHIFT"]
  102 -> 72 [style=solid label="RIGHTSHIFT"]
  102 -> 73 [style=solid label="'*'"]
  102 -> 143 [style=solid label="')'"]
  103 [label="State 103\n\l 20 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'\l 29       | vector . '\\''\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l 50 vmdeclaration: MVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN matrix\l"]
  103 -> 75 [style=solid label="ELEMMULT"]
  103 -> 76 [style=solid label="'\\''"]
  103 -> 77 [style=solid label="LEFTSHIFT"]
  103 -> 78 [style=solid label="RIGHTSHIFT"]
  103 -> 144 [style=solid label="','"]
  104 [label="State 104\n\l 36 vector: MVARIABLE '(' expr . ',' '[' ']' ')'\l 47 vmdeclaration: MVARIABLE '(' expr . ',' expr ')' ASSIGN expr\l 48              | MVARIABLE '(' expr . ',' '[' ']' ')' ASSIGN vector\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l 74     | MVARIABLE '(' expr . ',' expr ')'\l"]
  104 -> 84 [style=solid label="CONJUNCTION"]
  104 -> 145 [style=solid label="','"]
  104 -> 85 [style=solid label="'<'"]
  104 -> 86 [style=solid label="'>'"]
  104 -> 87 [style=solid label="'+'"]
  104 -> 88 [style=solid label="'-'"]
  104 -> 89 [style=solid label="'/'"]
  105 [label="State 105\n\l 60 print: PRINT '(' VVARIABLE . ')'\l 73 expr: VVARIABLE . '(' expr ')'\l"]
  105 -> 108 [style=solid label="'('"]
  105 -> 146 [style=solid label="')'"]
  106 [label="State 106\n\l 61 print: PRINT '(' MVARIABLE . ')'\l 74 expr: MVARIABLE . '(' expr ',' expr ')'\l"]
  106 -> 109 [style=solid label="'('"]
  106 -> 147 [style=solid label="')'"]
  107 [label="State 107\n\l 59 print: PRINT '(' expr . ')'\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  107 -> 84 [style=solid label="CONJUNCTION"]
  107 -> 85 [style=solid label="'<'"]
  107 -> 86 [style=solid label="'>'"]
  107 -> 87 [style=solid label="'+'"]
  107 -> 88 [style=solid label="'-'"]
  107 -> 89 [style=solid label="'/'"]
  107 -> 148 [style=solid label="')'"]
  108 [label="State 108\n\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 73     | VVARIABLE '(' . expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  108 -> 4 [style=solid label="BOOL"]
  108 -> 5 [style=solid label="INTEGER"]
  108 -> 48 [style=solid label="VARIABLE"]
  108 -> 49 [style=solid label="VVARIABLE"]
  108 -> 50 [style=solid label="MVARIABLE"]
  108 -> 25 [style=solid label="'-'"]
  108 -> 26 [style=solid label="'!'"]
  108 -> 51 [style=solid label="'('"]
  108 -> 149 [style=dashed label="expr"]
  108 -> 41 [style=dashed label="const"]
  109 [label="State 109\n\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 74     | MVARIABLE '(' . expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  109 -> 4 [style=solid label="BOOL"]
  109 -> 5 [style=solid label="INTEGER"]
  109 -> 48 [style=solid label="VARIABLE"]
  109 -> 49 [style=solid label="VVARIABLE"]
  109 -> 50 [style=solid label="MVARIABLE"]
  109 -> 25 [style=solid label="'-'"]
  109 -> 26 [style=solid label="'!'"]
  109 -> 51 [style=solid label="'('"]
  109 -> 150 [style=dashed label="expr"]
  109 -> 41 [style=dashed label="const"]
  110 [label="State 110\n\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l 72     | '(' expr . ')'\l"]
  110 -> 84 [style=solid label="CONJUNCTION"]
  110 -> 85 [style=solid label="'<'"]
  110 -> 86 [style=solid label="'>'"]
  110 -> 87 [style=solid label="'+'"]
  110 -> 88 [style=solid label="'-'"]
  110 -> 89 [style=solid label="'/'"]
  110 -> 114 [style=solid label="')'"]
  111 [label="State 111\n\l 17 iff: IF expr NEWLINE . BEGIF stmts ENDIF\l"]
  111 -> 151 [style=solid label="BEGIF"]
  112 [label="State 112\n\l 18 forr: FOR type VARIABLE . DECLARE expr ':' expr NEWLINE BEGFOR stmts ENDFOR\l"]
  112 -> 152 [style=solid label="DECLARE"]
  113 [label="State 113\n\l 16 stmt: '(' stmts ')' .\l"]
  113 -> "113R16" [style=solid]
 "113R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  114 [label="State 114\n\l 72 expr: '(' expr ')' .\l"]
  114 -> "114R72" [style=solid]
 "114R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  115 [label="State 115\n\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 35       | VVARIABLE '(' . vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 73     | VVARIABLE '(' . expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  115 -> 4 [style=solid label="BOOL"]
  115 -> 5 [style=solid label="INTEGER"]
  115 -> 48 [style=solid label="VARIABLE"]
  115 -> 58 [style=solid label="VVARIABLE"]
  115 -> 59 [style=solid label="MVARIABLE"]
  115 -> 25 [style=solid label="'-'"]
  115 -> 26 [style=solid label="'!'"]
  115 -> 51 [style=solid label="'('"]
  115 -> 60 [style=solid label="'{'"]
  115 -> 153 [style=dashed label="vector"]
  115 -> 149 [style=dashed label="expr"]
  115 -> 41 [style=dashed label="const"]
  116 [label="State 116\n\l 36 vector: MVARIABLE '(' . expr ',' '[' ']' ')'\l 37       | MVARIABLE '(' . '[' ']' ',' expr ')'\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 74     | MVARIABLE '(' . expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  116 -> 4 [style=solid label="BOOL"]
  116 -> 5 [style=solid label="INTEGER"]
  116 -> 48 [style=solid label="VARIABLE"]
  116 -> 49 [style=solid label="VVARIABLE"]
  116 -> 50 [style=solid label="MVARIABLE"]
  116 -> 25 [style=solid label="'-'"]
  116 -> 26 [style=solid label="'!'"]
  116 -> 51 [style=solid label="'('"]
  116 -> 154 [style=solid label="'['"]
  116 -> 155 [style=dashed label="expr"]
  116 -> 41 [style=dashed label="const"]
  117 [label="State 117\n\l 33 listexprs: listexprs ',' . vector\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l"]
  117 -> 92 [style=solid label="VVARIABLE"]
  117 -> 93 [style=solid label="MVARIABLE"]
  117 -> 60 [style=solid label="'{'"]
  117 -> 156 [style=dashed label="vector"]
  118 [label="State 118\n\l 19 matrix: '{' listexprs '}' .\l"]
  118 -> "118R19" [style=solid]
 "118R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  119 [label="State 119\n\l 32 listexprs: vector ',' . vector\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l"]
  119 -> 92 [style=solid label="VVARIABLE"]
  119 -> 93 [style=solid label="MVARIABLE"]
  119 -> 60 [style=solid label="'{'"]
  119 -> 157 [style=dashed label="vector"]
  120 [label="State 120\n\l 44 exprs: exprs ',' . expr\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  120 -> 4 [style=solid label="BOOL"]
  120 -> 5 [style=solid label="INTEGER"]
  120 -> 48 [style=solid label="VARIABLE"]
  120 -> 49 [style=solid label="VVARIABLE"]
  120 -> 50 [style=solid label="MVARIABLE"]
  120 -> 25 [style=solid label="'-'"]
  120 -> 26 [style=solid label="'!'"]
  120 -> 51 [style=solid label="'('"]
  120 -> 158 [style=dashed label="expr"]
  120 -> 41 [style=dashed label="const"]
  121 [label="State 121\n\l 34 vector: '{' exprs '}' .\l"]
  121 -> "121R34" [style=solid]
 "121R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  122 [label="State 122\n\l 43 exprs: expr ',' . expr\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  122 -> 4 [style=solid label="BOOL"]
  122 -> 5 [style=solid label="INTEGER"]
  122 -> 48 [style=solid label="VARIABLE"]
  122 -> 49 [style=solid label="VVARIABLE"]
  122 -> 50 [style=solid label="MVARIABLE"]
  122 -> 25 [style=solid label="'-'"]
  122 -> 26 [style=solid label="'!'"]
  122 -> 51 [style=solid label="'('"]
  122 -> 159 [style=dashed label="expr"]
  122 -> 41 [style=dashed label="const"]
  123 [label="State 123\n\l 24 matrix: matrix . '*' matrix\l 25       | matrix . ELEMMULT matrix\l 25       | matrix ELEMMULT matrix .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*', ')']\l 26       | matrix . '\\''\l 27       | matrix . RIGHTSHIFT\l 28       | matrix . LEFTSHIFT\l 30       | matrix . ELEMMULT vector\l 31       | matrix . ELEMMULT expr\l"]
  123 -> 69 [style=solid label="ELEMMULT"]
  123 -> 70 [style=solid label="'\\''"]
  123 -> 71 [style=solid label="LEFTSHIFT"]
  123 -> 72 [style=solid label="RIGHTSHIFT"]
  123 -> 73 [style=solid label="'*'"]
  123 -> "123R25d" [label="[ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*']", style=solid]
 "123R25d" [label="R25", fillcolor=5, shape=diamond, style=filled]
  123 -> "123R25" [style=solid]
 "123R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l 29 matrix: vector . '\\''\l 30       | matrix ELEMMULT vector .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*', ')']\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l"]
  124 -> 75 [style=solid label="ELEMMULT"]
  124 -> 76 [style=solid label="'\\''"]
  124 -> 77 [style=solid label="LEFTSHIFT"]
  124 -> 78 [style=solid label="RIGHTSHIFT"]
  124 -> "124R30d" [label="[ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT]", style=solid]
 "124R30d" [label="R30", fillcolor=5, shape=diamond, style=filled]
  124 -> "124R30" [style=solid]
 "124R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  125 [label="State 125\n\l 31 matrix: matrix ELEMMULT expr .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*', ')']\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  125 -> 84 [style=solid label="CONJUNCTION"]
  125 -> 85 [style=solid label="'<'"]
  125 -> 86 [style=solid label="'>'"]
  125 -> 87 [style=solid label="'+'"]
  125 -> 88 [style=solid label="'-'"]
  125 -> 89 [style=solid label="'/'"]
  125 -> "125R31" [style=solid]
 "125R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  126 [label="State 126\n\l 24 matrix: matrix . '*' matrix\l 24       | matrix '*' matrix .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*', ')']\l 25       | matrix . ELEMMULT matrix\l 26       | matrix . '\\''\l 27       | matrix . RIGHTSHIFT\l 28       | matrix . LEFTSHIFT\l 30       | matrix . ELEMMULT vector\l 31       | matrix . ELEMMULT expr\l"]
  126 -> 69 [style=solid label="ELEMMULT"]
  126 -> 70 [style=solid label="'\\''"]
  126 -> 71 [style=solid label="LEFTSHIFT"]
  126 -> 72 [style=solid label="RIGHTSHIFT"]
  126 -> "126R24d" [label="[ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT]", style=solid]
 "126R24d" [label="R24", fillcolor=5, shape=diamond, style=filled]
  126 -> "126R24" [style=solid]
 "126R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  127 [label="State 127\n\l 39 vector: vector . ELEMMULT vector\l 39       | vector ELEMMULT vector .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', '*', ')', '}']\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l"]
  127 -> 75 [style=solid label="ELEMMULT"]
  127 -> 77 [style=solid label="LEFTSHIFT"]
  127 -> 78 [style=solid label="RIGHTSHIFT"]
  127 -> "127R39d" [label="[ELEMMULT, LEFTSHIFT, RIGHTSHIFT]", style=solid]
 "127R39d" [label="R39", fillcolor=5, shape=diamond, style=filled]
  127 -> "127R39" [style=solid]
 "127R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l 42 vector: vector ELEMMULT expr .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', '*', ')', '}']\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  128 -> 84 [style=solid label="CONJUNCTION"]
  128 -> 85 [style=solid label="'<'"]
  128 -> 86 [style=solid label="'>'"]
  128 -> 87 [style=solid label="'+'"]
  128 -> 88 [style=solid label="'-'"]
  128 -> 89 [style=solid label="'/'"]
  128 -> "128R42" [style=solid]
 "128R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  129 [label="State 129\n\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l 71     | expr CONJUNCTION expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '+', '-', '*', '/', ')', ':', '}']\l"]
  129 -> 84 [style=solid label="CONJUNCTION"]
  129 -> 85 [style=solid label="'<'"]
  129 -> 86 [style=solid label="'>'"]
  129 -> 87 [style=solid label="'+'"]
  129 -> 88 [style=solid label="'-'"]
  129 -> 89 [style=solid label="'/'"]
  129 -> "129R71d" [label="[CONJUNCTION, '<', '>', '+', '-', '/']", style=solid]
 "129R71d" [label="R71", fillcolor=5, shape=diamond, style=filled]
  129 -> "129R71" [style=solid]
 "129R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  130 [label="State 130\n\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 68     | expr '<' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '*', ')', ':', '}']\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  130 -> 84 [style=solid label="CONJUNCTION"]
  130 -> 87 [style=solid label="'+'"]
  130 -> 88 [style=solid label="'-'"]
  130 -> 89 [style=solid label="'/'"]
  130 -> "130R68d" [label="[CONJUNCTION]", style=solid]
 "130R68d" [label="R68", fillcolor=5, shape=diamond, style=filled]
  130 -> "130R68" [style=solid]
 "130R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  131 [label="State 131\n\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 69     | expr '>' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '*', ')', ':', '}']\l 71     | expr . CONJUNCTION expr\l"]
  131 -> 84 [style=solid label="CONJUNCTION"]
  131 -> 87 [style=solid label="'+'"]
  131 -> 88 [style=solid label="'-'"]
  131 -> 89 [style=solid label="'/'"]
  131 -> "131R69d" [label="[CONJUNCTION]", style=solid]
 "131R69d" [label="R69", fillcolor=5, shape=diamond, style=filled]
  131 -> "131R69" [style=solid]
 "131R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  132 [label="State 132\n\l 65 expr: expr . '+' expr\l 65     | expr '+' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '+', '-', '*', ')', ':', '}']\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  132 -> 84 [style=solid label="CONJUNCTION"]
  132 -> 89 [style=solid label="'/'"]
  132 -> "132R65d" [label="[CONJUNCTION]", style=solid]
 "132R65d" [label="R65", fillcolor=5, shape=diamond, style=filled]
  132 -> "132R65" [style=solid]
 "132R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  133 [label="State 133\n\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 66     | expr '-' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '+', '-', '*', ')', ':', '}']\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  133 -> 84 [style=solid label="CONJUNCTION"]
  133 -> 89 [style=solid label="'/'"]
  133 -> "133R66d" [label="[CONJUNCTION]", style=solid]
 "133R66d" [label="R66", fillcolor=5, shape=diamond, style=filled]
  133 -> "133R66" [style=solid]
 "133R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  134 [label="State 134\n\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 67     | expr '/' expr .  [NEWLINE, CONJUNCTION, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, ',', '<', '>', '+', '-', '*', '/', ')', ':', '}']\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  134 -> 84 [style=solid label="CONJUNCTION"]
  134 -> "134R67d" [label="[CONJUNCTION]", style=solid]
 "134R67d" [label="R67", fillcolor=5, shape=diamond, style=filled]
  134 -> "134R67" [style=solid]
 "134R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  135 [label="State 135\n\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 53 declaration: type VARIABLE DECLARE . expr\l 54            | type VARIABLE DECLARE . vector\l 55            | type VARIABLE DECLARE . matrix\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  135 -> 4 [style=solid label="BOOL"]
  135 -> 5 [style=solid label="INTEGER"]
  135 -> 48 [style=solid label="VARIABLE"]
  135 -> 58 [style=solid label="VVARIABLE"]
  135 -> 100 [style=solid label="MVARIABLE"]
  135 -> 25 [style=solid label="'-'"]
  135 -> 26 [style=solid label="'!'"]
  135 -> 51 [style=solid label="'('"]
  135 -> 28 [style=solid label="'{'"]
  135 -> 160 [style=dashed label="matrix"]
  135 -> 161 [style=dashed label="vector"]
  135 -> 162 [style=dashed label="expr"]
  135 -> 41 [style=dashed label="const"]
  136 [label="State 136\n\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 35       | VVARIABLE '(' . vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l"]
  136 -> 92 [style=solid label="VVARIABLE"]
  136 -> 93 [style=solid label="MVARIABLE"]
  136 -> 60 [style=solid label="'{'"]
  136 -> 153 [style=dashed label="vector"]
  137 [label="State 137\n\l 36 vector: MVARIABLE '(' . expr ',' '[' ']' ')'\l 37       | MVARIABLE '(' . '[' ']' ',' expr ')'\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  137 -> 4 [style=solid label="BOOL"]
  137 -> 5 [style=solid label="INTEGER"]
  137 -> 48 [style=solid label="VARIABLE"]
  137 -> 49 [style=solid label="VVARIABLE"]
  137 -> 50 [style=solid label="MVARIABLE"]
  137 -> 25 [style=solid label="'-'"]
  137 -> 26 [style=solid label="'!'"]
  137 -> 51 [style=solid label="'('"]
  137 -> 154 [style=solid label="'['"]
  137 -> 163 [style=dashed label="expr"]
  137 -> 41 [style=dashed label="const"]
  138 [label="State 138\n\l 35 vector: VVARIABLE '(' vector ',' . '[' ']' ')'\l 46 vmdeclaration: VVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN vector\l"]
  138 -> 164 [style=solid label="'['"]
  139 [label="State 139\n\l 45 vmdeclaration: VVARIABLE '(' expr ')' . ASSIGN expr\l 73 expr: VVARIABLE '(' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']\l"]
  139 -> 165 [style=solid label="ASSIGN"]
  139 -> "139R73" [style=solid]
 "139R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  140 [label="State 140\n\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 20       | MVARIABLE '(' . vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 21       | MVARIABLE '(' . '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 22       | MVARIABLE '(' . matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 36       | MVARIABLE '(' . expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 37       | MVARIABLE '(' . '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  140 -> 4 [style=solid label="BOOL"]
  140 -> 5 [style=solid label="INTEGER"]
  140 -> 48 [style=solid label="VARIABLE"]
  140 -> 58 [style=solid label="VVARIABLE"]
  140 -> 100 [style=solid label="MVARIABLE"]
  140 -> 25 [style=solid label="'-'"]
  140 -> 26 [style=solid label="'!'"]
  140 -> 51 [style=solid label="'('"]
  140 -> 28 [style=solid label="'{'"]
  140 -> 166 [style=solid label="'['"]
  140 -> 167 [style=dashed label="matrix"]
  140 -> 168 [style=dashed label="vector"]
  140 -> 163 [style=dashed label="expr"]
  140 -> 41 [style=dashed label="const"]
  141 [label="State 141\n\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 20       | MVARIABLE '(' . vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 21       | MVARIABLE '(' . '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 22       | MVARIABLE '(' . matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 36       | MVARIABLE '(' . expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 37       | MVARIABLE '(' . '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 74     | MVARIABLE '(' . expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  141 -> 4 [style=solid label="BOOL"]
  141 -> 5 [style=solid label="INTEGER"]
  141 -> 48 [style=solid label="VARIABLE"]
  141 -> 58 [style=solid label="VVARIABLE"]
  141 -> 100 [style=solid label="MVARIABLE"]
  141 -> 25 [style=solid label="'-'"]
  141 -> 26 [style=solid label="'!'"]
  141 -> 51 [style=solid label="'('"]
  141 -> 28 [style=solid label="'{'"]
  141 -> 166 [style=solid label="'['"]
  141 -> 167 [style=dashed label="matrix"]
  141 -> 168 [style=dashed label="vector"]
  141 -> 155 [style=dashed label="expr"]
  141 -> 41 [style=dashed label="const"]
  142 [label="State 142\n\l 21 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'\l 37 vector: MVARIABLE '(' '[' ']' . ',' expr ')'\l 49 vmdeclaration: MVARIABLE '(' '[' ']' . ',' expr ')' ASSIGN vector\l 51              | MVARIABLE '(' '[' ']' . ',' vector ')' ASSIGN matrix\l"]
  142 -> 169 [style=solid label="','"]
  143 [label="State 143\n\l 22 matrix: MVARIABLE '(' matrix ')' .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*']\l 52 vmdeclaration: MVARIABLE '(' matrix ')' . ASSIGN matrix\l"]
  143 -> 170 [style=solid label="ASSIGN"]
  143 -> "143R22" [style=solid]
 "143R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  144 [label="State 144\n\l 20 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'\l 50 vmdeclaration: MVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN matrix\l"]
  144 -> 171 [style=solid label="'['"]
  145 [label="State 145\n\l 36 vector: MVARIABLE '(' expr ',' . '[' ']' ')'\l 47 vmdeclaration: MVARIABLE '(' expr ',' . expr ')' ASSIGN expr\l 48              | MVARIABLE '(' expr ',' . '[' ']' ')' ASSIGN vector\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 74     | MVARIABLE '(' expr ',' . expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  145 -> 4 [style=solid label="BOOL"]
  145 -> 5 [style=solid label="INTEGER"]
  145 -> 48 [style=solid label="VARIABLE"]
  145 -> 49 [style=solid label="VVARIABLE"]
  145 -> 50 [style=solid label="MVARIABLE"]
  145 -> 25 [style=solid label="'-'"]
  145 -> 26 [style=solid label="'!'"]
  145 -> 51 [style=solid label="'('"]
  145 -> 172 [style=solid label="'['"]
  145 -> 173 [style=dashed label="expr"]
  145 -> 41 [style=dashed label="const"]
  146 [label="State 146\n\l 60 print: PRINT '(' VVARIABLE ')' .\l"]
  146 -> "146R60" [style=solid]
 "146R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  147 [label="State 147\n\l 61 print: PRINT '(' MVARIABLE ')' .\l"]
  147 -> "147R61" [style=solid]
 "147R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  148 [label="State 148\n\l 59 print: PRINT '(' expr ')' .\l"]
  148 -> "148R59" [style=solid]
 "148R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  149 [label="State 149\n\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l 73     | VVARIABLE '(' expr . ')'\l"]
  149 -> 84 [style=solid label="CONJUNCTION"]
  149 -> 85 [style=solid label="'<'"]
  149 -> 86 [style=solid label="'>'"]
  149 -> 87 [style=solid label="'+'"]
  149 -> 88 [style=solid label="'-'"]
  149 -> 89 [style=solid label="'/'"]
  149 -> 174 [style=solid label="')'"]
  150 [label="State 150\n\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l 74     | MVARIABLE '(' expr . ',' expr ')'\l"]
  150 -> 84 [style=solid label="CONJUNCTION"]
  150 -> 175 [style=solid label="','"]
  150 -> 85 [style=solid label="'<'"]
  150 -> 86 [style=solid label="'>'"]
  150 -> 87 [style=solid label="'+'"]
  150 -> 88 [style=solid label="'-'"]
  150 -> 89 [style=solid label="'/'"]
  151 [label="State 151\n\l  4 stmts: . stmt\l  5      | . stmts stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . '(' stmts ')'\l 17 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 17    | IF expr NEWLINE BEGIF . stmts ENDIF\l 18 forr: . FOR type VARIABLE DECLARE expr ':' expr NEWLINE BEGFOR stmts ENDFOR\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 45 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 46              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 47              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 48              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 49              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 50              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 51              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 52              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 53 declaration: . type VARIABLE DECLARE expr\l 54            | . type VARIABLE DECLARE vector\l 55            | . type VARIABLE DECLARE matrix\l 56 assignment: . VARIABLE ASSIGN expr\l 57           | . VVARIABLE ASSIGN vector\l 58           | . MVARIABLE ASSIGN matrix\l 59 print: . PRINT '(' expr ')'\l 60      | . PRINT '(' VVARIABLE ')'\l 61      | . PRINT '(' MVARIABLE ')'\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 75 type: . INT\l 76     | . CINT\l 77     | . VINT\l 78     | . MINT\l 79     | . CVINT\l 80     | . CMINT\l 81     | . BOOLEAN\l 82     | . CBOOLEAN\l 83     | . VBOOLEAN\l 84     | . MBOOLEAN\l 85     | . CVBOOLEAN\l 86     | . CMBOOLEAN\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  151 -> 4 [style=solid label="BOOL"]
  151 -> 5 [style=solid label="INTEGER"]
  151 -> 6 [style=solid label="VARIABLE"]
  151 -> 7 [style=solid label="VVARIABLE"]
  151 -> 8 [style=solid label="MVARIABLE"]
  151 -> 9 [style=solid label="CINT"]
  151 -> 10 [style=solid label="VINT"]
  151 -> 11 [style=solid label="MINT"]
  151 -> 12 [style=solid label="INT"]
  151 -> 13 [style=solid label="CVINT"]
  151 -> 14 [style=solid label="CMINT"]
  151 -> 15 [style=solid label="BOOLEAN"]
  151 -> 16 [style=solid label="CBOOLEAN"]
  151 -> 17 [style=solid label="VBOOLEAN"]
  151 -> 18 [style=solid label="MBOOLEAN"]
  151 -> 19 [style=solid label="CVBOOLEAN"]
  151 -> 20 [style=solid label="CMBOOLEAN"]
  151 -> 21 [style=solid label="NEWLINE"]
  151 -> 22 [style=solid label="PRINT"]
  151 -> 23 [style=solid label="IF"]
  151 -> 24 [style=solid label="FOR"]
  151 -> 25 [style=solid label="'-'"]
  151 -> 26 [style=solid label="'!'"]
  151 -> 27 [style=solid label="'('"]
  151 -> 28 [style=solid label="'{'"]
  151 -> 176 [style=dashed label="stmts"]
  151 -> 30 [style=dashed label="stmt"]
  151 -> 31 [style=dashed label="iff"]
  151 -> 32 [style=dashed label="forr"]
  151 -> 33 [style=dashed label="matrix"]
  151 -> 34 [style=dashed label="vector"]
  151 -> 35 [style=dashed label="vmdeclaration"]
  151 -> 36 [style=dashed label="declaration"]
  151 -> 37 [style=dashed label="assignment"]
  151 -> 38 [style=dashed label="print"]
  151 -> 39 [style=dashed label="expr"]
  151 -> 40 [style=dashed label="type"]
  151 -> 41 [style=dashed label="const"]
  152 [label="State 152\n\l 18 forr: FOR type VARIABLE DECLARE . expr ':' expr NEWLINE BEGFOR stmts ENDFOR\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  152 -> 4 [style=solid label="BOOL"]
  152 -> 5 [style=solid label="INTEGER"]
  152 -> 48 [style=solid label="VARIABLE"]
  152 -> 49 [style=solid label="VVARIABLE"]
  152 -> 50 [style=solid label="MVARIABLE"]
  152 -> 25 [style=solid label="'-'"]
  152 -> 26 [style=solid label="'!'"]
  152 -> 51 [style=solid label="'('"]
  152 -> 177 [style=dashed label="expr"]
  152 -> 41 [style=dashed label="const"]
  153 [label="State 153\n\l 35 vector: VVARIABLE '(' vector . ',' '[' ']' ')'\l 39       | vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l"]
  153 -> 75 [style=solid label="ELEMMULT"]
  153 -> 77 [style=solid label="LEFTSHIFT"]
  153 -> 78 [style=solid label="RIGHTSHIFT"]
  153 -> 178 [style=solid label="','"]
  154 [label="State 154\n\l 37 vector: MVARIABLE '(' '[' . ']' ',' expr ')'\l"]
  154 -> 179 [style=solid label="']'"]
  155 [label="State 155\n\l 36 vector: MVARIABLE '(' expr . ',' '[' ']' ')'\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l 74     | MVARIABLE '(' expr . ',' expr ')'\l"]
  155 -> 84 [style=solid label="CONJUNCTION"]
  155 -> 180 [style=solid label="','"]
  155 -> 85 [style=solid label="'<'"]
  155 -> 86 [style=solid label="'>'"]
  155 -> 87 [style=solid label="'+'"]
  155 -> 88 [style=solid label="'-'"]
  155 -> 89 [style=solid label="'/'"]
  156 [label="State 156\n\l 33 listexprs: listexprs ',' vector .  [',', '}']\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l"]
  156 -> 75 [style=solid label="ELEMMULT"]
  156 -> 77 [style=solid label="LEFTSHIFT"]
  156 -> 78 [style=solid label="RIGHTSHIFT"]
  156 -> "156R33" [style=solid]
 "156R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  157 [label="State 157\n\l 32 listexprs: vector ',' vector .  [',', '}']\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l"]
  157 -> 75 [style=solid label="ELEMMULT"]
  157 -> 77 [style=solid label="LEFTSHIFT"]
  157 -> 78 [style=solid label="RIGHTSHIFT"]
  157 -> "157R32" [style=solid]
 "157R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  158 [label="State 158\n\l 44 exprs: exprs ',' expr .  [',', '}']\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  158 -> 84 [style=solid label="CONJUNCTION"]
  158 -> 85 [style=solid label="'<'"]
  158 -> 86 [style=solid label="'>'"]
  158 -> 87 [style=solid label="'+'"]
  158 -> 88 [style=solid label="'-'"]
  158 -> 89 [style=solid label="'/'"]
  158 -> "158R44" [style=solid]
 "158R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  159 [label="State 159\n\l 43 exprs: expr ',' expr .  [',', '}']\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  159 -> 84 [style=solid label="CONJUNCTION"]
  159 -> 85 [style=solid label="'<'"]
  159 -> 86 [style=solid label="'>'"]
  159 -> 87 [style=solid label="'+'"]
  159 -> 88 [style=solid label="'-'"]
  159 -> 89 [style=solid label="'/'"]
  159 -> "159R43" [style=solid]
 "159R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  160 [label="State 160\n\l 24 matrix: matrix . '*' matrix\l 25       | matrix . ELEMMULT matrix\l 26       | matrix . '\\''\l 27       | matrix . RIGHTSHIFT\l 28       | matrix . LEFTSHIFT\l 30       | matrix . ELEMMULT vector\l 31       | matrix . ELEMMULT expr\l 55 declaration: type VARIABLE DECLARE matrix .  [NEWLINE]\l"]
  160 -> 69 [style=solid label="ELEMMULT"]
  160 -> 70 [style=solid label="'\\''"]
  160 -> 71 [style=solid label="LEFTSHIFT"]
  160 -> 72 [style=solid label="RIGHTSHIFT"]
  160 -> 73 [style=solid label="'*'"]
  160 -> "160R55" [style=solid]
 "160R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  161 [label="State 161\n\l 29 matrix: vector . '\\''\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l 54 declaration: type VARIABLE DECLARE vector .  [NEWLINE]\l"]
  161 -> 75 [style=solid label="ELEMMULT"]
  161 -> 76 [style=solid label="'\\''"]
  161 -> 77 [style=solid label="LEFTSHIFT"]
  161 -> 78 [style=solid label="RIGHTSHIFT"]
  161 -> "161R54" [style=solid]
 "161R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  162 [label="State 162\n\l 53 declaration: type VARIABLE DECLARE expr .  [NEWLINE]\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  162 -> 84 [style=solid label="CONJUNCTION"]
  162 -> 85 [style=solid label="'<'"]
  162 -> 86 [style=solid label="'>'"]
  162 -> 87 [style=solid label="'+'"]
  162 -> 88 [style=solid label="'-'"]
  162 -> 89 [style=solid label="'/'"]
  162 -> "162R53" [style=solid]
 "162R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  163 [label="State 163\n\l 36 vector: MVARIABLE '(' expr . ',' '[' ']' ')'\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  163 -> 84 [style=solid label="CONJUNCTION"]
  163 -> 181 [style=solid label="','"]
  163 -> 85 [style=solid label="'<'"]
  163 -> 86 [style=solid label="'>'"]
  163 -> 87 [style=solid label="'+'"]
  163 -> 88 [style=solid label="'-'"]
  163 -> 89 [style=solid label="'/'"]
  164 [label="State 164\n\l 35 vector: VVARIABLE '(' vector ',' '[' . ']' ')'\l 46 vmdeclaration: VVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN vector\l"]
  164 -> 182 [style=solid label="']'"]
  165 [label="State 165\n\l 45 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN . expr\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  165 -> 4 [style=solid label="BOOL"]
  165 -> 5 [style=solid label="INTEGER"]
  165 -> 48 [style=solid label="VARIABLE"]
  165 -> 49 [style=solid label="VVARIABLE"]
  165 -> 50 [style=solid label="MVARIABLE"]
  165 -> 25 [style=solid label="'-'"]
  165 -> 26 [style=solid label="'!'"]
  165 -> 51 [style=solid label="'('"]
  165 -> 183 [style=dashed label="expr"]
  165 -> 41 [style=dashed label="const"]
  166 [label="State 166\n\l 21 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'\l 37 vector: MVARIABLE '(' '[' . ']' ',' expr ')'\l"]
  166 -> 184 [style=solid label="']'"]
  167 [label="State 167\n\l 22 matrix: MVARIABLE '(' matrix . ')'\l 24       | matrix . '*' matrix\l 25       | matrix . ELEMMULT matrix\l 26       | matrix . '\\''\l 27       | matrix . RIGHTSHIFT\l 28       | matrix . LEFTSHIFT\l 30       | matrix . ELEMMULT vector\l 31       | matrix . ELEMMULT expr\l"]
  167 -> 69 [style=solid label="ELEMMULT"]
  167 -> 70 [style=solid label="'\\''"]
  167 -> 71 [style=solid label="LEFTSHIFT"]
  167 -> 72 [style=solid label="RIGHTSHIFT"]
  167 -> 73 [style=solid label="'*'"]
  167 -> 185 [style=solid label="')'"]
  168 [label="State 168\n\l 20 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'\l 29       | vector . '\\''\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l"]
  168 -> 75 [style=solid label="ELEMMULT"]
  168 -> 76 [style=solid label="'\\''"]
  168 -> 77 [style=solid label="LEFTSHIFT"]
  168 -> 78 [style=solid label="RIGHTSHIFT"]
  168 -> 186 [style=solid label="','"]
  169 [label="State 169\n\l 21 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 37       | MVARIABLE '(' '[' ']' ',' . expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 49 vmdeclaration: MVARIABLE '(' '[' ']' ',' . expr ')' ASSIGN vector\l 51              | MVARIABLE '(' '[' ']' ',' . vector ')' ASSIGN matrix\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  169 -> 4 [style=solid label="BOOL"]
  169 -> 5 [style=solid label="INTEGER"]
  169 -> 48 [style=solid label="VARIABLE"]
  169 -> 58 [style=solid label="VVARIABLE"]
  169 -> 59 [style=solid label="MVARIABLE"]
  169 -> 25 [style=solid label="'-'"]
  169 -> 26 [style=solid label="'!'"]
  169 -> 51 [style=solid label="'('"]
  169 -> 60 [style=solid label="'{'"]
  169 -> 187 [style=dashed label="vector"]
  169 -> 188 [style=dashed label="expr"]
  169 -> 41 [style=dashed label="const"]
  170 [label="State 170\n\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 52 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN . matrix\l"]
  170 -> 92 [style=solid label="VVARIABLE"]
  170 -> 97 [style=solid label="MVARIABLE"]
  170 -> 28 [style=solid label="'{'"]
  170 -> 189 [style=dashed label="matrix"]
  170 -> 99 [style=dashed label="vector"]
  171 [label="State 171\n\l 20 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'\l 50 vmdeclaration: MVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN matrix\l"]
  171 -> 190 [style=solid label="']'"]
  172 [label="State 172\n\l 36 vector: MVARIABLE '(' expr ',' '[' . ']' ')'\l 48 vmdeclaration: MVARIABLE '(' expr ',' '[' . ']' ')' ASSIGN vector\l"]
  172 -> 191 [style=solid label="']'"]
  173 [label="State 173\n\l 47 vmdeclaration: MVARIABLE '(' expr ',' expr . ')' ASSIGN expr\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l 74     | MVARIABLE '(' expr ',' expr . ')'\l"]
  173 -> 84 [style=solid label="CONJUNCTION"]
  173 -> 85 [style=solid label="'<'"]
  173 -> 86 [style=solid label="'>'"]
  173 -> 87 [style=solid label="'+'"]
  173 -> 88 [style=solid label="'-'"]
  173 -> 89 [style=solid label="'/'"]
  173 -> 192 [style=solid label="')'"]
  174 [label="State 174\n\l 73 expr: VVARIABLE '(' expr ')' .\l"]
  174 -> "174R73" [style=solid]
 "174R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  175 [label="State 175\n\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 74     | MVARIABLE '(' expr ',' . expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  175 -> 4 [style=solid label="BOOL"]
  175 -> 5 [style=solid label="INTEGER"]
  175 -> 48 [style=solid label="VARIABLE"]
  175 -> 49 [style=solid label="VVARIABLE"]
  175 -> 50 [style=solid label="MVARIABLE"]
  175 -> 25 [style=solid label="'-'"]
  175 -> 26 [style=solid label="'!'"]
  175 -> 51 [style=solid label="'('"]
  175 -> 193 [style=dashed label="expr"]
  175 -> 41 [style=dashed label="const"]
  176 [label="State 176\n\l  5 stmts: stmts . stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . '(' stmts ')'\l 17 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 17    | IF expr NEWLINE BEGIF stmts . ENDIF\l 18 forr: . FOR type VARIABLE DECLARE expr ':' expr NEWLINE BEGFOR stmts ENDFOR\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 45 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 46              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 47              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 48              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 49              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 50              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 51              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 52              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 53 declaration: . type VARIABLE DECLARE expr\l 54            | . type VARIABLE DECLARE vector\l 55            | . type VARIABLE DECLARE matrix\l 56 assignment: . VARIABLE ASSIGN expr\l 57           | . VVARIABLE ASSIGN vector\l 58           | . MVARIABLE ASSIGN matrix\l 59 print: . PRINT '(' expr ')'\l 60      | . PRINT '(' VVARIABLE ')'\l 61      | . PRINT '(' MVARIABLE ')'\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 75 type: . INT\l 76     | . CINT\l 77     | . VINT\l 78     | . MINT\l 79     | . CVINT\l 80     | . CMINT\l 81     | . BOOLEAN\l 82     | . CBOOLEAN\l 83     | . VBOOLEAN\l 84     | . MBOOLEAN\l 85     | . CVBOOLEAN\l 86     | . CMBOOLEAN\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  176 -> 4 [style=solid label="BOOL"]
  176 -> 5 [style=solid label="INTEGER"]
  176 -> 6 [style=solid label="VARIABLE"]
  176 -> 7 [style=solid label="VVARIABLE"]
  176 -> 8 [style=solid label="MVARIABLE"]
  176 -> 9 [style=solid label="CINT"]
  176 -> 10 [style=solid label="VINT"]
  176 -> 11 [style=solid label="MINT"]
  176 -> 12 [style=solid label="INT"]
  176 -> 13 [style=solid label="CVINT"]
  176 -> 14 [style=solid label="CMINT"]
  176 -> 15 [style=solid label="BOOLEAN"]
  176 -> 16 [style=solid label="CBOOLEAN"]
  176 -> 17 [style=solid label="VBOOLEAN"]
  176 -> 18 [style=solid label="MBOOLEAN"]
  176 -> 19 [style=solid label="CVBOOLEAN"]
  176 -> 20 [style=solid label="CMBOOLEAN"]
  176 -> 21 [style=solid label="NEWLINE"]
  176 -> 22 [style=solid label="PRINT"]
  176 -> 23 [style=solid label="IF"]
  176 -> 24 [style=solid label="FOR"]
  176 -> 194 [style=solid label="ENDIF"]
  176 -> 25 [style=solid label="'-'"]
  176 -> 26 [style=solid label="'!'"]
  176 -> 27 [style=solid label="'('"]
  176 -> 28 [style=solid label="'{'"]
  176 -> 65 [style=dashed label="stmt"]
  176 -> 31 [style=dashed label="iff"]
  176 -> 32 [style=dashed label="forr"]
  176 -> 33 [style=dashed label="matrix"]
  176 -> 34 [style=dashed label="vector"]
  176 -> 35 [style=dashed label="vmdeclaration"]
  176 -> 36 [style=dashed label="declaration"]
  176 -> 37 [style=dashed label="assignment"]
  176 -> 38 [style=dashed label="print"]
  176 -> 39 [style=dashed label="expr"]
  176 -> 40 [style=dashed label="type"]
  176 -> 41 [style=dashed label="const"]
  177 [label="State 177\n\l 18 forr: FOR type VARIABLE DECLARE expr . ':' expr NEWLINE BEGFOR stmts ENDFOR\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  177 -> 84 [style=solid label="CONJUNCTION"]
  177 -> 85 [style=solid label="'<'"]
  177 -> 86 [style=solid label="'>'"]
  177 -> 87 [style=solid label="'+'"]
  177 -> 88 [style=solid label="'-'"]
  177 -> 89 [style=solid label="'/'"]
  177 -> 195 [style=solid label="':'"]
  178 [label="State 178\n\l 35 vector: VVARIABLE '(' vector ',' . '[' ']' ')'\l"]
  178 -> 196 [style=solid label="'['"]
  179 [label="State 179\n\l 37 vector: MVARIABLE '(' '[' ']' . ',' expr ')'\l"]
  179 -> 197 [style=solid label="','"]
  180 [label="State 180\n\l 36 vector: MVARIABLE '(' expr ',' . '[' ']' ')'\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 74     | MVARIABLE '(' expr ',' . expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  180 -> 4 [style=solid label="BOOL"]
  180 -> 5 [style=solid label="INTEGER"]
  180 -> 48 [style=solid label="VARIABLE"]
  180 -> 49 [style=solid label="VVARIABLE"]
  180 -> 50 [style=solid label="MVARIABLE"]
  180 -> 25 [style=solid label="'-'"]
  180 -> 26 [style=solid label="'!'"]
  180 -> 51 [style=solid label="'('"]
  180 -> 198 [style=solid label="'['"]
  180 -> 193 [style=dashed label="expr"]
  180 -> 41 [style=dashed label="const"]
  181 [label="State 181\n\l 36 vector: MVARIABLE '(' expr ',' . '[' ']' ')'\l"]
  181 -> 198 [style=solid label="'['"]
  182 [label="State 182\n\l 35 vector: VVARIABLE '(' vector ',' '[' ']' . ')'\l 46 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN vector\l"]
  182 -> 199 [style=solid label="')'"]
  183 [label="State 183\n\l 45 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr .  [NEWLINE]\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  183 -> 84 [style=solid label="CONJUNCTION"]
  183 -> 85 [style=solid label="'<'"]
  183 -> 86 [style=solid label="'>'"]
  183 -> 87 [style=solid label="'+'"]
  183 -> 88 [style=solid label="'-'"]
  183 -> 89 [style=solid label="'/'"]
  183 -> "183R45" [style=solid]
 "183R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  184 [label="State 184\n\l 21 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'\l 37 vector: MVARIABLE '(' '[' ']' . ',' expr ')'\l"]
  184 -> 200 [style=solid label="','"]
  185 [label="State 185\n\l 22 matrix: MVARIABLE '(' matrix ')' .\l"]
  185 -> "185R22" [style=solid]
 "185R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  186 [label="State 186\n\l 20 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'\l"]
  186 -> 201 [style=solid label="'['"]
  187 [label="State 187\n\l 21 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l 51 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector . ')' ASSIGN matrix\l"]
  187 -> 75 [style=solid label="ELEMMULT"]
  187 -> 77 [style=solid label="LEFTSHIFT"]
  187 -> 78 [style=solid label="RIGHTSHIFT"]
  187 -> 202 [style=solid label="')'"]
  188 [label="State 188\n\l 37 vector: MVARIABLE '(' '[' ']' ',' expr . ')'\l 49 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr . ')' ASSIGN vector\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  188 -> 84 [style=solid label="CONJUNCTION"]
  188 -> 85 [style=solid label="'<'"]
  188 -> 86 [style=solid label="'>'"]
  188 -> 87 [style=solid label="'+'"]
  188 -> 88 [style=solid label="'-'"]
  188 -> 89 [style=solid label="'/'"]
  188 -> 203 [style=solid label="')'"]
  189 [label="State 189\n\l 24 matrix: matrix . '*' matrix\l 25       | matrix . ELEMMULT matrix\l 26       | matrix . '\\''\l 27       | matrix . RIGHTSHIFT\l 28       | matrix . LEFTSHIFT\l 30       | matrix . ELEMMULT vector\l 31       | matrix . ELEMMULT expr\l 52 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN matrix .  [NEWLINE]\l"]
  189 -> 69 [style=solid label="ELEMMULT"]
  189 -> 70 [style=solid label="'\\''"]
  189 -> 71 [style=solid label="LEFTSHIFT"]
  189 -> 72 [style=solid label="RIGHTSHIFT"]
  189 -> 73 [style=solid label="'*'"]
  189 -> "189R52" [style=solid]
 "189R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  190 [label="State 190\n\l 20 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'\l 50 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN matrix\l"]
  190 -> 204 [style=solid label="')'"]
  191 [label="State 191\n\l 36 vector: MVARIABLE '(' expr ',' '[' ']' . ')'\l 48 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' . ')' ASSIGN vector\l"]
  191 -> 205 [style=solid label="')'"]
  192 [label="State 192\n\l 47 vmdeclaration: MVARIABLE '(' expr ',' expr ')' . ASSIGN expr\l 74 expr: MVARIABLE '(' expr ',' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']\l"]
  192 -> 206 [style=solid label="ASSIGN"]
  192 -> "192R74" [style=solid]
 "192R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  193 [label="State 193\n\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l 74     | MVARIABLE '(' expr ',' expr . ')'\l"]
  193 -> 84 [style=solid label="CONJUNCTION"]
  193 -> 85 [style=solid label="'<'"]
  193 -> 86 [style=solid label="'>'"]
  193 -> 87 [style=solid label="'+'"]
  193 -> 88 [style=solid label="'-'"]
  193 -> 89 [style=solid label="'/'"]
  193 -> 207 [style=solid label="')'"]
  194 [label="State 194\n\l 17 iff: IF expr NEWLINE BEGIF stmts ENDIF .\l"]
  194 -> "194R17" [style=solid]
 "194R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  195 [label="State 195\n\l 18 forr: FOR type VARIABLE DECLARE expr ':' . expr NEWLINE BEGFOR stmts ENDFOR\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  195 -> 4 [style=solid label="BOOL"]
  195 -> 5 [style=solid label="INTEGER"]
  195 -> 48 [style=solid label="VARIABLE"]
  195 -> 49 [style=solid label="VVARIABLE"]
  195 -> 50 [style=solid label="MVARIABLE"]
  195 -> 25 [style=solid label="'-'"]
  195 -> 26 [style=solid label="'!'"]
  195 -> 51 [style=solid label="'('"]
  195 -> 208 [style=dashed label="expr"]
  195 -> 41 [style=dashed label="const"]
  196 [label="State 196\n\l 35 vector: VVARIABLE '(' vector ',' '[' . ']' ')'\l"]
  196 -> 209 [style=solid label="']'"]
  197 [label="State 197\n\l 37 vector: MVARIABLE '(' '[' ']' ',' . expr ')'\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  197 -> 4 [style=solid label="BOOL"]
  197 -> 5 [style=solid label="INTEGER"]
  197 -> 48 [style=solid label="VARIABLE"]
  197 -> 49 [style=solid label="VVARIABLE"]
  197 -> 50 [style=solid label="MVARIABLE"]
  197 -> 25 [style=solid label="'-'"]
  197 -> 26 [style=solid label="'!'"]
  197 -> 51 [style=solid label="'('"]
  197 -> 210 [style=dashed label="expr"]
  197 -> 41 [style=dashed label="const"]
  198 [label="State 198\n\l 36 vector: MVARIABLE '(' expr ',' '[' . ']' ')'\l"]
  198 -> 211 [style=solid label="']'"]
  199 [label="State 199\n\l 35 vector: VVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT]\l 46 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN vector\l"]
  199 -> 212 [style=solid label="ASSIGN"]
  199 -> "199R35" [style=solid]
 "199R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  200 [label="State 200\n\l 21 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 37       | MVARIABLE '(' '[' ']' ',' . expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  200 -> 4 [style=solid label="BOOL"]
  200 -> 5 [style=solid label="INTEGER"]
  200 -> 48 [style=solid label="VARIABLE"]
  200 -> 58 [style=solid label="VVARIABLE"]
  200 -> 59 [style=solid label="MVARIABLE"]
  200 -> 25 [style=solid label="'-'"]
  200 -> 26 [style=solid label="'!'"]
  200 -> 51 [style=solid label="'('"]
  200 -> 60 [style=solid label="'{'"]
  200 -> 213 [style=dashed label="vector"]
  200 -> 210 [style=dashed label="expr"]
  200 -> 41 [style=dashed label="const"]
  201 [label="State 201\n\l 20 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'\l"]
  201 -> 214 [style=solid label="']'"]
  202 [label="State 202\n\l 21 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*']\l 51 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' . ASSIGN matrix\l"]
  202 -> 215 [style=solid label="ASSIGN"]
  202 -> "202R21" [style=solid]
 "202R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  203 [label="State 203\n\l 37 vector: MVARIABLE '(' '[' ']' ',' expr ')' .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT]\l 49 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' . ASSIGN vector\l"]
  203 -> 216 [style=solid label="ASSIGN"]
  203 -> "203R37" [style=solid]
 "203R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  204 [label="State 204\n\l 20 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT, '*']\l 50 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN matrix\l"]
  204 -> 217 [style=solid label="ASSIGN"]
  204 -> "204R20" [style=solid]
 "204R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  205 [label="State 205\n\l 36 vector: MVARIABLE '(' expr ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\\'', LEFTSHIFT, RIGHTSHIFT]\l 48 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' . ASSIGN vector\l"]
  205 -> 218 [style=solid label="ASSIGN"]
  205 -> "205R36" [style=solid]
 "205R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  206 [label="State 206\n\l 47 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN . expr\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  206 -> 4 [style=solid label="BOOL"]
  206 -> 5 [style=solid label="INTEGER"]
  206 -> 48 [style=solid label="VARIABLE"]
  206 -> 49 [style=solid label="VVARIABLE"]
  206 -> 50 [style=solid label="MVARIABLE"]
  206 -> 25 [style=solid label="'-'"]
  206 -> 26 [style=solid label="'!'"]
  206 -> 51 [style=solid label="'('"]
  206 -> 219 [style=dashed label="expr"]
  206 -> 41 [style=dashed label="const"]
  207 [label="State 207\n\l 74 expr: MVARIABLE '(' expr ',' expr ')' .\l"]
  207 -> "207R74" [style=solid]
 "207R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  208 [label="State 208\n\l 18 forr: FOR type VARIABLE DECLARE expr ':' expr . NEWLINE BEGFOR stmts ENDFOR\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  208 -> 220 [style=solid label="NEWLINE"]
  208 -> 84 [style=solid label="CONJUNCTION"]
  208 -> 85 [style=solid label="'<'"]
  208 -> 86 [style=solid label="'>'"]
  208 -> 87 [style=solid label="'+'"]
  208 -> 88 [style=solid label="'-'"]
  208 -> 89 [style=solid label="'/'"]
  209 [label="State 209\n\l 35 vector: VVARIABLE '(' vector ',' '[' ']' . ')'\l"]
  209 -> 221 [style=solid label="')'"]
  210 [label="State 210\n\l 37 vector: MVARIABLE '(' '[' ']' ',' expr . ')'\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  210 -> 84 [style=solid label="CONJUNCTION"]
  210 -> 85 [style=solid label="'<'"]
  210 -> 86 [style=solid label="'>'"]
  210 -> 87 [style=solid label="'+'"]
  210 -> 88 [style=solid label="'-'"]
  210 -> 89 [style=solid label="'/'"]
  210 -> 222 [style=solid label="')'"]
  211 [label="State 211\n\l 36 vector: MVARIABLE '(' expr ',' '[' ']' . ')'\l"]
  211 -> 223 [style=solid label="')'"]
  212 [label="State 212\n\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 46 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . vector\l"]
  212 -> 92 [style=solid label="VVARIABLE"]
  212 -> 93 [style=solid label="MVARIABLE"]
  212 -> 60 [style=solid label="'{'"]
  212 -> 224 [style=dashed label="vector"]
  213 [label="State 213\n\l 21 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l"]
  213 -> 75 [style=solid label="ELEMMULT"]
  213 -> 77 [style=solid label="LEFTSHIFT"]
  213 -> 78 [style=solid label="RIGHTSHIFT"]
  213 -> 225 [style=solid label="')'"]
  214 [label="State 214\n\l 20 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'\l"]
  214 -> 226 [style=solid label="')'"]
  215 [label="State 215\n\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 51 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN . matrix\l"]
  215 -> 92 [style=solid label="VVARIABLE"]
  215 -> 97 [style=solid label="MVARIABLE"]
  215 -> 28 [style=solid label="'{'"]
  215 -> 227 [style=dashed label="matrix"]
  215 -> 99 [style=dashed label="vector"]
  216 [label="State 216\n\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 49 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN . vector\l"]
  216 -> 92 [style=solid label="VVARIABLE"]
  216 -> 93 [style=solid label="MVARIABLE"]
  216 -> 60 [style=solid label="'{'"]
  216 -> 228 [style=dashed label="vector"]
  217 [label="State 217\n\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 50 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . matrix\l"]
  217 -> 92 [style=solid label="VVARIABLE"]
  217 -> 97 [style=solid label="MVARIABLE"]
  217 -> 28 [style=solid label="'{'"]
  217 -> 229 [style=dashed label="matrix"]
  217 -> 99 [style=dashed label="vector"]
  218 [label="State 218\n\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 48 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN . vector\l"]
  218 -> 92 [style=solid label="VVARIABLE"]
  218 -> 93 [style=solid label="MVARIABLE"]
  218 -> 60 [style=solid label="'{'"]
  218 -> 230 [style=dashed label="vector"]
  219 [label="State 219\n\l 47 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN expr .  [NEWLINE]\l 65 expr: expr . '+' expr\l 66     | expr . '-' expr\l 67     | expr . '/' expr\l 68     | expr . '<' expr\l 69     | expr . '>' expr\l 71     | expr . CONJUNCTION expr\l"]
  219 -> 84 [style=solid label="CONJUNCTION"]
  219 -> 85 [style=solid label="'<'"]
  219 -> 86 [style=solid label="'>'"]
  219 -> 87 [style=solid label="'+'"]
  219 -> 88 [style=solid label="'-'"]
  219 -> 89 [style=solid label="'/'"]
  219 -> "219R47" [style=solid]
 "219R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  220 [label="State 220\n\l 18 forr: FOR type VARIABLE DECLARE expr ':' expr NEWLINE . BEGFOR stmts ENDFOR\l"]
  220 -> 231 [style=solid label="BEGFOR"]
  221 [label="State 221\n\l 35 vector: VVARIABLE '(' vector ',' '[' ']' ')' .\l"]
  221 -> "221R35" [style=solid]
 "221R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  222 [label="State 222\n\l 37 vector: MVARIABLE '(' '[' ']' ',' expr ')' .\l"]
  222 -> "222R37" [style=solid]
 "222R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  223 [label="State 223\n\l 36 vector: MVARIABLE '(' expr ',' '[' ']' ')' .\l"]
  223 -> "223R36" [style=solid]
 "223R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  224 [label="State 224\n\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l 46 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]\l"]
  224 -> 75 [style=solid label="ELEMMULT"]
  224 -> 77 [style=solid label="LEFTSHIFT"]
  224 -> 78 [style=solid label="RIGHTSHIFT"]
  224 -> "224R46" [style=solid]
 "224R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  225 [label="State 225\n\l 21 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .\l"]
  225 -> "225R21" [style=solid]
 "225R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  226 [label="State 226\n\l 20 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .\l"]
  226 -> "226R20" [style=solid]
 "226R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  227 [label="State 227\n\l 24 matrix: matrix . '*' matrix\l 25       | matrix . ELEMMULT matrix\l 26       | matrix . '\\''\l 27       | matrix . RIGHTSHIFT\l 28       | matrix . LEFTSHIFT\l 30       | matrix . ELEMMULT vector\l 31       | matrix . ELEMMULT expr\l 51 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix .  [NEWLINE]\l"]
  227 -> 69 [style=solid label="ELEMMULT"]
  227 -> 70 [style=solid label="'\\''"]
  227 -> 71 [style=solid label="LEFTSHIFT"]
  227 -> 72 [style=solid label="RIGHTSHIFT"]
  227 -> 73 [style=solid label="'*'"]
  227 -> "227R51" [style=solid]
 "227R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  228 [label="State 228\n\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l 49 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector .  [NEWLINE]\l"]
  228 -> 75 [style=solid label="ELEMMULT"]
  228 -> 77 [style=solid label="LEFTSHIFT"]
  228 -> 78 [style=solid label="RIGHTSHIFT"]
  228 -> "228R49" [style=solid]
 "228R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  229 [label="State 229\n\l 24 matrix: matrix . '*' matrix\l 25       | matrix . ELEMMULT matrix\l 26       | matrix . '\\''\l 27       | matrix . RIGHTSHIFT\l 28       | matrix . LEFTSHIFT\l 30       | matrix . ELEMMULT vector\l 31       | matrix . ELEMMULT expr\l 50 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix .  [NEWLINE]\l"]
  229 -> 69 [style=solid label="ELEMMULT"]
  229 -> 70 [style=solid label="'\\''"]
  229 -> 71 [style=solid label="LEFTSHIFT"]
  229 -> 72 [style=solid label="RIGHTSHIFT"]
  229 -> 73 [style=solid label="'*'"]
  229 -> "229R50" [style=solid]
 "229R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  230 [label="State 230\n\l 39 vector: vector . ELEMMULT vector\l 40       | vector . RIGHTSHIFT\l 41       | vector . LEFTSHIFT\l 42       | vector . ELEMMULT expr\l 48 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]\l"]
  230 -> 75 [style=solid label="ELEMMULT"]
  230 -> 77 [style=solid label="LEFTSHIFT"]
  230 -> 78 [style=solid label="RIGHTSHIFT"]
  230 -> "230R48" [style=solid]
 "230R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  231 [label="State 231\n\l  4 stmts: . stmt\l  5      | . stmts stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . '(' stmts ')'\l 17 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 18 forr: . FOR type VARIABLE DECLARE expr ':' expr NEWLINE BEGFOR stmts ENDFOR\l 18     | FOR type VARIABLE DECLARE expr ':' expr NEWLINE BEGFOR . stmts ENDFOR\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 45 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 46              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 47              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 48              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 49              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 50              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 51              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 52              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 53 declaration: . type VARIABLE DECLARE expr\l 54            | . type VARIABLE DECLARE vector\l 55            | . type VARIABLE DECLARE matrix\l 56 assignment: . VARIABLE ASSIGN expr\l 57           | . VVARIABLE ASSIGN vector\l 58           | . MVARIABLE ASSIGN matrix\l 59 print: . PRINT '(' expr ')'\l 60      | . PRINT '(' VVARIABLE ')'\l 61      | . PRINT '(' MVARIABLE ')'\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 75 type: . INT\l 76     | . CINT\l 77     | . VINT\l 78     | . MINT\l 79     | . CVINT\l 80     | . CMINT\l 81     | . BOOLEAN\l 82     | . CBOOLEAN\l 83     | . VBOOLEAN\l 84     | . MBOOLEAN\l 85     | . CVBOOLEAN\l 86     | . CMBOOLEAN\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  231 -> 4 [style=solid label="BOOL"]
  231 -> 5 [style=solid label="INTEGER"]
  231 -> 6 [style=solid label="VARIABLE"]
  231 -> 7 [style=solid label="VVARIABLE"]
  231 -> 8 [style=solid label="MVARIABLE"]
  231 -> 9 [style=solid label="CINT"]
  231 -> 10 [style=solid label="VINT"]
  231 -> 11 [style=solid label="MINT"]
  231 -> 12 [style=solid label="INT"]
  231 -> 13 [style=solid label="CVINT"]
  231 -> 14 [style=solid label="CMINT"]
  231 -> 15 [style=solid label="BOOLEAN"]
  231 -> 16 [style=solid label="CBOOLEAN"]
  231 -> 17 [style=solid label="VBOOLEAN"]
  231 -> 18 [style=solid label="MBOOLEAN"]
  231 -> 19 [style=solid label="CVBOOLEAN"]
  231 -> 20 [style=solid label="CMBOOLEAN"]
  231 -> 21 [style=solid label="NEWLINE"]
  231 -> 22 [style=solid label="PRINT"]
  231 -> 23 [style=solid label="IF"]
  231 -> 24 [style=solid label="FOR"]
  231 -> 25 [style=solid label="'-'"]
  231 -> 26 [style=solid label="'!'"]
  231 -> 27 [style=solid label="'('"]
  231 -> 28 [style=solid label="'{'"]
  231 -> 232 [style=dashed label="stmts"]
  231 -> 30 [style=dashed label="stmt"]
  231 -> 31 [style=dashed label="iff"]
  231 -> 32 [style=dashed label="forr"]
  231 -> 33 [style=dashed label="matrix"]
  231 -> 34 [style=dashed label="vector"]
  231 -> 35 [style=dashed label="vmdeclaration"]
  231 -> 36 [style=dashed label="declaration"]
  231 -> 37 [style=dashed label="assignment"]
  231 -> 38 [style=dashed label="print"]
  231 -> 39 [style=dashed label="expr"]
  231 -> 40 [style=dashed label="type"]
  231 -> 41 [style=dashed label="const"]
  232 [label="State 232\n\l  5 stmts: stmts . stmt\l  6 stmt: . NEWLINE\l  7     | . expr NEWLINE\l  8     | . vector NEWLINE\l  9     | . matrix NEWLINE\l 10     | . print NEWLINE\l 11     | . vmdeclaration NEWLINE\l 12     | . declaration NEWLINE\l 13     | . assignment NEWLINE\l 14     | . iff NEWLINE\l 15     | . forr NEWLINE\l 16     | . '(' stmts ')'\l 17 iff: . IF expr NEWLINE BEGIF stmts ENDIF\l 18 forr: . FOR type VARIABLE DECLARE expr ':' expr NEWLINE BEGFOR stmts ENDFOR\l 18     | FOR type VARIABLE DECLARE expr ':' expr NEWLINE BEGFOR stmts . ENDFOR\l 19 matrix: . '{' listexprs '}'\l 20       | . MVARIABLE '(' vector ',' '[' ']' ')'\l 21       | . MVARIABLE '(' '[' ']' ',' vector ')'\l 22       | . MVARIABLE '(' matrix ')'\l 23       | . MVARIABLE\l 24       | . matrix '*' matrix\l 25       | . matrix ELEMMULT matrix\l 26       | . matrix '\\''\l 27       | . matrix RIGHTSHIFT\l 28       | . matrix LEFTSHIFT\l 29       | . vector '\\''\l 30       | . matrix ELEMMULT vector\l 31       | . matrix ELEMMULT expr\l 34 vector: . '{' exprs '}'\l 35       | . VVARIABLE '(' vector ',' '[' ']' ')'\l 36       | . MVARIABLE '(' expr ',' '[' ']' ')'\l 37       | . MVARIABLE '(' '[' ']' ',' expr ')'\l 38       | . VVARIABLE\l 39       | . vector ELEMMULT vector\l 40       | . vector RIGHTSHIFT\l 41       | . vector LEFTSHIFT\l 42       | . vector ELEMMULT expr\l 45 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr\l 46              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector\l 47              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr\l 48              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector\l 49              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector\l 50              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix\l 51              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix\l 52              | . MVARIABLE '(' matrix ')' ASSIGN matrix\l 53 declaration: . type VARIABLE DECLARE expr\l 54            | . type VARIABLE DECLARE vector\l 55            | . type VARIABLE DECLARE matrix\l 56 assignment: . VARIABLE ASSIGN expr\l 57           | . VVARIABLE ASSIGN vector\l 58           | . MVARIABLE ASSIGN matrix\l 59 print: . PRINT '(' expr ')'\l 60      | . PRINT '(' VVARIABLE ')'\l 61      | . PRINT '(' MVARIABLE ')'\l 62 expr: . const\l 63     | . VARIABLE\l 64     | . '-' expr\l 65     | . expr '+' expr\l 66     | . expr '-' expr\l 67     | . expr '/' expr\l 68     | . expr '<' expr\l 69     | . expr '>' expr\l 70     | . '!' expr\l 71     | . expr CONJUNCTION expr\l 72     | . '(' expr ')'\l 73     | . VVARIABLE '(' expr ')'\l 74     | . MVARIABLE '(' expr ',' expr ')'\l 75 type: . INT\l 76     | . CINT\l 77     | . VINT\l 78     | . MINT\l 79     | . CVINT\l 80     | . CMINT\l 81     | . BOOLEAN\l 82     | . CBOOLEAN\l 83     | . VBOOLEAN\l 84     | . MBOOLEAN\l 85     | . CVBOOLEAN\l 86     | . CMBOOLEAN\l 87 const: . INTEGER\l 88      | . BOOL\l"]
  232 -> 4 [style=solid label="BOOL"]
  232 -> 5 [style=solid label="INTEGER"]
  232 -> 6 [style=solid label="VARIABLE"]
  232 -> 7 [style=solid label="VVARIABLE"]
  232 -> 8 [style=solid label="MVARIABLE"]
  232 -> 9 [style=solid label="CINT"]
  232 -> 10 [style=solid label="VINT"]
  232 -> 11 [style=solid label="MINT"]
  232 -> 12 [style=solid label="INT"]
  232 -> 13 [style=solid label="CVINT"]
  232 -> 14 [style=solid label="CMINT"]
  232 -> 15 [style=solid label="BOOLEAN"]
  232 -> 16 [style=solid label="CBOOLEAN"]
  232 -> 17 [style=solid label="VBOOLEAN"]
  232 -> 18 [style=solid label="MBOOLEAN"]
  232 -> 19 [style=solid label="CVBOOLEAN"]
  232 -> 20 [style=solid label="CMBOOLEAN"]
  232 -> 21 [style=solid label="NEWLINE"]
  232 -> 22 [style=solid label="PRINT"]
  232 -> 23 [style=solid label="IF"]
  232 -> 24 [style=solid label="FOR"]
  232 -> 233 [style=solid label="ENDFOR"]
  232 -> 25 [style=solid label="'-'"]
  232 -> 26 [style=solid label="'!'"]
  232 -> 27 [style=solid label="'('"]
  232 -> 28 [style=solid label="'{'"]
  232 -> 65 [style=dashed label="stmt"]
  232 -> 31 [style=dashed label="iff"]
  232 -> 32 [style=dashed label="forr"]
  232 -> 33 [style=dashed label="matrix"]
  232 -> 34 [style=dashed label="vector"]
  232 -> 35 [style=dashed label="vmdeclaration"]
  232 -> 36 [style=dashed label="declaration"]
  232 -> 37 [style=dashed label="assignment"]
  232 -> 38 [style=dashed label="print"]
  232 -> 39 [style=dashed label="expr"]
  232 -> 40 [style=dashed label="type"]
  232 -> 41 [style=dashed label="const"]
  233 [label="State 233\n\l 18 forr: FOR type VARIABLE DECLARE expr ':' expr NEWLINE BEGFOR stmts ENDFOR .\l"]
  233 -> "233R18" [style=solid]
 "233R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
}
