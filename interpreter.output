Терминалы не используются в грамматике

   END
   BOOL


Грамматика

    0 $accept: program $end

    1 program: program expr
    2        | %empty

    3 expr: INTEGER
    4     | expr '+' expr
    5     | expr '-' expr
    6     | expr '*' expr
    7     | expr '/' expr
    8     | expr '<' expr
    9     | expr '>' expr
   10     | '(' expr ')'


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'(' (40) 10
')' (41) 10
'*' (42) 6
'+' (43) 4
'-' (45) 5
'/' (47) 7
'<' (60) 8
'>' (62) 9
error (256)
END (258)
BOOL <boolPtr> (259)
INTEGER <intPtr> (260) 3


Нетерминальные символы с правилами, в которых они появляются

$accept (14)
    налево: 0
program (15)
    налево: 1 2, направо: 0 1
expr <ptr> (16)
    налево: 3 4 5 6 7 8 9 10, направо: 1 4 5 6 7 8 9 10


State 0

    0 $accept: . program $end
    1 program: . program expr
    2        | . %empty

    $default  вывод с использованием правила 2 (program)

    program  переход в состояние 1


State 1

    0 $accept: program . $end
    1 program: program . expr
    3 expr: . INTEGER
    4     | . expr '+' expr
    5     | . expr '-' expr
    6     | . expr '*' expr
    7     | . expr '/' expr
    8     | . expr '<' expr
    9     | . expr '>' expr
   10     | . '(' expr ')'

    $end     сдвиг, и переход в состояние 2
    INTEGER  сдвиг, и переход в состояние 3
    '('      сдвиг, и переход в состояние 4

    expr  переход в состояние 5


State 2

    0 $accept: program $end .

    $default  принять


State 3

    3 expr: INTEGER .

    $default  вывод с использованием правила 3 (expr)


State 4

    3 expr: . INTEGER
    4     | . expr '+' expr
    5     | . expr '-' expr
    6     | . expr '*' expr
    7     | . expr '/' expr
    8     | . expr '<' expr
    9     | . expr '>' expr
   10     | . '(' expr ')'
   10     | '(' . expr ')'

    INTEGER  сдвиг, и переход в состояние 3
    '('      сдвиг, и переход в состояние 4

    expr  переход в состояние 6


State 5

    1 program: program expr .  [$end, INTEGER, '(']
    4 expr: expr . '+' expr
    5     | expr . '-' expr
    6     | expr . '*' expr
    7     | expr . '/' expr
    8     | expr . '<' expr
    9     | expr . '>' expr

    '<'  сдвиг, и переход в состояние 7
    '>'  сдвиг, и переход в состояние 8
    '+'  сдвиг, и переход в состояние 9
    '-'  сдвиг, и переход в состояние 10
    '*'  сдвиг, и переход в состояние 11
    '/'  сдвиг, и переход в состояние 12

    $default  вывод с использованием правила 1 (program)


State 6

    4 expr: expr . '+' expr
    5     | expr . '-' expr
    6     | expr . '*' expr
    7     | expr . '/' expr
    8     | expr . '<' expr
    9     | expr . '>' expr
   10     | '(' expr . ')'

    '<'  сдвиг, и переход в состояние 7
    '>'  сдвиг, и переход в состояние 8
    '+'  сдвиг, и переход в состояние 9
    '-'  сдвиг, и переход в состояние 10
    '*'  сдвиг, и переход в состояние 11
    '/'  сдвиг, и переход в состояние 12
    ')'  сдвиг, и переход в состояние 13


State 7

    3 expr: . INTEGER
    4     | . expr '+' expr
    5     | . expr '-' expr
    6     | . expr '*' expr
    7     | . expr '/' expr
    8     | . expr '<' expr
    8     | expr '<' . expr
    9     | . expr '>' expr
   10     | . '(' expr ')'

    INTEGER  сдвиг, и переход в состояние 3
    '('      сдвиг, и переход в состояние 4

    expr  переход в состояние 14


State 8

    3 expr: . INTEGER
    4     | . expr '+' expr
    5     | . expr '-' expr
    6     | . expr '*' expr
    7     | . expr '/' expr
    8     | . expr '<' expr
    9     | . expr '>' expr
    9     | expr '>' . expr
   10     | . '(' expr ')'

    INTEGER  сдвиг, и переход в состояние 3
    '('      сдвиг, и переход в состояние 4

    expr  переход в состояние 15


State 9

    3 expr: . INTEGER
    4     | . expr '+' expr
    4     | expr '+' . expr
    5     | . expr '-' expr
    6     | . expr '*' expr
    7     | . expr '/' expr
    8     | . expr '<' expr
    9     | . expr '>' expr
   10     | . '(' expr ')'

    INTEGER  сдвиг, и переход в состояние 3
    '('      сдвиг, и переход в состояние 4

    expr  переход в состояние 16


State 10

    3 expr: . INTEGER
    4     | . expr '+' expr
    5     | . expr '-' expr
    5     | expr '-' . expr
    6     | . expr '*' expr
    7     | . expr '/' expr
    8     | . expr '<' expr
    9     | . expr '>' expr
   10     | . '(' expr ')'

    INTEGER  сдвиг, и переход в состояние 3
    '('      сдвиг, и переход в состояние 4

    expr  переход в состояние 17


State 11

    3 expr: . INTEGER
    4     | . expr '+' expr
    5     | . expr '-' expr
    6     | . expr '*' expr
    6     | expr '*' . expr
    7     | . expr '/' expr
    8     | . expr '<' expr
    9     | . expr '>' expr
   10     | . '(' expr ')'

    INTEGER  сдвиг, и переход в состояние 3
    '('      сдвиг, и переход в состояние 4

    expr  переход в состояние 18


State 12

    3 expr: . INTEGER
    4     | . expr '+' expr
    5     | . expr '-' expr
    6     | . expr '*' expr
    7     | . expr '/' expr
    7     | expr '/' . expr
    8     | . expr '<' expr
    9     | . expr '>' expr
   10     | . '(' expr ')'

    INTEGER  сдвиг, и переход в состояние 3
    '('      сдвиг, и переход в состояние 4

    expr  переход в состояние 19


State 13

   10 expr: '(' expr ')' .

    $default  вывод с использованием правила 10 (expr)


State 14

    4 expr: expr . '+' expr
    5     | expr . '-' expr
    6     | expr . '*' expr
    7     | expr . '/' expr
    8     | expr . '<' expr
    8     | expr '<' expr .  [$end, INTEGER, '(', ')']
    9     | expr . '>' expr

    '+'  сдвиг, и переход в состояние 9
    '-'  сдвиг, и переход в состояние 10
    '*'  сдвиг, и переход в состояние 11
    '/'  сдвиг, и переход в состояние 12

    '<'  ошибка (неассоциативная)
    '>'  ошибка (неассоциативная)

    $default  вывод с использованием правила 8 (expr)

    Конфликт между правилом 8 и лексемой '<' разрешен как ошибка (%nonassoc '<').
    Конфликт между правилом 8 и лексемой '>' разрешен как ошибка (%nonassoc '>').
    Конфликт между правилом 8 и лексемой '+' разрешен сдвигом ('<' < '+').
    Конфликт между правилом 8 и лексемой '-' разрешен сдвигом ('<' < '-').
    Конфликт между правилом 8 и лексемой '*' разрешен сдвигом ('<' < '*').
    Конфликт между правилом 8 и лексемой '/' разрешен сдвигом ('<' < '/').


State 15

    4 expr: expr . '+' expr
    5     | expr . '-' expr
    6     | expr . '*' expr
    7     | expr . '/' expr
    8     | expr . '<' expr
    9     | expr . '>' expr
    9     | expr '>' expr .  [$end, INTEGER, '(', ')']

    '+'  сдвиг, и переход в состояние 9
    '-'  сдвиг, и переход в состояние 10
    '*'  сдвиг, и переход в состояние 11
    '/'  сдвиг, и переход в состояние 12

    '<'  ошибка (неассоциативная)
    '>'  ошибка (неассоциативная)

    $default  вывод с использованием правила 9 (expr)

    Конфликт между правилом 9 и лексемой '<' разрешен как ошибка (%nonassoc '<').
    Конфликт между правилом 9 и лексемой '>' разрешен как ошибка (%nonassoc '>').
    Конфликт между правилом 9 и лексемой '+' разрешен сдвигом ('>' < '+').
    Конфликт между правилом 9 и лексемой '-' разрешен сдвигом ('>' < '-').
    Конфликт между правилом 9 и лексемой '*' разрешен сдвигом ('>' < '*').
    Конфликт между правилом 9 и лексемой '/' разрешен сдвигом ('>' < '/').


State 16

    4 expr: expr . '+' expr
    4     | expr '+' expr .  [$end, INTEGER, '<', '>', '+', '-', '(', ')']
    5     | expr . '-' expr
    6     | expr . '*' expr
    7     | expr . '/' expr
    8     | expr . '<' expr
    9     | expr . '>' expr

    '*'  сдвиг, и переход в состояние 11
    '/'  сдвиг, и переход в состояние 12

    $default  вывод с использованием правила 4 (expr)

    Конфликт между правилом 4 и лексемой '<' разрешен выводом ('<' < '+').
    Конфликт между правилом 4 и лексемой '>' разрешен выводом ('>' < '+').
    Конфликт между правилом 4 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 4 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 4 и лексемой '*' разрешен сдвигом ('+' < '*').
    Конфликт между правилом 4 и лексемой '/' разрешен сдвигом ('+' < '/').


State 17

    4 expr: expr . '+' expr
    5     | expr . '-' expr
    5     | expr '-' expr .  [$end, INTEGER, '<', '>', '+', '-', '(', ')']
    6     | expr . '*' expr
    7     | expr . '/' expr
    8     | expr . '<' expr
    9     | expr . '>' expr

    '*'  сдвиг, и переход в состояние 11
    '/'  сдвиг, и переход в состояние 12

    $default  вывод с использованием правила 5 (expr)

    Конфликт между правилом 5 и лексемой '<' разрешен выводом ('<' < '-').
    Конфликт между правилом 5 и лексемой '>' разрешен выводом ('>' < '-').
    Конфликт между правилом 5 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 5 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 5 и лексемой '*' разрешен сдвигом ('-' < '*').
    Конфликт между правилом 5 и лексемой '/' разрешен сдвигом ('-' < '/').


State 18

    4 expr: expr . '+' expr
    5     | expr . '-' expr
    6     | expr . '*' expr
    6     | expr '*' expr .  [$end, INTEGER, '<', '>', '+', '-', '*', '/', '(', ')']
    7     | expr . '/' expr
    8     | expr . '<' expr
    9     | expr . '>' expr

    $default  вывод с использованием правила 6 (expr)

    Конфликт между правилом 6 и лексемой '<' разрешен выводом ('<' < '*').
    Конфликт между правилом 6 и лексемой '>' разрешен выводом ('>' < '*').
    Конфликт между правилом 6 и лексемой '+' разрешен выводом ('+' < '*').
    Конфликт между правилом 6 и лексемой '-' разрешен выводом ('-' < '*').
    Конфликт между правилом 6 и лексемой '*' разрешен выводом (%left '*').
    Конфликт между правилом 6 и лексемой '/' разрешен выводом (%left '/').


State 19

    4 expr: expr . '+' expr
    5     | expr . '-' expr
    6     | expr . '*' expr
    7     | expr . '/' expr
    7     | expr '/' expr .  [$end, INTEGER, '<', '>', '+', '-', '*', '/', '(', ')']
    8     | expr . '<' expr
    9     | expr . '>' expr

    $default  вывод с использованием правила 7 (expr)

    Конфликт между правилом 7 и лексемой '<' разрешен выводом ('<' < '/').
    Конфликт между правилом 7 и лексемой '>' разрешен выводом ('>' < '/').
    Конфликт между правилом 7 и лексемой '+' разрешен выводом ('+' < '/').
    Конфликт между правилом 7 и лексемой '-' разрешен выводом ('-' < '/').
    Конфликт между правилом 7 и лексемой '*' разрешен выводом (%left '*').
    Конфликт между правилом 7 и лексемой '/' разрешен выводом (%left '/').
