Терминалы не используются в грамматике

   END
   ER


Состояние 4 конфликты: 15 сдвига/вывода, 34 вывода/вывода
Состояние 37 конфликты: 33 сдвига/вывода
Состояние 66 конфликты: 5 сдвига/вывода
Состояние 67 конфликты: 4 сдвига/вывода, 11 вывода/вывода
Состояние 68 конфликты: 6 сдвига/вывода, 22 вывода/вывода
Состояние 82 конфликты: 1 сдвига/вывода
Состояние 83 конфликты: 1 сдвига/вывода
Состояние 84 конфликты: 16 сдвига/вывода
Состояние 96 конфликты: 16 сдвига/вывода
Состояние 129 конфликты: 1 сдвига/вывода
Состояние 153 конфликты: 6 сдвига/вывода
Состояние 165 конфликты: 3 сдвига/вывода
Состояние 166 конфликты: 6 сдвига/вывода, 12 вывода/вывода
Состояние 176 конфликты: 5 сдвига/вывода
Состояние 177 конфликты: 4 сдвига/вывода
Состояние 179 конфликты: 4 сдвига/вывода
Состояние 180 конфликты: 3 сдвига/вывода
Состояние 182 конфликты: 6 сдвига/вывода
Состояние 183 конфликты: 1 сдвига/вывода
Состояние 184 конфликты: 1 сдвига/вывода
Состояние 185 конфликты: 1 сдвига/вывода
Состояние 186 конфликты: 1 сдвига/вывода
Состояние 187 конфликты: 1 сдвига/вывода
Состояние 203 конфликты: 4 вывода/вывода


Грамматика

    0 $accept: program $end

    1 program: func

    2 func: func stmts
    3     | func error
    4     | %empty

    5 stmts: stmt
    6      | stmts stmt
    7      | stmts error
    8      | error

    9 stmt: NEWLINE
   10     | expr NEWLINE
   11     | vector NEWLINE
   12     | matrix NEWLINE
   13     | print NEWLINE
   14     | vmdeclaration NEWLINE
   15     | declaration NEWLINE
   16     | assignment NEWLINE
   17     | iff NEWLINE
   18     | forr NEWLINE
   19     | function NEWLINE
   20     | callfunction NEWLINE
   21     | robotactions NEWLINE
   22     | '(' stmts ')'
   23     | error NEWLINE

   24 robotactions: robotright
   25             | robotleft

   26 robotmove: MOVE '(' expr ')'

   27 robotright: RIGHT

   28 robotleft: LEFT

   29 robotwall: WALL

   30 robotexit: ROBEX

   31 iff: IF expr NEWLINE begif stmts endif

   32 begif: B
   33      | BEGIF

   34 endif: E
   35      | ENDIF

   36 begfor: B
   37       | BEGFOR

   38 endfor: E
   39       | ENDFOR

   40 forr: FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor

   41 return_func: type VAR
   42            | return_func ',' type VAR
   43            | return_func error

   44 args_func: '[' type VAR ']'
   45          | args_func ',' '[' type VAR ']'
   46          | args_func error
   47          | error

   48 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   49         | error E

   50 callfunc_args: expr
   51              | vector
   52              | matrix
   53              | callfunc_args ',' expr
   54              | callfunc_args ',' vector
   55              | callfunc_args ',' matrix
   56              | callfunc_args error
   57              | error

   58 callfunction: FVARIABLE '[' callfunc_args ']'
   59             | error '[' callfunc_args ']'

   60 matrix: '{' listexprs '}'
   61       | MVARIABLE '(' vector ',' '[' ']' ')'
   62       | MVARIABLE '(' '[' ']' ',' vector ')'
   63       | MVARIABLE '(' matrix ')'
   64       | MVARIABLE
   65       | matrix '*' matrix
   66       | matrix ELEMMULT matrix
   67       | matrix '\''
   68       | matrix RIGHTSHIFT
   69       | matrix LEFTSHIFT
   70       | vector '\''
   71       | matrix ELEMMULT vector
   72       | matrix ELEMMULT expr
   73       | error matrix
   74       | error vector
   75       | error expr

   76 listexprs: vector ',' vector
   77          | listexprs ',' vector
   78          | listexprs error

   79 vector: '{' exprs '}'
   80       | VVARIABLE '(' vector ',' '[' ']' ')'
   81       | MVARIABLE '(' expr ',' '[' ']' ')'
   82       | MVARIABLE '(' '[' ']' ',' expr ')'
   83       | VVARIABLE
   84       | vector ELEMMULT vector
   85       | vector RIGHTSHIFT
   86       | vector LEFTSHIFT
   87       | vector ELEMMULT expr
   88       | error vector
   89       | error expr

   90 exprs: expr ',' expr
   91      | exprs ',' expr
   92      | exprs error

   93 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr
   94              | VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   95              | MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   96              | MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   97              | MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   98              | MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   99              | MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  100              | MVARIABLE '(' matrix ')' ASSIGN matrix

  101 declaration: type VAR DECLARE expr
  102            | type VAR DECLARE vector
  103            | type VAR DECLARE matrix

  104 assignment: VARIABLE ASSIGN expr
  105           | VVARIABLE ASSIGN vector
  106           | MVARIABLE ASSIGN matrix

  107 print: PRINT '(' expr ')'
  108      | PRINT '(' VVARIABLE ')'
  109      | PRINT '(' MVARIABLE ')'

  110 expr: const
  111     | robotexit
  112     | robotmove
  113     | robotwall
  114     | VARIABLE
  115     | '-' expr
  116     | expr '+' expr
  117     | expr '-' expr
  118     | expr '/' expr
  119     | expr '<' expr
  120     | expr '>' expr
  121     | '!' expr
  122     | expr CONJUNCTION expr
  123     | '(' expr ')'
  124     | VVARIABLE '(' expr ')'
  125     | MVARIABLE '(' expr ',' expr ')'
  126     | error expr

  127 type: INT
  128     | CINT
  129     | VINT
  130     | MINT
  131     | CVINT
  132     | CMINT
  133     | BOOLEAN
  134     | CBOOLEAN
  135     | VBOOLEAN
  136     | MBOOLEAN
  137     | CVBOOLEAN
  138     | CMBOOLEAN

  139 const: INTEGER
  140      | BOOL


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'!' (33) 121
'\'' (39) 67 70
'(' (40) 22 26 48 61 62 63 80 81 82 93 94 95 96 97 98 99 100 107 108
    109 123 124 125
')' (41) 22 26 48 61 62 63 80 81 82 93 94 95 96 97 98 99 100 107 108
    109 123 124 125
'*' (42) 65
'+' (43) 116
',' (44) 42 45 53 54 55 61 62 76 77 80 81 82 90 91 94 95 96 97 98 99
    125
'-' (45) 115 117
'/' (47) 118
'<' (60) 119
'>' (62) 120
'[' (91) 44 45 48 58 59 61 62 80 81 82 94 96 97 98 99
']' (93) 44 45 48 58 59 61 62 80 81 82 94 96 97 98 99
'{' (123) 60 79
'}' (125) 60 79
error (256) 3 7 8 23 43 46 47 49 56 57 59 73 74 75 78 88 89 92 126
END (258)
BOOL <boolPtr> (259) 140
INTEGER <intPtr> (260) 139
VARIABLE <varName> (261) 104 114
VVARIABLE <varName> (262) 80 83 93 94 105 108 124
MVARIABLE <varName> (263) 61 62 63 64 81 82 95 96 97 98 99 100 106
    109 125
VAR <varName> (264) 41 42 44 45 48 101 102 103
FVARIABLE <varName> (265) 58
CINT <vtype> (266) 128
VINT <vtype> (267) 129
MINT <vtype> (268) 130
INT <vtype> (269) 127
CVINT <vtype> (270) 131
CMINT <vtype> (271) 132
BOOLEAN <vtype> (272) 133
CBOOLEAN <vtype> (273) 134
VBOOLEAN <vtype> (274) 135
MBOOLEAN <vtype> (275) 136
CVBOOLEAN <vtype> (276) 137
CMBOOLEAN <vtype> (277) 138
NEWLINE (278) 9 10 11 12 13 14 15 16 17 18 19 20 21 23 31 40 48
PRINT (279) 107 108 109
CONJUNCTION (280) 122
ELEMMULT (281) 66 71 72 84 87
LEFTSHIFT (282) 69 86
RIGHTSHIFT (283) 68 85
IF (284) 31
FORR (285) 40
ER (286)
DOUBLEDOT (287) 40
B (288) 32 36 48
E (289) 34 38 48 49
FUNC (290) 48
MOVE (291) 26
RIGHT (292) 27
LEFT (293) 28
ROBEX (294) 30
WALL (295) 29
BEGFOR (296) 37
BEGIF (297) 33
ENDIF (298) 35
ENDFOR (299) 39
ASSIGN (300) 93 94 95 96 97 98 99 100 104 105 106
DECLARE (301) 48 101 102 103
UMINUS (302)


Нетерминальные символы с правилами, в которых они появляются

$accept (63)
    налево: 0
program (64)
    налево: 1, направо: 0
func (65)
    налево: 2 3 4, направо: 1 2 3
stmts <ptr> (66)
    налево: 5 6 7 8, направо: 2 6 7 22 31 40 48
stmt <ptr> (67)
    налево: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23, направо:
    5 6
robotactions <ptr> (68)
    налево: 24 25, направо: 21
robotmove <ptr> (69)
    налево: 26, направо: 112
robotright <ptr> (70)
    налево: 27, направо: 24
robotleft <ptr> (71)
    налево: 28, направо: 25
robotwall <ptr> (72)
    налево: 29, направо: 113
robotexit <ptr> (73)
    налево: 30, направо: 111
iff <ptr> (74)
    налево: 31, направо: 17
begif (75)
    налево: 32 33, направо: 31
endif (76)
    налево: 34 35, направо: 31
begfor (77)
    налево: 36 37, направо: 40
endfor (78)
    налево: 38 39, направо: 40
forr <ptr> (79)
    налево: 40, направо: 18
return_func <ptr> (80)
    налево: 41 42 43, направо: 42 43 48
args_func <ptr> (81)
    налево: 44 45 46 47, направо: 45 46 48
function <ptr> (82)
    налево: 48 49, направо: 19
callfunc_args <ptr> (83)
    налево: 50 51 52 53 54 55 56 57, направо: 53 54 55
    56 58 59
callfunction <ptr> (84)
    налево: 58 59, направо: 20
matrix <ptr> (85)
    налево: 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75,
    направо: 12 52 55 63 65 66 67 68 69 71 72 73 98 99 100 103
    106
listexprs <ptr> (86)
    налево: 76 77 78, направо: 60 77 78
vector <ptr> (87)
    налево: 79 80 81 82 83 84 85 86 87 88 89, направо:
    11 51 54 61 62 70 71 74 76 77 80 84 85 86 87 88 94 96 97 98 99
    102 105
exprs <ptr> (88)
    налево: 90 91 92, направо: 79 91 92
vmdeclaration <ptr> (89)
    налево: 93 94 95 96 97 98 99 100, направо: 14
declaration <varOpPtr> (90)
    налево: 101 102 103, направо: 15 40
assignment <varOpPtr> (91)
    налево: 104 105 106, направо: 16
print <ptr> (92)
    налево: 107 108 109, направо: 13
expr <ptr> (93)
    налево: 110 111 112 113 114 115 116 117 118 119 120 121 122
    123 124 125 126, направо: 10 26 31 40 50 53 72 75 81 82
    87 89 90 91 93 95 96 97 101 104 107 115 116 117 118 119 120 121
    122 123 124 125 126
type <vtype> (94)
    налево: 127 128 129 130 131 132 133 134 135 136 137 138,
    направо: 41 42 44 45 101 102 103
const <ptr> (95)
    налево: 139 140, направо: 110


State 0

    0 $accept: . program $end
    1 program: . func
    2 func: . func stmts
    3     | . func error
    4     | . %empty

    $default  вывод с использованием правила 4 (func)

    program  переход в состояние 1
    func     переход в состояние 2


State 1

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 3


State 2

    1 program: func .  [$end]
    2 func: func . stmts
    3     | func . error
    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   49         | . error E
   58 callfunction: . FVARIABLE '[' callfunc_args ']'
   59             | . error '[' callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   93 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   94              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   95              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   96              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   98              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   99              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  100              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  101 declaration: . type VAR DECLARE expr
  102            | . type VAR DECLARE vector
  103            | . type VAR DECLARE matrix
  104 assignment: . VARIABLE ASSIGN expr
  105           | . VVARIABLE ASSIGN vector
  106           | . MVARIABLE ASSIGN matrix
  107 print: . PRINT '(' expr ')'
  108      | . PRINT '(' VVARIABLE ')'
  109      | . PRINT '(' MVARIABLE ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 4
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    $end  вывод с использованием правила 1 (program)

    stmts          переход в состояние 37
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 3

    0 $accept: program $end .

    $default  принять


State 4

    3 func: func error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    8 stmts: error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   49 function: error . E
   59 callfunction: error . '[' callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   73       | error . matrix
   74       | . error vector
   74       | error . vector
   75       | . error expr
   75       | error . expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   88       | error . vector
   89       | . error expr
   89       | error . expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  126     | error . expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    NEWLINE    сдвиг, и переход в состояние 62
    E          сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 36

    $end       вывод с использованием правила 3 (func)
    $end       [вывод с использованием правила 8 (stmts)]
    error      [вывод с использованием правила 3 (func)]
    error      [вывод с использованием правила 8 (stmts)]
    BOOL       [вывод с использованием правила 3 (func)]
    BOOL       [вывод с использованием правила 8 (stmts)]
    INTEGER    [вывод с использованием правила 3 (func)]
    INTEGER    [вывод с использованием правила 8 (stmts)]
    VARIABLE   [вывод с использованием правила 3 (func)]
    VARIABLE   [вывод с использованием правила 8 (stmts)]
    VVARIABLE  [вывод с использованием правила 3 (func)]
    VVARIABLE  [вывод с использованием правила 8 (stmts)]
    MVARIABLE  [вывод с использованием правила 3 (func)]
    MVARIABLE  [вывод с использованием правила 8 (stmts)]
    FVARIABLE  вывод с использованием правила 3 (func)
    FVARIABLE  [вывод с использованием правила 8 (stmts)]
    CINT       вывод с использованием правила 3 (func)
    CINT       [вывод с использованием правила 8 (stmts)]
    VINT       вывод с использованием правила 3 (func)
    VINT       [вывод с использованием правила 8 (stmts)]
    MINT       вывод с использованием правила 3 (func)
    MINT       [вывод с использованием правила 8 (stmts)]
    INT        вывод с использованием правила 3 (func)
    INT        [вывод с использованием правила 8 (stmts)]
    CVINT      вывод с использованием правила 3 (func)
    CVINT      [вывод с использованием правила 8 (stmts)]
    CMINT      вывод с использованием правила 3 (func)
    CMINT      [вывод с использованием правила 8 (stmts)]
    BOOLEAN    вывод с использованием правила 3 (func)
    BOOLEAN    [вывод с использованием правила 8 (stmts)]
    CBOOLEAN   вывод с использованием правила 3 (func)
    CBOOLEAN   [вывод с использованием правила 8 (stmts)]
    VBOOLEAN   вывод с использованием правила 3 (func)
    VBOOLEAN   [вывод с использованием правила 8 (stmts)]
    MBOOLEAN   вывод с использованием правила 3 (func)
    MBOOLEAN   [вывод с использованием правила 8 (stmts)]
    CVBOOLEAN  вывод с использованием правила 3 (func)
    CVBOOLEAN  [вывод с использованием правила 8 (stmts)]
    CMBOOLEAN  вывод с использованием правила 3 (func)
    CMBOOLEAN  [вывод с использованием правила 8 (stmts)]
    NEWLINE    [вывод с использованием правила 3 (func)]
    NEWLINE    [вывод с использованием правила 8 (stmts)]
    PRINT      вывод с использованием правила 3 (func)
    PRINT      [вывод с использованием правила 8 (stmts)]
    IF         вывод с использованием правила 3 (func)
    IF         [вывод с использованием правила 8 (stmts)]
    FORR       вывод с использованием правила 3 (func)
    FORR       [вывод с использованием правила 8 (stmts)]
    MOVE       [вывод с использованием правила 3 (func)]
    MOVE       [вывод с использованием правила 8 (stmts)]
    RIGHT      вывод с использованием правила 3 (func)
    RIGHT      [вывод с использованием правила 8 (stmts)]
    LEFT       вывод с использованием правила 3 (func)
    LEFT       [вывод с использованием правила 8 (stmts)]
    ROBEX      [вывод с использованием правила 3 (func)]
    ROBEX      [вывод с использованием правила 8 (stmts)]
    WALL       [вывод с использованием правила 3 (func)]
    WALL       [вывод с использованием правила 8 (stmts)]
    '-'        [вывод с использованием правила 3 (func)]
    '-'        [вывод с использованием правила 8 (stmts)]
    '!'        [вывод с использованием правила 3 (func)]
    '!'        [вывод с использованием правила 8 (stmts)]
    '('        [вывод с использованием правила 3 (func)]
    '('        [вывод с использованием правила 8 (stmts)]
    '['        [вывод с использованием правила 3 (func)]
    '['        [вывод с использованием правила 8 (stmts)]
    '{'        [вывод с использованием правила 3 (func)]
    '{'        [вывод с использованием правила 8 (stmts)]

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 5

  140 const: BOOL .

    $default  вывод с использованием правила 140 (const)


State 6

  139 const: INTEGER .

    $default  вывод с использованием правила 139 (const)


State 7

  104 assignment: VARIABLE . ASSIGN expr
  114 expr: VARIABLE .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 69

    $default  вывод с использованием правила 114 (expr)


State 8

   80 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   83       | VVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   93 vmdeclaration: VVARIABLE . '(' expr ')' ASSIGN expr
   94              | VVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN vector
  105 assignment: VVARIABLE . ASSIGN vector
  124 expr: VVARIABLE . '(' expr ')'

    ASSIGN  сдвиг, и переход в состояние 70
    '('     сдвиг, и переход в состояние 71

    $default  вывод с использованием правила 83 (vector)


State 9

   61 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   62       | MVARIABLE . '(' '[' ']' ',' vector ')'
   63       | MVARIABLE . '(' matrix ')'
   64       | MVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   81 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   82       | MVARIABLE . '(' '[' ']' ',' expr ')'
   95 vmdeclaration: MVARIABLE . '(' expr ',' expr ')' ASSIGN expr
   96              | MVARIABLE . '(' expr ',' '[' ']' ')' ASSIGN vector
   97              | MVARIABLE . '(' '[' ']' ',' expr ')' ASSIGN vector
   98              | MVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN matrix
   99              | MVARIABLE . '(' '[' ']' ',' vector ')' ASSIGN matrix
  100              | MVARIABLE . '(' matrix ')' ASSIGN matrix
  106 assignment: MVARIABLE . ASSIGN matrix
  125 expr: MVARIABLE . '(' expr ',' expr ')'

    ASSIGN  сдвиг, и переход в состояние 72
    '('     сдвиг, и переход в состояние 73

    $default  вывод с использованием правила 64 (matrix)


State 10

   58 callfunction: FVARIABLE . '[' callfunc_args ']'

    '['  сдвиг, и переход в состояние 74


State 11

  128 type: CINT .

    $default  вывод с использованием правила 128 (type)


State 12

  129 type: VINT .

    $default  вывод с использованием правила 129 (type)


State 13

  130 type: MINT .

    $default  вывод с использованием правила 130 (type)


State 14

  127 type: INT .

    $default  вывод с использованием правила 127 (type)


State 15

  131 type: CVINT .

    $default  вывод с использованием правила 131 (type)


State 16

  132 type: CMINT .

    $default  вывод с использованием правила 132 (type)


State 17

  133 type: BOOLEAN .

    $default  вывод с использованием правила 133 (type)


State 18

  134 type: CBOOLEAN .

    $default  вывод с использованием правила 134 (type)


State 19

  135 type: VBOOLEAN .

    $default  вывод с использованием правила 135 (type)


State 20

  136 type: MBOOLEAN .

    $default  вывод с использованием правила 136 (type)


State 21

  137 type: CVBOOLEAN .

    $default  вывод с использованием правила 137 (type)


State 22

  138 type: CMBOOLEAN .

    $default  вывод с использованием правила 138 (type)


State 23

    9 stmt: NEWLINE .

    $default  вывод с использованием правила 9 (stmt)


State 24

  107 print: PRINT . '(' expr ')'
  108      | PRINT . '(' VVARIABLE ')'
  109      | PRINT . '(' MVARIABLE ')'

    '('  сдвиг, и переход в состояние 75


State 25

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: IF . expr NEWLINE begif stmts endif
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 79
    const      переход в состояние 57


State 26

   40 forr: FORR . declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
  101 declaration: . type VAR DECLARE expr
  102            | . type VAR DECLARE vector
  103            | . type VAR DECLARE matrix
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    declaration  переход в состояние 80
    type         переход в состояние 56


State 27

   26 robotmove: MOVE . '(' expr ')'

    '('  сдвиг, и переход в состояние 81


State 28

   27 robotright: RIGHT .

    $default  вывод с использованием правила 27 (robotright)


State 29

   28 robotleft: LEFT .

    $default  вывод с использованием правила 28 (robotleft)


State 30

   30 robotexit: ROBEX .

    $default  вывод с использованием правила 30 (robotexit)


State 31

   29 robotwall: WALL .

    $default  вывод с использованием правила 29 (robotwall)


State 32

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  115     | '-' . expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 82
    const      переход в состояние 57


State 33

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  121     | '!' . expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 83
    const      переход в состояние 57


State 34

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   22     | '(' . stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   49         | . error E
   58 callfunction: . FVARIABLE '[' callfunc_args ']'
   59             | . error '[' callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   93 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   94              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   95              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   96              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   98              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   99              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  100              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  101 declaration: . type VAR DECLARE expr
  102            | . type VAR DECLARE vector
  103            | . type VAR DECLARE matrix
  104 assignment: . VARIABLE ASSIGN expr
  105           | . VVARIABLE ASSIGN vector
  106           | . MVARIABLE ASSIGN matrix
  107 print: . PRINT '(' expr ')'
  108      | . PRINT '(' VVARIABLE ')'
  109      | . PRINT '(' MVARIABLE ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  123     | '(' . expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 84
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 85
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 86
    type           переход в состояние 56
    const          переход в состояние 57


State 35

   41 return_func: . type VAR
   42            | . return_func ',' type VAR
   43            | . return_func error
   48 function: '[' . return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    return_func  переход в состояние 87
    type         переход в состояние 88


State 36

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   60 matrix: '{' . listexprs '}'
   76 listexprs: . vector ',' vector
   77          | . listexprs ',' vector
   78          | . listexprs error
   79 vector: . '{' exprs '}'
   79       | '{' . exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   90 exprs: . expr ',' expr
   91      | . exprs ',' expr
   92      | . exprs error
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    listexprs  переход в состояние 92
    vector     переход в состояние 93
    exprs      переход в состояние 94
    expr       переход в состояние 95
    const      переход в состояние 57


State 37

    2 func: func stmts .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   49         | . error E
   58 callfunction: . FVARIABLE '[' callfunc_args ']'
   59             | . error '[' callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   93 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   94              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   95              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   96              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   98              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   99              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  100              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  101 declaration: . type VAR DECLARE expr
  102            | . type VAR DECLARE vector
  103            | . type VAR DECLARE matrix
  104 assignment: . VARIABLE ASSIGN expr
  105           | . VVARIABLE ASSIGN vector
  106           | . MVARIABLE ASSIGN matrix
  107 print: . PRINT '(' expr ')'
  108      | . PRINT '(' VVARIABLE ')'
  109      | . PRINT '(' MVARIABLE ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    $end       вывод с использованием правила 2 (func)
    error      [вывод с использованием правила 2 (func)]
    BOOL       [вывод с использованием правила 2 (func)]
    INTEGER    [вывод с использованием правила 2 (func)]
    VARIABLE   [вывод с использованием правила 2 (func)]
    VVARIABLE  [вывод с использованием правила 2 (func)]
    MVARIABLE  [вывод с использованием правила 2 (func)]
    FVARIABLE  [вывод с использованием правила 2 (func)]
    CINT       [вывод с использованием правила 2 (func)]
    VINT       [вывод с использованием правила 2 (func)]
    MINT       [вывод с использованием правила 2 (func)]
    INT        [вывод с использованием правила 2 (func)]
    CVINT      [вывод с использованием правила 2 (func)]
    CMINT      [вывод с использованием правила 2 (func)]
    BOOLEAN    [вывод с использованием правила 2 (func)]
    CBOOLEAN   [вывод с использованием правила 2 (func)]
    VBOOLEAN   [вывод с использованием правила 2 (func)]
    MBOOLEAN   [вывод с использованием правила 2 (func)]
    CVBOOLEAN  [вывод с использованием правила 2 (func)]
    CMBOOLEAN  [вывод с использованием правила 2 (func)]
    NEWLINE    [вывод с использованием правила 2 (func)]
    PRINT      [вывод с использованием правила 2 (func)]
    IF         [вывод с использованием правила 2 (func)]
    FORR       [вывод с использованием правила 2 (func)]
    MOVE       [вывод с использованием правила 2 (func)]
    RIGHT      [вывод с использованием правила 2 (func)]
    LEFT       [вывод с использованием правила 2 (func)]
    ROBEX      [вывод с использованием правила 2 (func)]
    WALL       [вывод с использованием правила 2 (func)]
    '-'        [вывод с использованием правила 2 (func)]
    '!'        [вывод с использованием правила 2 (func)]
    '('        [вывод с использованием правила 2 (func)]
    '['        [вывод с использованием правила 2 (func)]
    '{'        [вывод с использованием правила 2 (func)]

    stmt           переход в состояние 97
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 38

    5 stmts: stmt .

    $default  вывод с использованием правила 5 (stmts)


State 39

   21 stmt: robotactions . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 98


State 40

  112 expr: robotmove .

    $default  вывод с использованием правила 112 (expr)


State 41

   24 robotactions: robotright .

    $default  вывод с использованием правила 24 (robotactions)


State 42

   25 robotactions: robotleft .

    $default  вывод с использованием правила 25 (robotactions)


State 43

  113 expr: robotwall .

    $default  вывод с использованием правила 113 (expr)


State 44

  111 expr: robotexit .

    $default  вывод с использованием правила 111 (expr)


State 45

   17 stmt: iff . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 99


State 46

   18 stmt: forr . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 100


State 47

   19 stmt: function . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 101


State 48

   20 stmt: callfunction . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 102


State 49

   12 stmt: matrix . NEWLINE
   65 matrix: matrix . '*' matrix
   66       | matrix . ELEMMULT matrix
   67       | matrix . '\''
   68       | matrix . RIGHTSHIFT
   69       | matrix . LEFTSHIFT
   71       | matrix . ELEMMULT vector
   72       | matrix . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 103
    ELEMMULT    сдвиг, и переход в состояние 104
    '\''        сдвиг, и переход в состояние 105
    LEFTSHIFT   сдвиг, и переход в состояние 106
    RIGHTSHIFT  сдвиг, и переход в состояние 107
    '*'         сдвиг, и переход в состояние 108


State 50

   11 stmt: vector . NEWLINE
   70 matrix: vector . '\''
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 109
    ELEMMULT    сдвиг, и переход в состояние 110
    '\''        сдвиг, и переход в состояние 111
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113


State 51

   14 stmt: vmdeclaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 114


State 52

   15 stmt: declaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 115


State 53

   16 stmt: assignment . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 116


State 54

   13 stmt: print . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 117


State 55

   10 stmt: expr . NEWLINE
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 118
    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124


State 56

  101 declaration: type . VAR DECLARE expr
  102            | type . VAR DECLARE vector
  103            | type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 125


State 57

  110 expr: const .

    $default  вывод с использованием правила 110 (expr)


State 58

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   73       | error . matrix
   74       | . error vector
   74       | error . vector
   75       | . error expr
   75       | error . expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   88       | error . vector
   89       | . error expr
   89       | error . expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  126     | error . expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 59

  114 expr: VARIABLE .

    $default  вывод с использованием правила 114 (expr)


State 60

   80 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   83       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  124 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 126

    $default  вывод с использованием правила 83 (vector)


State 61

   61 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   62       | MVARIABLE . '(' '[' ']' ',' vector ')'
   63       | MVARIABLE . '(' matrix ')'
   64       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   81 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   82       | MVARIABLE . '(' '[' ']' ',' expr ')'
  125 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 127

    $default  вывод с использованием правила 64 (matrix)


State 62

   23 stmt: error NEWLINE .

    $default  вывод с использованием правила 23 (stmt)


State 63

   49 function: error E .

    $default  вывод с использованием правила 49 (function)


State 64

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  123     | '(' . expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 128
    const      переход в состояние 57


State 65

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   50 callfunc_args: . expr
   51              | . vector
   52              | . matrix
   53              | . callfunc_args ',' expr
   54              | . callfunc_args ',' vector
   55              | . callfunc_args ',' matrix
   56              | . callfunc_args error
   57              | . error
   59 callfunction: error '[' . callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 129
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove      переход в состояние 40
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    callfunc_args  переход в состояние 130
    matrix         переход в состояние 131
    vector         переход в состояние 132
    expr           переход в состояние 133
    const          переход в состояние 57


State 66

   65 matrix: matrix . '*' matrix
   66       | matrix . ELEMMULT matrix
   67       | matrix . '\''
   68       | matrix . RIGHTSHIFT
   69       | matrix . LEFTSHIFT
   71       | matrix . ELEMMULT vector
   72       | matrix . ELEMMULT expr
   73       | error matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']

    ELEMMULT    сдвиг, и переход в состояние 104
    '\''        сдвиг, и переход в состояние 105
    LEFTSHIFT   сдвиг, и переход в состояние 106
    RIGHTSHIFT  сдвиг, и переход в состояние 107
    '*'         сдвиг, и переход в состояние 108

    ELEMMULT    [вывод с использованием правила 73 (matrix)]
    '\''        [вывод с использованием правила 73 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 73 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 73 (matrix)]
    '*'         [вывод с использованием правила 73 (matrix)]
    $default    вывод с использованием правила 73 (matrix)


State 67

   70 matrix: vector . '\''
   74       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr
   88       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']

    ELEMMULT    сдвиг, и переход в состояние 110
    '\''        сдвиг, и переход в состояние 111
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113

    error       вывод с использованием правила 74 (matrix)
    error       [вывод с использованием правила 88 (vector)]
    NEWLINE     вывод с использованием правила 74 (matrix)
    NEWLINE     [вывод с использованием правила 88 (vector)]
    ELEMMULT    [вывод с использованием правила 74 (matrix)]
    ELEMMULT    [вывод с использованием правила 88 (vector)]
    '\''        [вывод с использованием правила 74 (matrix)]
    '\''        [вывод с использованием правила 88 (vector)]
    LEFTSHIFT   [вывод с использованием правила 74 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 88 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 74 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 88 (vector)]
    ','         вывод с использованием правила 74 (matrix)
    ','         [вывод с использованием правила 88 (vector)]
    DOUBLEDOT   вывод с использованием правила 74 (matrix)
    DOUBLEDOT   [вывод с использованием правила 88 (vector)]
    '*'         вывод с использованием правила 74 (matrix)
    '*'         [вывод с использованием правила 88 (vector)]
    ')'         вывод с использованием правила 74 (matrix)
    ')'         [вывод с использованием правила 88 (vector)]
    ']'         вывод с использованием правила 74 (matrix)
    ']'         [вывод с использованием правила 88 (vector)]
    $default    вывод с использованием правила 74 (matrix)


State 68

   75 matrix: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   89 vector: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr
  126     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']']

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    error        вывод с использованием правила 75 (matrix)
    error        [вывод с использованием правила 89 (vector)]
    error        [вывод с использованием правила 126 (expr)]
    NEWLINE      вывод с использованием правила 75 (matrix)
    NEWLINE      [вывод с использованием правила 89 (vector)]
    NEWLINE      [вывод с использованием правила 126 (expr)]
    CONJUNCTION  [вывод с использованием правила 126 (expr)]
    ELEMMULT     вывод с использованием правила 75 (matrix)
    ELEMMULT     [вывод с использованием правила 89 (vector)]
    ELEMMULT     [вывод с использованием правила 126 (expr)]
    '\''         вывод с использованием правила 75 (matrix)
    '\''         [вывод с использованием правила 89 (vector)]
    '\''         [вывод с использованием правила 126 (expr)]
    LEFTSHIFT    вывод с использованием правила 75 (matrix)
    LEFTSHIFT    [вывод с использованием правила 89 (vector)]
    LEFTSHIFT    [вывод с использованием правила 126 (expr)]
    RIGHTSHIFT   вывод с использованием правила 75 (matrix)
    RIGHTSHIFT   [вывод с использованием правила 89 (vector)]
    RIGHTSHIFT   [вывод с использованием правила 126 (expr)]
    ','          вывод с использованием правила 75 (matrix)
    ','          [вывод с использованием правила 89 (vector)]
    ','          [вывод с использованием правила 126 (expr)]
    DOUBLEDOT    вывод с использованием правила 75 (matrix)
    DOUBLEDOT    [вывод с использованием правила 89 (vector)]
    DOUBLEDOT    [вывод с использованием правила 126 (expr)]
    '<'          [вывод с использованием правила 126 (expr)]
    '>'          [вывод с использованием правила 126 (expr)]
    '+'          [вывод с использованием правила 126 (expr)]
    '-'          [вывод с использованием правила 126 (expr)]
    '*'          вывод с использованием правила 75 (matrix)
    '*'          [вывод с использованием правила 89 (vector)]
    '*'          [вывод с использованием правила 126 (expr)]
    '/'          [вывод с использованием правила 126 (expr)]
    ')'          вывод с использованием правила 75 (matrix)
    ')'          [вывод с использованием правила 89 (vector)]
    ')'          [вывод с использованием правила 126 (expr)]
    ']'          вывод с использованием правила 75 (matrix)
    ']'          [вывод с использованием правила 89 (vector)]
    ']'          [вывод с использованием правила 126 (expr)]
    $default     вывод с использованием правила 75 (matrix)


State 69

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  104 assignment: VARIABLE ASSIGN . expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 134
    const      переход в состояние 57


State 70

   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
  105 assignment: VVARIABLE ASSIGN . vector

    error      сдвиг, и переход в состояние 135
    VVARIABLE  сдвиг, и переход в состояние 136
    MVARIABLE  сдвиг, и переход в состояние 137
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 138


State 71

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   80       | VVARIABLE '(' . vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   93 vmdeclaration: VVARIABLE '(' . expr ')' ASSIGN expr
   94              | VVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN vector
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  124     | VVARIABLE '(' . expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 139
    expr       переход в состояние 140
    const      переход в состояние 57


State 72

   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
  106 assignment: MVARIABLE ASSIGN . matrix

    error      сдвиг, и переход в состояние 141
    VVARIABLE  сдвиг, и переход в состояние 136
    MVARIABLE  сдвиг, и переход в состояние 142
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 143
    vector  переход в состояние 144


State 73

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   61       | MVARIABLE '(' . vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   62       | MVARIABLE '(' . '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   63       | MVARIABLE '(' . matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   81       | MVARIABLE '(' . expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   82       | MVARIABLE '(' . '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   95 vmdeclaration: MVARIABLE '(' . expr ',' expr ')' ASSIGN expr
   96              | MVARIABLE '(' . expr ',' '[' ']' ')' ASSIGN vector
   97              | MVARIABLE '(' . '[' ']' ',' expr ')' ASSIGN vector
   98              | MVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN matrix
   99              | MVARIABLE '(' . '[' ']' ',' vector ')' ASSIGN matrix
  100              | MVARIABLE '(' . matrix ')' ASSIGN matrix
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  125     | MVARIABLE '(' . expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 145
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 146
    vector     переход в состояние 147
    expr       переход в состояние 148
    const      переход в состояние 57


State 74

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   50 callfunc_args: . expr
   51              | . vector
   52              | . matrix
   53              | . callfunc_args ',' expr
   54              | . callfunc_args ',' vector
   55              | . callfunc_args ',' matrix
   56              | . callfunc_args error
   57              | . error
   58 callfunction: FVARIABLE '[' . callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 129
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove      переход в состояние 40
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    callfunc_args  переход в состояние 149
    matrix         переход в состояние 131
    vector         переход в состояние 132
    expr           переход в состояние 133
    const          переход в состояние 57


State 75

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  107 print: PRINT '(' . expr ')'
  108      | PRINT '(' . VVARIABLE ')'
  109      | PRINT '(' . MVARIABLE ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 150
    MVARIABLE  сдвиг, и переход в состояние 151
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 152
    const      переход в состояние 57


State 76

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  126     | error . expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 153
    const      переход в состояние 57


State 77

  124 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 154


State 78

  125 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 155


State 79

   31 iff: IF expr . NEWLINE begif stmts endif
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 156
    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124


State 80

   40 forr: FORR declaration . DOUBLEDOT expr NEWLINE begfor stmts endfor

    DOUBLEDOT  сдвиг, и переход в состояние 157


State 81

   26 robotmove: . MOVE '(' expr ')'
   26          | MOVE '(' . expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 158
    const      переход в состояние 57


State 82

  115 expr: '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  116     | expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119

    CONJUNCTION  [вывод с использованием правила 115 (expr)]
    $default     вывод с использованием правила 115 (expr)

    Конфликт между правилом 115 и лексемой '<' разрешен выводом ('<' < UMINUS).
    Конфликт между правилом 115 и лексемой '>' разрешен выводом ('>' < UMINUS).
    Конфликт между правилом 115 и лексемой '+' разрешен выводом ('+' < UMINUS).
    Конфликт между правилом 115 и лексемой '-' разрешен выводом ('-' < UMINUS).
    Конфликт между правилом 115 и лексемой '/' разрешен выводом ('/' < UMINUS).


State 83

  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  121     | '!' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119

    CONJUNCTION  [вывод с использованием правила 121 (expr)]
    $default     вывод с использованием правила 121 (expr)

    Конфликт между правилом 121 и лексемой '<' разрешен выводом ('<' < '!').
    Конфликт между правилом 121 и лексемой '>' разрешен выводом ('>' < '!').
    Конфликт между правилом 121 и лексемой '+' разрешен выводом ('+' < '!').
    Конфликт между правилом 121 и лексемой '-' разрешен выводом ('-' < '!').
    Конфликт между правилом 121 и лексемой '/' разрешен выводом ('/' < '!').


State 84

    8 stmts: error .  [error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, E, MOVE, RIGHT, LEFT, ROBEX, WALL, ENDIF, ENDFOR, '-', '!', '(', ')', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   49 function: error . E
   59 callfunction: error . '[' callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   73       | error . matrix
   74       | . error vector
   74       | error . vector
   75       | . error expr
   75       | error . expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   88       | error . vector
   89       | . error expr
   89       | error . expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  126     | error . expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    NEWLINE    сдвиг, и переход в состояние 62
    E          сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 36

    error      [вывод с использованием правила 8 (stmts)]
    BOOL       [вывод с использованием правила 8 (stmts)]
    INTEGER    [вывод с использованием правила 8 (stmts)]
    VARIABLE   [вывод с использованием правила 8 (stmts)]
    VVARIABLE  [вывод с использованием правила 8 (stmts)]
    MVARIABLE  [вывод с использованием правила 8 (stmts)]
    FVARIABLE  вывод с использованием правила 8 (stmts)
    CINT       вывод с использованием правила 8 (stmts)
    VINT       вывод с использованием правила 8 (stmts)
    MINT       вывод с использованием правила 8 (stmts)
    INT        вывод с использованием правила 8 (stmts)
    CVINT      вывод с использованием правила 8 (stmts)
    CMINT      вывод с использованием правила 8 (stmts)
    BOOLEAN    вывод с использованием правила 8 (stmts)
    CBOOLEAN   вывод с использованием правила 8 (stmts)
    VBOOLEAN   вывод с использованием правила 8 (stmts)
    MBOOLEAN   вывод с использованием правила 8 (stmts)
    CVBOOLEAN  вывод с использованием правила 8 (stmts)
    CMBOOLEAN  вывод с использованием правила 8 (stmts)
    NEWLINE    [вывод с использованием правила 8 (stmts)]
    PRINT      вывод с использованием правила 8 (stmts)
    IF         вывод с использованием правила 8 (stmts)
    FORR       вывод с использованием правила 8 (stmts)
    E          [вывод с использованием правила 8 (stmts)]
    MOVE       [вывод с использованием правила 8 (stmts)]
    RIGHT      вывод с использованием правила 8 (stmts)
    LEFT       вывод с использованием правила 8 (stmts)
    ROBEX      [вывод с использованием правила 8 (stmts)]
    WALL       [вывод с использованием правила 8 (stmts)]
    ENDIF      вывод с использованием правила 8 (stmts)
    ENDFOR     вывод с использованием правила 8 (stmts)
    '-'        [вывод с использованием правила 8 (stmts)]
    '!'        [вывод с использованием правила 8 (stmts)]
    '('        [вывод с использованием правила 8 (stmts)]
    ')'        вывод с использованием правила 8 (stmts)
    '['        [вывод с использованием правила 8 (stmts)]
    '{'        [вывод с использованием правила 8 (stmts)]

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 85

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   22     | '(' stmts . ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   49         | . error E
   58 callfunction: . FVARIABLE '[' callfunc_args ']'
   59             | . error '[' callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   93 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   94              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   95              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   96              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   98              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   99              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  100              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  101 declaration: . type VAR DECLARE expr
  102            | . type VAR DECLARE vector
  103            | . type VAR DECLARE matrix
  104 assignment: . VARIABLE ASSIGN expr
  105           | . VVARIABLE ASSIGN vector
  106           | . MVARIABLE ASSIGN matrix
  107 print: . PRINT '(' expr ')'
  108      | . PRINT '(' VVARIABLE ')'
  109      | . PRINT '(' MVARIABLE ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    ')'        сдвиг, и переход в состояние 159
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 97
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 86

   10 stmt: expr . NEWLINE
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr
  123     | '(' expr . ')'

    NEWLINE      сдвиг, и переход в состояние 118
    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124
    ')'          сдвиг, и переход в состояние 160


State 87

   42 return_func: return_func . ',' type VAR
   43            | return_func . error
   48 function: '[' return_func . ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E

    error  сдвиг, и переход в состояние 161
    ','    сдвиг, и переход в состояние 162
    ']'    сдвиг, и переход в состояние 163


State 88

   41 return_func: type . VAR

    VAR  сдвиг, и переход в состояние 164


State 89

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   88       | error . vector
   89       | . error expr
   89       | error . expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  126     | error . expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 165
    expr       переход в состояние 166
    const      переход в состояние 57


State 90

   81 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   82       | MVARIABLE . '(' '[' ']' ',' expr ')'
  125 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 167


State 91

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   79 vector: '{' . exprs '}'
   90 exprs: . expr ',' expr
   91      | . exprs ',' expr
   92      | . exprs error
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    exprs      переход в состояние 94
    expr       переход в состояние 95
    const      переход в состояние 57


State 92

   60 matrix: '{' listexprs . '}'
   77 listexprs: listexprs . ',' vector
   78          | listexprs . error

    error  сдвиг, и переход в состояние 168
    ','    сдвиг, и переход в состояние 169
    '}'    сдвиг, и переход в состояние 170


State 93

   76 listexprs: vector . ',' vector
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 110
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113
    ','         сдвиг, и переход в состояние 171


State 94

   79 vector: '{' exprs . '}'
   91 exprs: exprs . ',' expr
   92      | exprs . error

    error  сдвиг, и переход в состояние 172
    ','    сдвиг, и переход в состояние 173
    '}'    сдвиг, и переход в состояние 174


State 95

   90 exprs: expr . ',' expr
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    ','          сдвиг, и переход в состояние 175
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124


State 96

    7 stmts: stmts error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, FVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, E, MOVE, RIGHT, LEFT, ROBEX, WALL, ENDIF, ENDFOR, '-', '!', '(', ')', '[', '{']
   23 stmt: error . NEWLINE
   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   49 function: error . E
   59 callfunction: error . '[' callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   73       | error . matrix
   74       | . error vector
   74       | error . vector
   75       | . error expr
   75       | error . expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   88       | error . vector
   89       | . error expr
   89       | error . expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  126     | error . expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    NEWLINE    сдвиг, и переход в состояние 62
    E          сдвиг, и переход в состояние 63
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 65
    '{'        сдвиг, и переход в состояние 36

    $end       вывод с использованием правила 7 (stmts)
    error      [вывод с использованием правила 7 (stmts)]
    BOOL       [вывод с использованием правила 7 (stmts)]
    INTEGER    [вывод с использованием правила 7 (stmts)]
    VARIABLE   [вывод с использованием правила 7 (stmts)]
    VVARIABLE  [вывод с использованием правила 7 (stmts)]
    MVARIABLE  [вывод с использованием правила 7 (stmts)]
    FVARIABLE  вывод с использованием правила 7 (stmts)
    CINT       вывод с использованием правила 7 (stmts)
    VINT       вывод с использованием правила 7 (stmts)
    MINT       вывод с использованием правила 7 (stmts)
    INT        вывод с использованием правила 7 (stmts)
    CVINT      вывод с использованием правила 7 (stmts)
    CMINT      вывод с использованием правила 7 (stmts)
    BOOLEAN    вывод с использованием правила 7 (stmts)
    CBOOLEAN   вывод с использованием правила 7 (stmts)
    VBOOLEAN   вывод с использованием правила 7 (stmts)
    MBOOLEAN   вывод с использованием правила 7 (stmts)
    CVBOOLEAN  вывод с использованием правила 7 (stmts)
    CMBOOLEAN  вывод с использованием правила 7 (stmts)
    NEWLINE    [вывод с использованием правила 7 (stmts)]
    PRINT      вывод с использованием правила 7 (stmts)
    IF         вывод с использованием правила 7 (stmts)
    FORR       вывод с использованием правила 7 (stmts)
    E          [вывод с использованием правила 7 (stmts)]
    MOVE       [вывод с использованием правила 7 (stmts)]
    RIGHT      вывод с использованием правила 7 (stmts)
    LEFT       вывод с использованием правила 7 (stmts)
    ROBEX      [вывод с использованием правила 7 (stmts)]
    WALL       [вывод с использованием правила 7 (stmts)]
    ENDIF      вывод с использованием правила 7 (stmts)
    ENDFOR     вывод с использованием правила 7 (stmts)
    '-'        [вывод с использованием правила 7 (stmts)]
    '!'        [вывод с использованием правила 7 (stmts)]
    '('        [вывод с использованием правила 7 (stmts)]
    ')'        вывод с использованием правила 7 (stmts)
    '['        [вывод с использованием правила 7 (stmts)]
    '{'        [вывод с использованием правила 7 (stmts)]

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 97

    6 stmts: stmts stmt .

    $default  вывод с использованием правила 6 (stmts)


State 98

   21 stmt: robotactions NEWLINE .

    $default  вывод с использованием правила 21 (stmt)


State 99

   17 stmt: iff NEWLINE .

    $default  вывод с использованием правила 17 (stmt)


State 100

   18 stmt: forr NEWLINE .

    $default  вывод с использованием правила 18 (stmt)


State 101

   19 stmt: function NEWLINE .

    $default  вывод с использованием правила 19 (stmt)


State 102

   20 stmt: callfunction NEWLINE .

    $default  вывод с использованием правила 20 (stmt)


State 103

   12 stmt: matrix NEWLINE .

    $default  вывод с использованием правила 12 (stmt)


State 104

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   66       | matrix ELEMMULT . matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   71       | matrix ELEMMULT . vector
   72       | . matrix ELEMMULT expr
   72       | matrix ELEMMULT . expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 176
    vector     переход в состояние 177
    expr       переход в состояние 178
    const      переход в состояние 57


State 105

   67 matrix: matrix '\'' .

    $default  вывод с использованием правила 67 (matrix)


State 106

   69 matrix: matrix LEFTSHIFT .

    $default  вывод с использованием правила 69 (matrix)


State 107

   68 matrix: matrix RIGHTSHIFT .

    $default  вывод с использованием правила 68 (matrix)


State 108

   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   65       | matrix '*' . matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr

    error      сдвиг, и переход в состояние 141
    VVARIABLE  сдвиг, и переход в состояние 136
    MVARIABLE  сдвиг, и переход в состояние 142
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 179
    vector  переход в состояние 144


State 109

   11 stmt: vector NEWLINE .

    $default  вывод с использованием правила 11 (stmt)


State 110

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   84       | vector ELEMMULT . vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   87       | vector ELEMMULT . expr
   88       | . error vector
   89       | . error expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 180
    expr       переход в состояние 181
    const      переход в состояние 57


State 111

   70 matrix: vector '\'' .

    $default  вывод с использованием правила 70 (matrix)


State 112

   86 vector: vector LEFTSHIFT .

    $default  вывод с использованием правила 86 (vector)


State 113

   85 vector: vector RIGHTSHIFT .

    $default  вывод с использованием правила 85 (vector)


State 114

   14 stmt: vmdeclaration NEWLINE .

    $default  вывод с использованием правила 14 (stmt)


State 115

   15 stmt: declaration NEWLINE .

    $default  вывод с использованием правила 15 (stmt)


State 116

   16 stmt: assignment NEWLINE .

    $default  вывод с использованием правила 16 (stmt)


State 117

   13 stmt: print NEWLINE .

    $default  вывод с использованием правила 13 (stmt)


State 118

   10 stmt: expr NEWLINE .

    $default  вывод с использованием правила 10 (stmt)


State 119

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  122     | expr CONJUNCTION . expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 182
    const      переход в состояние 57


State 120

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  119     | expr '<' . expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 183
    const      переход в состояние 57


State 121

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  120     | expr '>' . expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 184
    const      переход в состояние 57


State 122

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  116     | expr '+' . expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 185
    const      переход в состояние 57


State 123

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  117     | expr '-' . expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 186
    const      переход в состояние 57


State 124

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  118     | expr '/' . expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 187
    const      переход в состояние 57


State 125

  101 declaration: type VAR . DECLARE expr
  102            | type VAR . DECLARE vector
  103            | type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 188


State 126

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   80       | VVARIABLE '(' . vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  124     | VVARIABLE '(' . expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 189
    expr       переход в состояние 190
    const      переход в состояние 57


State 127

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   61       | MVARIABLE '(' . vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   62       | MVARIABLE '(' . '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   63       | MVARIABLE '(' . matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   81       | MVARIABLE '(' . expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   82       | MVARIABLE '(' . '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  125     | MVARIABLE '(' . expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 191
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 192
    vector     переход в состояние 193
    expr       переход в состояние 194
    const      переход в состояние 57


State 128

  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr
  123     | '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124
    ')'          сдвиг, и переход в состояние 160


State 129

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   57 callfunc_args: error .  [error, ',', ']']
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   73       | error . matrix
   74       | . error vector
   74       | error . vector
   75       | . error expr
   75       | error . expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   88       | error . vector
   89       | . error expr
   89       | error . expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  126     | error . expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    error  [вывод с использованием правила 57 (callfunc_args)]
    ','    вывод с использованием правила 57 (callfunc_args)
    ']'    вывод с использованием правила 57 (callfunc_args)

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 68
    const      переход в состояние 57


State 130

   53 callfunc_args: callfunc_args . ',' expr
   54              | callfunc_args . ',' vector
   55              | callfunc_args . ',' matrix
   56              | callfunc_args . error
   59 callfunction: error '[' callfunc_args . ']'

    error  сдвиг, и переход в состояние 195
    ','    сдвиг, и переход в состояние 196
    ']'    сдвиг, и переход в состояние 197


State 131

   52 callfunc_args: matrix .  [error, ',', ']']
   65 matrix: matrix . '*' matrix
   66       | matrix . ELEMMULT matrix
   67       | matrix . '\''
   68       | matrix . RIGHTSHIFT
   69       | matrix . LEFTSHIFT
   71       | matrix . ELEMMULT vector
   72       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 104
    '\''        сдвиг, и переход в состояние 105
    LEFTSHIFT   сдвиг, и переход в состояние 106
    RIGHTSHIFT  сдвиг, и переход в состояние 107
    '*'         сдвиг, и переход в состояние 108

    $default  вывод с использованием правила 52 (callfunc_args)


State 132

   51 callfunc_args: vector .  [error, ',', ']']
   70 matrix: vector . '\''
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 110
    '\''        сдвиг, и переход в состояние 111
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113

    $default  вывод с использованием правила 51 (callfunc_args)


State 133

   50 callfunc_args: expr .  [error, ',', ']']
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    $default  вывод с использованием правила 50 (callfunc_args)


State 134

  104 assignment: VARIABLE ASSIGN expr .  [NEWLINE]
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    $default  вывод с использованием правила 104 (assignment)


State 135

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   88       | error . vector
   89       | . error expr
   89       | error . expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 165
    expr       переход в состояние 198
    const      переход в состояние 57


State 136

   80 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   83       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '}']

    '('  сдвиг, и переход в состояние 199

    $default  вывод с использованием правила 83 (vector)


State 137

   81 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   82       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 200


State 138

   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr
  105 assignment: VVARIABLE ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 110
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113

    $default  вывод с использованием правила 105 (assignment)


State 139

   80 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   84       | vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr
   94 vmdeclaration: VVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN vector

    ELEMMULT    сдвиг, и переход в состояние 110
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113
    ','         сдвиг, и переход в состояние 201


State 140

   93 vmdeclaration: VVARIABLE '(' expr . ')' ASSIGN expr
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr
  124     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124
    ')'          сдвиг, и переход в состояние 202


State 141

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   73       | error . matrix
   74       | . error vector
   74       | error . vector
   75       | . error expr
   75       | error . expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   88       | error . vector
   89       | . error expr
   89       | error . expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 66
    vector     переход в состояние 67
    expr       переход в состояние 203
    const      переход в состояние 57


State 142

   61 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   62       | MVARIABLE . '(' '[' ']' ',' vector ')'
   63       | MVARIABLE . '(' matrix ')'
   64       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   81 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   82       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 204

    $default  вывод с использованием правила 64 (matrix)


State 143

   65 matrix: matrix . '*' matrix
   66       | matrix . ELEMMULT matrix
   67       | matrix . '\''
   68       | matrix . RIGHTSHIFT
   69       | matrix . LEFTSHIFT
   71       | matrix . ELEMMULT vector
   72       | matrix . ELEMMULT expr
  106 assignment: MVARIABLE ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 104
    '\''        сдвиг, и переход в состояние 105
    LEFTSHIFT   сдвиг, и переход в состояние 106
    RIGHTSHIFT  сдвиг, и переход в состояние 107
    '*'         сдвиг, и переход в состояние 108

    $default  вывод с использованием правила 106 (assignment)


State 144

   70 matrix: vector . '\''
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 110
    '\''        сдвиг, и переход в состояние 111
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113


State 145

   62 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   82 vector: MVARIABLE '(' '[' . ']' ',' expr ')'
   97 vmdeclaration: MVARIABLE '(' '[' . ']' ',' expr ')' ASSIGN vector
   99              | MVARIABLE '(' '[' . ']' ',' vector ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 205


State 146

   63 matrix: MVARIABLE '(' matrix . ')'
   65       | matrix . '*' matrix
   66       | matrix . ELEMMULT matrix
   67       | matrix . '\''
   68       | matrix . RIGHTSHIFT
   69       | matrix . LEFTSHIFT
   71       | matrix . ELEMMULT vector
   72       | matrix . ELEMMULT expr
  100 vmdeclaration: MVARIABLE '(' matrix . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 104
    '\''        сдвиг, и переход в состояние 105
    LEFTSHIFT   сдвиг, и переход в состояние 106
    RIGHTSHIFT  сдвиг, и переход в состояние 107
    '*'         сдвиг, и переход в состояние 108
    ')'         сдвиг, и переход в состояние 206


State 147

   61 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   70       | vector . '\''
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr
   98 vmdeclaration: MVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 110
    '\''        сдвиг, и переход в состояние 111
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113
    ','         сдвиг, и переход в состояние 207


State 148

   81 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
   95 vmdeclaration: MVARIABLE '(' expr . ',' expr ')' ASSIGN expr
   96              | MVARIABLE '(' expr . ',' '[' ']' ')' ASSIGN vector
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr
  125     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 119
    ','          сдвиг, и переход в состояние 208
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124


State 149

   53 callfunc_args: callfunc_args . ',' expr
   54              | callfunc_args . ',' vector
   55              | callfunc_args . ',' matrix
   56              | callfunc_args . error
   58 callfunction: FVARIABLE '[' callfunc_args . ']'

    error  сдвиг, и переход в состояние 195
    ','    сдвиг, и переход в состояние 196
    ']'    сдвиг, и переход в состояние 209


State 150

  108 print: PRINT '(' VVARIABLE . ')'
  124 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 154
    ')'  сдвиг, и переход в состояние 210


State 151

  109 print: PRINT '(' MVARIABLE . ')'
  125 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 155
    ')'  сдвиг, и переход в состояние 211


State 152

  107 print: PRINT '(' expr . ')'
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124
    ')'          сдвиг, и переход в состояние 212


State 153

  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr
  126     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    CONJUNCTION  [вывод с использованием правила 126 (expr)]
    '<'          [вывод с использованием правила 126 (expr)]
    '>'          [вывод с использованием правила 126 (expr)]
    '+'          [вывод с использованием правила 126 (expr)]
    '-'          [вывод с использованием правила 126 (expr)]
    '/'          [вывод с использованием правила 126 (expr)]
    $default     вывод с использованием правила 126 (expr)


State 154

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  124     | VVARIABLE '(' . expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 190
    const      переход в состояние 57


State 155

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  125     | MVARIABLE '(' . expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 213
    const      переход в состояние 57


State 156

   31 iff: IF expr NEWLINE . begif stmts endif
   32 begif: . B
   33      | . BEGIF

    B      сдвиг, и переход в состояние 214
    BEGIF  сдвиг, и переход в состояние 215

    begif  переход в состояние 216


State 157

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   40 forr: FORR declaration DOUBLEDOT . expr NEWLINE begfor stmts endfor
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 217
    const      переход в состояние 57


State 158

   26 robotmove: MOVE '(' expr . ')'
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124
    ')'          сдвиг, и переход в состояние 218


State 159

   22 stmt: '(' stmts ')' .

    $default  вывод с использованием правила 22 (stmt)


State 160

  123 expr: '(' expr ')' .

    $default  вывод с использованием правила 123 (expr)


State 161

   43 return_func: return_func error .

    $default  вывод с использованием правила 43 (return_func)


State 162

   42 return_func: return_func ',' . type VAR
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 219


State 163

   48 function: '[' return_func ']' . DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E

    DECLARE  сдвиг, и переход в состояние 220


State 164

   41 return_func: type VAR .

    $default  вывод с использованием правила 41 (return_func)


State 165

   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr
   88       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']

    ELEMMULT    сдвиг, и переход в состояние 110
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113

    ELEMMULT    [вывод с использованием правила 88 (vector)]
    LEFTSHIFT   [вывод с использованием правила 88 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 88 (vector)]
    $default    вывод с использованием правила 88 (vector)


State 166

   89 vector: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr
  126     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    error        вывод с использованием правила 89 (vector)
    error        [вывод с использованием правила 126 (expr)]
    NEWLINE      вывод с использованием правила 89 (vector)
    NEWLINE      [вывод с использованием правила 126 (expr)]
    CONJUNCTION  [вывод с использованием правила 126 (expr)]
    ELEMMULT     вывод с использованием правила 89 (vector)
    ELEMMULT     [вывод с использованием правила 126 (expr)]
    '\''         вывод с использованием правила 89 (vector)
    '\''         [вывод с использованием правила 126 (expr)]
    LEFTSHIFT    вывод с использованием правила 89 (vector)
    LEFTSHIFT    [вывод с использованием правила 126 (expr)]
    RIGHTSHIFT   вывод с использованием правила 89 (vector)
    RIGHTSHIFT   [вывод с использованием правила 126 (expr)]
    ','          вывод с использованием правила 89 (vector)
    ','          [вывод с использованием правила 126 (expr)]
    DOUBLEDOT    вывод с использованием правила 89 (vector)
    DOUBLEDOT    [вывод с использованием правила 126 (expr)]
    '<'          [вывод с использованием правила 126 (expr)]
    '>'          [вывод с использованием правила 126 (expr)]
    '+'          [вывод с использованием правила 126 (expr)]
    '-'          [вывод с использованием правила 126 (expr)]
    '*'          вывод с использованием правила 89 (vector)
    '*'          [вывод с использованием правила 126 (expr)]
    '/'          [вывод с использованием правила 126 (expr)]
    ')'          вывод с использованием правила 89 (vector)
    ')'          [вывод с использованием правила 126 (expr)]
    ']'          вывод с использованием правила 89 (vector)
    ']'          [вывод с использованием правила 126 (expr)]
    '}'          вывод с использованием правила 89 (vector)
    '}'          [вывод с использованием правила 126 (expr)]
    $default     вывод с использованием правила 89 (vector)


State 167

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   81 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   82       | MVARIABLE '(' . '[' ']' ',' expr ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  125     | MVARIABLE '(' . expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 221

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 194
    const      переход в состояние 57


State 168

   78 listexprs: listexprs error .

    $default  вывод с использованием правила 78 (listexprs)


State 169

   77 listexprs: listexprs ',' . vector
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr

    error      сдвиг, и переход в состояние 135
    VVARIABLE  сдвиг, и переход в состояние 136
    MVARIABLE  сдвиг, и переход в состояние 137
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 222


State 170

   60 matrix: '{' listexprs '}' .

    $default  вывод с использованием правила 60 (matrix)


State 171

   76 listexprs: vector ',' . vector
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr

    error      сдвиг, и переход в состояние 135
    VVARIABLE  сдвиг, и переход в состояние 136
    MVARIABLE  сдвиг, и переход в состояние 137
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 223


State 172

   92 exprs: exprs error .

    $default  вывод с использованием правила 92 (exprs)


State 173

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   91 exprs: exprs ',' . expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 224
    const      переход в состояние 57


State 174

   79 vector: '{' exprs '}' .

    $default  вывод с использованием правила 79 (vector)


State 175

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   90 exprs: expr ',' . expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 225
    const      переход в состояние 57


State 176

   65 matrix: matrix . '*' matrix
   66       | matrix . ELEMMULT matrix
   66       | matrix ELEMMULT matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   67       | matrix . '\''
   68       | matrix . RIGHTSHIFT
   69       | matrix . LEFTSHIFT
   71       | matrix . ELEMMULT vector
   72       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 104
    '\''        сдвиг, и переход в состояние 105
    LEFTSHIFT   сдвиг, и переход в состояние 106
    RIGHTSHIFT  сдвиг, и переход в состояние 107
    '*'         сдвиг, и переход в состояние 108

    ELEMMULT    [вывод с использованием правила 66 (matrix)]
    '\''        [вывод с использованием правила 66 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 66 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 66 (matrix)]
    '*'         [вывод с использованием правила 66 (matrix)]
    $default    вывод с использованием правила 66 (matrix)


State 177

   70 matrix: vector . '\''
   71       | matrix ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 110
    '\''        сдвиг, и переход в состояние 111
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113

    ELEMMULT    [вывод с использованием правила 71 (matrix)]
    '\''        [вывод с использованием правила 71 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 71 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 71 (matrix)]
    $default    вывод с использованием правила 71 (matrix)


State 178

   72 matrix: matrix ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    $default  вывод с использованием правила 72 (matrix)


State 179

   65 matrix: matrix . '*' matrix
   65       | matrix '*' matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   66       | matrix . ELEMMULT matrix
   67       | matrix . '\''
   68       | matrix . RIGHTSHIFT
   69       | matrix . LEFTSHIFT
   71       | matrix . ELEMMULT vector
   72       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 104
    '\''        сдвиг, и переход в состояние 105
    LEFTSHIFT   сдвиг, и переход в состояние 106
    RIGHTSHIFT  сдвиг, и переход в состояние 107

    ELEMMULT    [вывод с использованием правила 65 (matrix)]
    '\''        [вывод с использованием правила 65 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 65 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 65 (matrix)]
    $default    вывод с использованием правила 65 (matrix)

    Конфликт между правилом 65 и лексемой '*' разрешен выводом (%left '*').


State 180

   84 vector: vector . ELEMMULT vector
   84       | vector ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 110
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113

    ELEMMULT    [вывод с использованием правила 84 (vector)]
    LEFTSHIFT   [вывод с использованием правила 84 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 84 (vector)]
    $default    вывод с использованием правила 84 (vector)


State 181

   87 vector: vector ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    $default  вывод с использованием правила 87 (vector)


State 182

  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr
  122     | expr CONJUNCTION expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    CONJUNCTION  [вывод с использованием правила 122 (expr)]
    '<'          [вывод с использованием правила 122 (expr)]
    '>'          [вывод с использованием правила 122 (expr)]
    '+'          [вывод с использованием правила 122 (expr)]
    '-'          [вывод с использованием правила 122 (expr)]
    '/'          [вывод с использованием правила 122 (expr)]
    $default     вывод с использованием правила 122 (expr)


State 183

  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  119     | expr '<' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    CONJUNCTION  [вывод с использованием правила 119 (expr)]
    $default     вывод с использованием правила 119 (expr)

    Конфликт между правилом 119 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 119 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 119 и лексемой '+' разрешен сдвигом ('<' < '+').
    Конфликт между правилом 119 и лексемой '-' разрешен сдвигом ('<' < '-').
    Конфликт между правилом 119 и лексемой '/' разрешен сдвигом ('<' < '/').


State 184

  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  120     | expr '>' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    CONJUNCTION  [вывод с использованием правила 120 (expr)]
    $default     вывод с использованием правила 120 (expr)

    Конфликт между правилом 120 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 120 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 120 и лексемой '+' разрешен сдвигом ('>' < '+').
    Конфликт между правилом 120 и лексемой '-' разрешен сдвигом ('>' < '-').
    Конфликт между правилом 120 и лексемой '/' разрешен сдвигом ('>' < '/').


State 185

  116 expr: expr . '+' expr
  116     | expr '+' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 124

    CONJUNCTION  [вывод с использованием правила 116 (expr)]
    $default     вывод с использованием правила 116 (expr)

    Конфликт между правилом 116 и лексемой '<' разрешен выводом ('<' < '+').
    Конфликт между правилом 116 и лексемой '>' разрешен выводом ('>' < '+').
    Конфликт между правилом 116 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 116 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 116 и лексемой '/' разрешен сдвигом ('+' < '/').


State 186

  116 expr: expr . '+' expr
  117     | expr . '-' expr
  117     | expr '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 124

    CONJUNCTION  [вывод с использованием правила 117 (expr)]
    $default     вывод с использованием правила 117 (expr)

    Конфликт между правилом 117 и лексемой '<' разрешен выводом ('<' < '-').
    Конфликт между правилом 117 и лексемой '>' разрешен выводом ('>' < '-').
    Конфликт между правилом 117 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 117 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 117 и лексемой '/' разрешен сдвигом ('-' < '/').


State 187

  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  118     | expr '/' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119

    CONJUNCTION  [вывод с использованием правила 118 (expr)]
    $default     вывод с использованием правила 118 (expr)

    Конфликт между правилом 118 и лексемой '<' разрешен выводом ('<' < '/').
    Конфликт между правилом 118 и лексемой '>' разрешен выводом ('>' < '/').
    Конфликт между правилом 118 и лексемой '+' разрешен выводом ('+' < '/').
    Конфликт между правилом 118 и лексемой '-' разрешен выводом ('-' < '/').
    Конфликт между правилом 118 и лексемой '/' разрешен выводом (%left '/').


State 188

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
  101 declaration: type VAR DECLARE . expr
  102            | type VAR DECLARE . vector
  103            | type VAR DECLARE . matrix
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 226
    vector     переход в состояние 227
    expr       переход в состояние 228
    const      переход в состояние 57


State 189

   80 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   84       | vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 110
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113
    ','         сдвиг, и переход в состояние 229


State 190

  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr
  124     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124
    ')'          сдвиг, и переход в состояние 230


State 191

   62 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   82 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 231


State 192

   63 matrix: MVARIABLE '(' matrix . ')'
   65       | matrix . '*' matrix
   66       | matrix . ELEMMULT matrix
   67       | matrix . '\''
   68       | matrix . RIGHTSHIFT
   69       | matrix . LEFTSHIFT
   71       | matrix . ELEMMULT vector
   72       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 104
    '\''        сдвиг, и переход в состояние 105
    LEFTSHIFT   сдвиг, и переход в состояние 106
    RIGHTSHIFT  сдвиг, и переход в состояние 107
    '*'         сдвиг, и переход в состояние 108
    ')'         сдвиг, и переход в состояние 232


State 193

   61 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   70       | vector . '\''
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 110
    '\''        сдвиг, и переход в состояние 111
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113
    ','         сдвиг, и переход в состояние 233


State 194

   81 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr
  125     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 119
    ','          сдвиг, и переход в состояние 234
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124


State 195

   56 callfunc_args: callfunc_args error .

    $default  вывод с использованием правила 56 (callfunc_args)


State 196

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   53 callfunc_args: callfunc_args ',' . expr
   54              | callfunc_args ',' . vector
   55              | callfunc_args ',' . matrix
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 235
    vector     переход в состояние 236
    expr       переход в состояние 237
    const      переход в состояние 57


State 197

   59 callfunction: error '[' callfunc_args ']' .

    $default  вывод с использованием правила 59 (callfunction)


State 198

   89 vector: error expr .  [error, NEWLINE, ELEMMULT, LEFTSHIFT, RIGHTSHIFT, ',', '}']
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    $default  вывод с использованием правила 89 (vector)


State 199

   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   80       | VVARIABLE '(' . vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr

    error      сдвиг, и переход в состояние 135
    VVARIABLE  сдвиг, и переход в состояние 136
    MVARIABLE  сдвиг, и переход в состояние 137
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 189


State 200

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   81 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   82       | MVARIABLE '(' . '[' ']' ',' expr ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 221

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 238
    const      переход в состояние 57


State 201

   80 vector: VVARIABLE '(' vector ',' . '[' ']' ')'
   94 vmdeclaration: VVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN vector

    '['  сдвиг, и переход в состояние 239


State 202

   93 vmdeclaration: VVARIABLE '(' expr ')' . ASSIGN expr
  124 expr: VVARIABLE '(' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 240

    $default  вывод с использованием правила 124 (expr)


State 203

   75 matrix: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   89 vector: error expr .  [ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    ELEMMULT    вывод с использованием правила 75 (matrix)
    ELEMMULT    [вывод с использованием правила 89 (vector)]
    '\''        вывод с использованием правила 75 (matrix)
    '\''        [вывод с использованием правила 89 (vector)]
    LEFTSHIFT   вывод с использованием правила 75 (matrix)
    LEFTSHIFT   [вывод с использованием правила 89 (vector)]
    RIGHTSHIFT  вывод с использованием правила 75 (matrix)
    RIGHTSHIFT  [вывод с использованием правила 89 (vector)]
    $default    вывод с использованием правила 75 (matrix)


State 204

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   61       | MVARIABLE '(' . vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   62       | MVARIABLE '(' . '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   63       | MVARIABLE '(' . matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   81       | MVARIABLE '(' . expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   82       | MVARIABLE '(' . '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 58
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 191
    '{'        сдвиг, и переход в состояние 36

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    matrix     переход в состояние 192
    vector     переход в состояние 193
    expr       переход в состояние 238
    const      переход в состояние 57


State 205

   62 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   82 vector: MVARIABLE '(' '[' ']' . ',' expr ')'
   97 vmdeclaration: MVARIABLE '(' '[' ']' . ',' expr ')' ASSIGN vector
   99              | MVARIABLE '(' '[' ']' . ',' vector ')' ASSIGN matrix

    ','  сдвиг, и переход в состояние 241


State 206

   63 matrix: MVARIABLE '(' matrix ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
  100 vmdeclaration: MVARIABLE '(' matrix ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 242

    $default  вывод с использованием правила 63 (matrix)


State 207

   61 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'
   98 vmdeclaration: MVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN matrix

    '['  сдвиг, и переход в состояние 243


State 208

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   81 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
   95 vmdeclaration: MVARIABLE '(' expr ',' . expr ')' ASSIGN expr
   96              | MVARIABLE '(' expr ',' . '[' ']' ')' ASSIGN vector
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  125     | MVARIABLE '(' expr ',' . expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 244

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 245
    const      переход в состояние 57


State 209

   58 callfunction: FVARIABLE '[' callfunc_args ']' .

    $default  вывод с использованием правила 58 (callfunction)


State 210

  108 print: PRINT '(' VVARIABLE ')' .

    $default  вывод с использованием правила 108 (print)


State 211

  109 print: PRINT '(' MVARIABLE ')' .

    $default  вывод с использованием правила 109 (print)


State 212

  107 print: PRINT '(' expr ')' .

    $default  вывод с использованием правила 107 (print)


State 213

  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr
  125     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 119
    ','          сдвиг, и переход в состояние 246
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124


State 214

   32 begif: B .

    $default  вывод с использованием правила 32 (begif)


State 215

   33 begif: BEGIF .

    $default  вывод с использованием правила 33 (begif)


State 216

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   31    | IF expr NEWLINE begif . stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   49         | . error E
   58 callfunction: . FVARIABLE '[' callfunc_args ']'
   59             | . error '[' callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   93 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   94              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   95              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   96              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   98              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   99              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  100              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  101 declaration: . type VAR DECLARE expr
  102            | . type VAR DECLARE vector
  103            | . type VAR DECLARE matrix
  104 assignment: . VARIABLE ASSIGN expr
  105           | . VVARIABLE ASSIGN vector
  106           | . MVARIABLE ASSIGN matrix
  107 print: . PRINT '(' expr ')'
  108      | . PRINT '(' VVARIABLE ')'
  109      | . PRINT '(' MVARIABLE ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 84
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 247
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 217

   40 forr: FORR declaration DOUBLEDOT expr . NEWLINE begfor stmts endfor
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 248
    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124


State 218

   26 robotmove: MOVE '(' expr ')' .

    $default  вывод с использованием правила 26 (robotmove)


State 219

   42 return_func: return_func ',' type . VAR

    VAR  сдвиг, и переход в состояние 249


State 220

   48 function: '[' return_func ']' DECLARE . FUNC VAR '(' args_func ')' B NEWLINE stmts E

    FUNC  сдвиг, и переход в состояние 250


State 221

   82 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 251


State 222

   77 listexprs: listexprs ',' vector .  [error, ',', '}']
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 110
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113

    $default  вывод с использованием правила 77 (listexprs)


State 223

   76 listexprs: vector ',' vector .  [error, ',', '}']
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 110
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113

    $default  вывод с использованием правила 76 (listexprs)


State 224

   91 exprs: exprs ',' expr .  [error, ',', '}']
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    $default  вывод с использованием правила 91 (exprs)


State 225

   90 exprs: expr ',' expr .  [error, ',', '}']
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    $default  вывод с использованием правила 90 (exprs)


State 226

   65 matrix: matrix . '*' matrix
   66       | matrix . ELEMMULT matrix
   67       | matrix . '\''
   68       | matrix . RIGHTSHIFT
   69       | matrix . LEFTSHIFT
   71       | matrix . ELEMMULT vector
   72       | matrix . ELEMMULT expr
  103 declaration: type VAR DECLARE matrix .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 104
    '\''        сдвиг, и переход в состояние 105
    LEFTSHIFT   сдвиг, и переход в состояние 106
    RIGHTSHIFT  сдвиг, и переход в состояние 107
    '*'         сдвиг, и переход в состояние 108

    $default  вывод с использованием правила 103 (declaration)


State 227

   70 matrix: vector . '\''
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr
  102 declaration: type VAR DECLARE vector .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 110
    '\''        сдвиг, и переход в состояние 111
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113

    $default  вывод с использованием правила 102 (declaration)


State 228

  101 declaration: type VAR DECLARE expr .  [NEWLINE, DOUBLEDOT]
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    $default  вывод с использованием правила 101 (declaration)


State 229

   80 vector: VVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 252


State 230

  124 expr: VVARIABLE '(' expr ')' .

    $default  вывод с использованием правила 124 (expr)


State 231

   62 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   82 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 253


State 232

   63 matrix: MVARIABLE '(' matrix ')' .

    $default  вывод с использованием правила 63 (matrix)


State 233

   61 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 254


State 234

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   81 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  125     | MVARIABLE '(' expr ',' . expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '['        сдвиг, и переход в состояние 255

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 256
    const      переход в состояние 57


State 235

   55 callfunc_args: callfunc_args ',' matrix .  [error, ',', ']']
   65 matrix: matrix . '*' matrix
   66       | matrix . ELEMMULT matrix
   67       | matrix . '\''
   68       | matrix . RIGHTSHIFT
   69       | matrix . LEFTSHIFT
   71       | matrix . ELEMMULT vector
   72       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 104
    '\''        сдвиг, и переход в состояние 105
    LEFTSHIFT   сдвиг, и переход в состояние 106
    RIGHTSHIFT  сдвиг, и переход в состояние 107
    '*'         сдвиг, и переход в состояние 108

    $default  вывод с использованием правила 55 (callfunc_args)


State 236

   54 callfunc_args: callfunc_args ',' vector .  [error, ',', ']']
   70 matrix: vector . '\''
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 110
    '\''        сдвиг, и переход в состояние 111
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113

    $default  вывод с использованием правила 54 (callfunc_args)


State 237

   53 callfunc_args: callfunc_args ',' expr .  [error, ',', ']']
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    $default  вывод с использованием правила 53 (callfunc_args)


State 238

   81 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    ','          сдвиг, и переход в состояние 257
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124


State 239

   80 vector: VVARIABLE '(' vector ',' '[' . ']' ')'
   94 vmdeclaration: VVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 258


State 240

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   93 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN . expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 259
    const      переход в состояние 57


State 241

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   62 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   82       | MVARIABLE '(' '[' ']' ',' . expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   97 vmdeclaration: MVARIABLE '(' '[' ']' ',' . expr ')' ASSIGN vector
   99              | MVARIABLE '(' '[' ']' ',' . vector ')' ASSIGN matrix
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 260
    expr       переход в состояние 261
    const      переход в состояние 57


State 242

   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
  100 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 141
    VVARIABLE  сдвиг, и переход в состояние 136
    MVARIABLE  сдвиг, и переход в состояние 142
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 262
    vector  переход в состояние 144


State 243

   61 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'
   98 vmdeclaration: MVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 263


State 244

   81 vector: MVARIABLE '(' expr ',' '[' . ']' ')'
   96 vmdeclaration: MVARIABLE '(' expr ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 264


State 245

   95 vmdeclaration: MVARIABLE '(' expr ',' expr . ')' ASSIGN expr
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr
  125     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124
    ')'          сдвиг, и переход в состояние 265


State 246

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  125     | MVARIABLE '(' expr ',' . expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 256
    const      переход в состояние 57


State 247

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   31    | IF expr NEWLINE begif stmts . endif
   34 endif: . E
   35      | . ENDIF
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   49         | . error E
   58 callfunction: . FVARIABLE '[' callfunc_args ']'
   59             | . error '[' callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   93 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   94              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   95              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   96              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   98              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   99              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  100              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  101 declaration: . type VAR DECLARE expr
  102            | . type VAR DECLARE vector
  103            | . type VAR DECLARE matrix
  104 assignment: . VARIABLE ASSIGN expr
  105           | . VVARIABLE ASSIGN vector
  106           | . MVARIABLE ASSIGN matrix
  107 print: . PRINT '(' expr ')'
  108      | . PRINT '(' VVARIABLE ')'
  109      | . PRINT '(' MVARIABLE ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    E          сдвиг, и переход в состояние 266
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    ENDIF      сдвиг, и переход в состояние 267
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 97
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    endif          переход в состояние 268
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 248

   36 begfor: . B
   37       | . BEGFOR
   40 forr: FORR declaration DOUBLEDOT expr NEWLINE . begfor stmts endfor

    B       сдвиг, и переход в состояние 269
    BEGFOR  сдвиг, и переход в состояние 270

    begfor  переход в состояние 271


State 249

   42 return_func: return_func ',' type VAR .

    $default  вывод с использованием правила 42 (return_func)


State 250

   48 function: '[' return_func ']' DECLARE FUNC . VAR '(' args_func ')' B NEWLINE stmts E

    VAR  сдвиг, и переход в состояние 272


State 251

   82 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 273


State 252

   80 vector: VVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 274


State 253

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   62 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   82       | MVARIABLE '(' '[' ']' ',' . expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 89
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 60
    MVARIABLE  сдвиг, и переход в состояние 90
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64
    '{'        сдвиг, и переход в состояние 91

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    vector     переход в состояние 275
    expr       переход в состояние 276
    const      переход в состояние 57


State 254

   61 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 277


State 255

   81 vector: MVARIABLE '(' expr ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 278


State 256

  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr
  125     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124
    ')'          сдвиг, и переход в состояние 279


State 257

   81 vector: MVARIABLE '(' expr ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 255


State 258

   80 vector: VVARIABLE '(' vector ',' '[' ']' . ')'
   94 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 280


State 259

   93 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr .  [NEWLINE]
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    $default  вывод с использованием правила 93 (vmdeclaration)


State 260

   62 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr
   99 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 110
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113
    ')'         сдвиг, и переход в состояние 281


State 261

   82 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
   97 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr . ')' ASSIGN vector
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124
    ')'          сдвиг, и переход в состояние 282


State 262

   65 matrix: matrix . '*' matrix
   66       | matrix . ELEMMULT matrix
   67       | matrix . '\''
   68       | matrix . RIGHTSHIFT
   69       | matrix . LEFTSHIFT
   71       | matrix . ELEMMULT vector
   72       | matrix . ELEMMULT expr
  100 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 104
    '\''        сдвиг, и переход в состояние 105
    LEFTSHIFT   сдвиг, и переход в состояние 106
    RIGHTSHIFT  сдвиг, и переход в состояние 107
    '*'         сдвиг, и переход в состояние 108

    $default  вывод с использованием правила 100 (vmdeclaration)


State 263

   61 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'
   98 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN matrix

    ')'  сдвиг, и переход в состояние 283


State 264

   81 vector: MVARIABLE '(' expr ',' '[' ']' . ')'
   96 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 284


State 265

   95 vmdeclaration: MVARIABLE '(' expr ',' expr ')' . ASSIGN expr
  125 expr: MVARIABLE '(' expr ',' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 285

    $default  вывод с использованием правила 125 (expr)


State 266

   34 endif: E .

    $default  вывод с использованием правила 34 (endif)


State 267

   35 endif: ENDIF .

    $default  вывод с использованием правила 35 (endif)


State 268

   31 iff: IF expr NEWLINE begif stmts endif .

    $default  вывод с использованием правила 31 (iff)


State 269

   36 begfor: B .

    $default  вывод с использованием правила 36 (begfor)


State 270

   37 begfor: BEGFOR .

    $default  вывод с использованием правила 37 (begfor)


State 271

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   40     | FORR declaration DOUBLEDOT expr NEWLINE begfor . stmts endfor
   48 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   49         | . error E
   58 callfunction: . FVARIABLE '[' callfunc_args ']'
   59             | . error '[' callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   93 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   94              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   95              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   96              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   98              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   99              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  100              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  101 declaration: . type VAR DECLARE expr
  102            | . type VAR DECLARE vector
  103            | . type VAR DECLARE matrix
  104 assignment: . VARIABLE ASSIGN expr
  105           | . VVARIABLE ASSIGN vector
  106           | . MVARIABLE ASSIGN matrix
  107 print: . PRINT '(' expr ')'
  108      | . PRINT '(' VVARIABLE ')'
  109      | . PRINT '(' MVARIABLE ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 84
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 286
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 272

   48 function: '[' return_func ']' DECLARE FUNC VAR . '(' args_func ')' B NEWLINE stmts E

    '('  сдвиг, и переход в состояние 287


State 273

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   82 vector: MVARIABLE '(' '[' ']' ',' . expr ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 276
    const      переход в состояние 57


State 274

   80 vector: VVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 288


State 275

   62 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 110
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113
    ')'         сдвиг, и переход в состояние 289


State 276

   82 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124
    ')'          сдвиг, и переход в состояние 290


State 277

   61 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 291


State 278

   81 vector: MVARIABLE '(' expr ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 292


State 279

  125 expr: MVARIABLE '(' expr ',' expr ')' .

    $default  вывод с использованием правила 125 (expr)


State 280

   80 vector: VVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   94 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 293

    $default  вывод с использованием правила 80 (vector)


State 281

   62 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   99 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 294

    $default  вывод с использованием правила 62 (matrix)


State 282

   82 vector: MVARIABLE '(' '[' ']' ',' expr ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   97 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 295

    $default  вывод с использованием правила 82 (vector)


State 283

   61 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   98 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 296

    $default  вывод с использованием правила 61 (matrix)


State 284

   81 vector: MVARIABLE '(' expr ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   96 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 297

    $default  вывод с использованием правила 81 (vector)


State 285

   26 robotmove: . MOVE '(' expr ')'
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   95 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN . expr
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 76
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 59
    VVARIABLE  сдвиг, и переход в состояние 77
    MVARIABLE  сдвиг, и переход в состояние 78
    MOVE       сдвиг, и переход в состояние 27
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 64

    robotmove  переход в состояние 40
    robotwall  переход в состояние 43
    robotexit  переход в состояние 44
    expr       переход в состояние 298
    const      переход в состояние 57


State 286

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   38 endfor: . E
   39       | . ENDFOR
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   40     | FORR declaration DOUBLEDOT expr NEWLINE begfor stmts . endfor
   48 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   49         | . error E
   58 callfunction: . FVARIABLE '[' callfunc_args ']'
   59             | . error '[' callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   93 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   94              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   95              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   96              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   98              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   99              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  100              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  101 declaration: . type VAR DECLARE expr
  102            | . type VAR DECLARE vector
  103            | . type VAR DECLARE matrix
  104 assignment: . VARIABLE ASSIGN expr
  105           | . VVARIABLE ASSIGN vector
  106           | . MVARIABLE ASSIGN matrix
  107 print: . PRINT '(' expr ')'
  108      | . PRINT '(' VVARIABLE ')'
  109      | . PRINT '(' MVARIABLE ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    E          сдвиг, и переход в состояние 299
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    ENDFOR     сдвиг, и переход в состояние 300
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 97
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    endfor         переход в состояние 301
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 287

   44 args_func: . '[' type VAR ']'
   45          | . args_func ',' '[' type VAR ']'
   46          | . args_func error
   47          | . error
   48 function: '[' return_func ']' DECLARE FUNC VAR '(' . args_func ')' B NEWLINE stmts E

    error  сдвиг, и переход в состояние 302
    '['    сдвиг, и переход в состояние 303

    args_func  переход в состояние 304


State 288

   80 vector: VVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 80 (vector)


State 289

   62 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .

    $default  вывод с использованием правила 62 (matrix)


State 290

   82 vector: MVARIABLE '(' '[' ']' ',' expr ')' .

    $default  вывод с использованием правила 82 (vector)


State 291

   61 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 61 (matrix)


State 292

   81 vector: MVARIABLE '(' expr ',' '[' ']' ')' .

    $default  вывод с использованием правила 81 (vector)


State 293

   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   94 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 135
    VVARIABLE  сдвиг, и переход в состояние 136
    MVARIABLE  сдвиг, и переход в состояние 137
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 305


State 294

   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   99 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 141
    VVARIABLE  сдвиг, и переход в состояние 136
    MVARIABLE  сдвиг, и переход в состояние 142
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 306
    vector  переход в состояние 144


State 295

   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   97 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 135
    VVARIABLE  сдвиг, и переход в состояние 136
    MVARIABLE  сдвиг, и переход в состояние 137
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 307


State 296

   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   98 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 141
    VVARIABLE  сдвиг, и переход в состояние 136
    MVARIABLE  сдвиг, и переход в состояние 142
    '{'        сдвиг, и переход в состояние 36

    matrix  переход в состояние 308
    vector  переход в состояние 144


State 297

   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   96 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 135
    VVARIABLE  сдвиг, и переход в состояние 136
    MVARIABLE  сдвиг, и переход в состояние 137
    '{'        сдвиг, и переход в состояние 91

    vector  переход в состояние 309


State 298

   95 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN expr .  [NEWLINE]
  116 expr: expr . '+' expr
  117     | expr . '-' expr
  118     | expr . '/' expr
  119     | expr . '<' expr
  120     | expr . '>' expr
  122     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 119
    '<'          сдвиг, и переход в состояние 120
    '>'          сдвиг, и переход в состояние 121
    '+'          сдвиг, и переход в состояние 122
    '-'          сдвиг, и переход в состояние 123
    '/'          сдвиг, и переход в состояние 124

    $default  вывод с использованием правила 95 (vmdeclaration)


State 299

   38 endfor: E .

    $default  вывод с использованием правила 38 (endfor)


State 300

   39 endfor: ENDFOR .

    $default  вывод с использованием правила 39 (endfor)


State 301

   40 forr: FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor .

    $default  вывод с использованием правила 40 (forr)


State 302

   47 args_func: error .

    $default  вывод с использованием правила 47 (args_func)


State 303

   44 args_func: '[' . type VAR ']'
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 310


State 304

   45 args_func: args_func . ',' '[' type VAR ']'
   46          | args_func . error
   48 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func . ')' B NEWLINE stmts E

    error  сдвиг, и переход в состояние 311
    ','    сдвиг, и переход в состояние 312
    ')'    сдвиг, и переход в состояние 313


State 305

   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr
   94 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 110
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113

    $default  вывод с использованием правила 94 (vmdeclaration)


State 306

   65 matrix: matrix . '*' matrix
   66       | matrix . ELEMMULT matrix
   67       | matrix . '\''
   68       | matrix . RIGHTSHIFT
   69       | matrix . LEFTSHIFT
   71       | matrix . ELEMMULT vector
   72       | matrix . ELEMMULT expr
   99 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 104
    '\''        сдвиг, и переход в состояние 105
    LEFTSHIFT   сдвиг, и переход в состояние 106
    RIGHTSHIFT  сдвиг, и переход в состояние 107
    '*'         сдвиг, и переход в состояние 108

    $default  вывод с использованием правила 99 (vmdeclaration)


State 307

   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr
   97 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 110
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113

    $default  вывод с использованием правила 97 (vmdeclaration)


State 308

   65 matrix: matrix . '*' matrix
   66       | matrix . ELEMMULT matrix
   67       | matrix . '\''
   68       | matrix . RIGHTSHIFT
   69       | matrix . LEFTSHIFT
   71       | matrix . ELEMMULT vector
   72       | matrix . ELEMMULT expr
   98 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 104
    '\''        сдвиг, и переход в состояние 105
    LEFTSHIFT   сдвиг, и переход в состояние 106
    RIGHTSHIFT  сдвиг, и переход в состояние 107
    '*'         сдвиг, и переход в состояние 108

    $default  вывод с использованием правила 98 (vmdeclaration)


State 309

   84 vector: vector . ELEMMULT vector
   85       | vector . RIGHTSHIFT
   86       | vector . LEFTSHIFT
   87       | vector . ELEMMULT expr
   96 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 110
    LEFTSHIFT   сдвиг, и переход в состояние 112
    RIGHTSHIFT  сдвиг, и переход в состояние 113

    $default  вывод с использованием правила 96 (vmdeclaration)


State 310

   44 args_func: '[' type . VAR ']'

    VAR  сдвиг, и переход в состояние 314


State 311

   46 args_func: args_func error .

    $default  вывод с использованием правила 46 (args_func)


State 312

   45 args_func: args_func ',' . '[' type VAR ']'

    '['  сдвиг, и переход в состояние 315


State 313

   48 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' . B NEWLINE stmts E

    B  сдвиг, и переход в состояние 316


State 314

   44 args_func: '[' type VAR . ']'

    ']'  сдвиг, и переход в состояние 317


State 315

   45 args_func: args_func ',' '[' . type VAR ']'
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22

    type  переход в состояние 318


State 316

   48 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B . NEWLINE stmts E

    NEWLINE  сдвиг, и переход в состояние 319


State 317

   44 args_func: '[' type VAR ']' .

    $default  вывод с использованием правила 44 (args_func)


State 318

   45 args_func: args_func ',' '[' type . VAR ']'

    VAR  сдвиг, и переход в состояние 320


State 319

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   48         | '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE . stmts E
   49         | . error E
   58 callfunction: . FVARIABLE '[' callfunc_args ']'
   59             | . error '[' callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   93 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   94              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   95              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   96              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   98              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   99              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  100              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  101 declaration: . type VAR DECLARE expr
  102            | . type VAR DECLARE vector
  103            | . type VAR DECLARE matrix
  104 assignment: . VARIABLE ASSIGN expr
  105           | . VVARIABLE ASSIGN vector
  106           | . MVARIABLE ASSIGN matrix
  107 print: . PRINT '(' expr ')'
  108      | . PRINT '(' VVARIABLE ')'
  109      | . PRINT '(' MVARIABLE ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 84
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmts          переход в состояние 321
    stmt           переход в состояние 38
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 320

   45 args_func: args_func ',' '[' type VAR . ']'

    ']'  сдвиг, и переход в состояние 322


State 321

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . callfunction NEWLINE
   21     | . robotactions NEWLINE
   22     | . '(' stmts ')'
   23     | . error NEWLINE
   24 robotactions: . robotright
   25             | . robotleft
   26 robotmove: . MOVE '(' expr ')'
   27 robotright: . RIGHT
   28 robotleft: . LEFT
   29 robotwall: . WALL
   30 robotexit: . ROBEX
   31 iff: . IF expr NEWLINE begif stmts endif
   40 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   48 function: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E
   48         | '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts . E
   49         | . error E
   58 callfunction: . FVARIABLE '[' callfunc_args ']'
   59             | . error '[' callfunc_args ']'
   60 matrix: . '{' listexprs '}'
   61       | . MVARIABLE '(' vector ',' '[' ']' ')'
   62       | . MVARIABLE '(' '[' ']' ',' vector ')'
   63       | . MVARIABLE '(' matrix ')'
   64       | . MVARIABLE
   65       | . matrix '*' matrix
   66       | . matrix ELEMMULT matrix
   67       | . matrix '\''
   68       | . matrix RIGHTSHIFT
   69       | . matrix LEFTSHIFT
   70       | . vector '\''
   71       | . matrix ELEMMULT vector
   72       | . matrix ELEMMULT expr
   73       | . error matrix
   74       | . error vector
   75       | . error expr
   79 vector: . '{' exprs '}'
   80       | . VVARIABLE '(' vector ',' '[' ']' ')'
   81       | . MVARIABLE '(' expr ',' '[' ']' ')'
   82       | . MVARIABLE '(' '[' ']' ',' expr ')'
   83       | . VVARIABLE
   84       | . vector ELEMMULT vector
   85       | . vector RIGHTSHIFT
   86       | . vector LEFTSHIFT
   87       | . vector ELEMMULT expr
   88       | . error vector
   89       | . error expr
   93 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   94              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   95              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   96              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   97              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   98              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   99              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
  100              | . MVARIABLE '(' matrix ')' ASSIGN matrix
  101 declaration: . type VAR DECLARE expr
  102            | . type VAR DECLARE vector
  103            | . type VAR DECLARE matrix
  104 assignment: . VARIABLE ASSIGN expr
  105           | . VVARIABLE ASSIGN vector
  106           | . MVARIABLE ASSIGN matrix
  107 print: . PRINT '(' expr ')'
  108      | . PRINT '(' VVARIABLE ')'
  109      | . PRINT '(' MVARIABLE ')'
  110 expr: . const
  111     | . robotexit
  112     | . robotmove
  113     | . robotwall
  114     | . VARIABLE
  115     | . '-' expr
  116     | . expr '+' expr
  117     | . expr '-' expr
  118     | . expr '/' expr
  119     | . expr '<' expr
  120     | . expr '>' expr
  121     | . '!' expr
  122     | . expr CONJUNCTION expr
  123     | . '(' expr ')'
  124     | . VVARIABLE '(' expr ')'
  125     | . MVARIABLE '(' expr ',' expr ')'
  126     | . error expr
  127 type: . INT
  128     | . CINT
  129     | . VINT
  130     | . MINT
  131     | . CVINT
  132     | . CMINT
  133     | . BOOLEAN
  134     | . CBOOLEAN
  135     | . VBOOLEAN
  136     | . MBOOLEAN
  137     | . CVBOOLEAN
  138     | . CMBOOLEAN
  139 const: . INTEGER
  140      | . BOOL

    error      сдвиг, и переход в состояние 96
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    FVARIABLE  сдвиг, и переход в состояние 10
    CINT       сдвиг, и переход в состояние 11
    VINT       сдвиг, и переход в состояние 12
    MINT       сдвиг, и переход в состояние 13
    INT        сдвиг, и переход в состояние 14
    CVINT      сдвиг, и переход в состояние 15
    CMINT      сдвиг, и переход в состояние 16
    BOOLEAN    сдвиг, и переход в состояние 17
    CBOOLEAN   сдвиг, и переход в состояние 18
    VBOOLEAN   сдвиг, и переход в состояние 19
    MBOOLEAN   сдвиг, и переход в состояние 20
    CVBOOLEAN  сдвиг, и переход в состояние 21
    CMBOOLEAN  сдвиг, и переход в состояние 22
    NEWLINE    сдвиг, и переход в состояние 23
    PRINT      сдвиг, и переход в состояние 24
    IF         сдвиг, и переход в состояние 25
    FORR       сдвиг, и переход в состояние 26
    E          сдвиг, и переход в состояние 323
    MOVE       сдвиг, и переход в состояние 27
    RIGHT      сдвиг, и переход в состояние 28
    LEFT       сдвиг, и переход в состояние 29
    ROBEX      сдвиг, и переход в состояние 30
    WALL       сдвиг, и переход в состояние 31
    '-'        сдвиг, и переход в состояние 32
    '!'        сдвиг, и переход в состояние 33
    '('        сдвиг, и переход в состояние 34
    '['        сдвиг, и переход в состояние 35
    '{'        сдвиг, и переход в состояние 36

    stmt           переход в состояние 97
    robotactions   переход в состояние 39
    robotmove      переход в состояние 40
    robotright     переход в состояние 41
    robotleft      переход в состояние 42
    robotwall      переход в состояние 43
    robotexit      переход в состояние 44
    iff            переход в состояние 45
    forr           переход в состояние 46
    function       переход в состояние 47
    callfunction   переход в состояние 48
    matrix         переход в состояние 49
    vector         переход в состояние 50
    vmdeclaration  переход в состояние 51
    declaration    переход в состояние 52
    assignment     переход в состояние 53
    print          переход в состояние 54
    expr           переход в состояние 55
    type           переход в состояние 56
    const          переход в состояние 57


State 322

   45 args_func: args_func ',' '[' type VAR ']' .

    $default  вывод с использованием правила 45 (args_func)


State 323

   48 function: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' B NEWLINE stmts E .

    $default  вывод с использованием правила 48 (function)
