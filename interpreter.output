Терминалы не используются в грамматике

   END
   FVARIABLE
   ER


Состояние 4 конфликты: 14 сдвига/вывода, 33 вывода/вывода
Состояние 36 конфликты: 32 сдвига/вывода
Состояние 63 конфликты: 5 сдвига/вывода
Состояние 64 конфликты: 4 сдвига/вывода, 11 вывода/вывода
Состояние 65 конфликты: 6 сдвига/вывода, 22 вывода/вывода
Состояние 78 конфликты: 1 сдвига/вывода
Состояние 79 конфликты: 1 сдвига/вывода
Состояние 80 конфликты: 14 сдвига/вывода
Состояние 92 конфликты: 14 сдвига/вывода
Состояние 143 конфликты: 6 сдвига/вывода
Состояние 155 конфликты: 3 сдвига/вывода
Состояние 156 конфликты: 6 сдвига/вывода, 12 вывода/вывода
Состояние 167 конфликты: 5 сдвига/вывода
Состояние 168 конфликты: 4 сдвига/вывода
Состояние 170 конфликты: 4 сдвига/вывода
Состояние 171 конфликты: 3 сдвига/вывода
Состояние 173 конфликты: 6 сдвига/вывода
Состояние 174 конфликты: 1 сдвига/вывода
Состояние 175 конфликты: 1 сдвига/вывода
Состояние 176 конфликты: 1 сдвига/вывода
Состояние 177 конфликты: 1 сдвига/вывода
Состояние 178 конфликты: 1 сдвига/вывода
Состояние 191 конфликты: 4 вывода/вывода


Грамматика

    0 $accept: program $end

    1 program: func

    2 func: func stmts
    3     | func error
    4     | %empty

    5 stmts: stmt
    6      | stmts stmt
    7      | stmts error
    8      | error

    9 stmt: NEWLINE
   10     | expr NEWLINE
   11     | vector NEWLINE
   12     | matrix NEWLINE
   13     | print NEWLINE
   14     | vmdeclaration NEWLINE
   15     | declaration NEWLINE
   16     | assignment NEWLINE
   17     | iff NEWLINE
   18     | forr NEWLINE
   19     | function NEWLINE
   20     | robotactions NEWLINE
   21     | '(' stmts ')'
   22     | error NEWLINE

   23 robotactions: robotright
   24             | robotleft

   25 robotmove: MOVE '(' expr ')'

   26 robotright: RIGHT

   27 robotleft: LEFT

   28 robotwall: WALL

   29 robotexit: ROBEX

   30 iff: IF expr NEWLINE begif stmts endif

   31 begif: B
   32      | BEGIF

   33 endif: E
   34      | ENDIF

   35 begfor: B
   36       | BEGFOR

   37 endfor: E
   38       | ENDFOR

   39 forr: FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor

   40 return_func: type VAR
   41            | return_func ',' type VAR
   42            | return_func error

   43 args_func: '[' type VAR
   44          | '[' type VAR DECLARE expr
   45          | '[' type VAR DECLARE vector
   46          | '[' type VAR DECLARE matrix
   47          | args_func ',' type VAR
   48          | args_func ',' type VAR DECLARE expr
   49          | args_func ',' type VAR DECLARE vector
   50          | args_func ',' type VAR DECLARE matrix
   51          | args_func ']'
   52          | args_func error
   53          | error

   54 function_head: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   55              | error

   56 function: function_head B NEWLINE stmts E

   57 matrix: '{' listexprs '}'
   58       | MVARIABLE '(' vector ',' '[' ']' ')'
   59       | MVARIABLE '(' '[' ']' ',' vector ')'
   60       | MVARIABLE '(' matrix ')'
   61       | MVARIABLE
   62       | matrix '*' matrix
   63       | matrix ELEMMULT matrix
   64       | matrix '\''
   65       | matrix RIGHTSHIFT
   66       | matrix LEFTSHIFT
   67       | vector '\''
   68       | matrix ELEMMULT vector
   69       | matrix ELEMMULT expr
   70       | error matrix
   71       | error vector
   72       | error expr

   73 listexprs: vector ',' vector
   74          | listexprs ',' vector
   75          | listexprs error

   76 vector: '{' exprs '}'
   77       | VVARIABLE '(' vector ',' '[' ']' ')'
   78       | MVARIABLE '(' expr ',' '[' ']' ')'
   79       | MVARIABLE '(' '[' ']' ',' expr ')'
   80       | VVARIABLE
   81       | vector ELEMMULT vector
   82       | vector RIGHTSHIFT
   83       | vector LEFTSHIFT
   84       | vector ELEMMULT expr
   85       | error vector
   86       | error expr

   87 exprs: expr ',' expr
   88      | exprs ',' expr
   89      | exprs error

   90 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr
   91              | VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   92              | MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   93              | MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   94              | MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   95              | MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   96              | MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   97              | MVARIABLE '(' matrix ')' ASSIGN matrix

   98 declaration: type VAR DECLARE expr
   99            | type VAR DECLARE vector
  100            | type VAR DECLARE matrix

  101 assignment: VARIABLE ASSIGN expr
  102           | VVARIABLE ASSIGN vector
  103           | MVARIABLE ASSIGN matrix

  104 print: PRINT '(' expr ')'
  105      | PRINT '(' VVARIABLE ')'
  106      | PRINT '(' MVARIABLE ')'

  107 expr: const
  108     | robotexit
  109     | robotmove
  110     | robotwall
  111     | VARIABLE
  112     | '-' expr
  113     | expr '+' expr
  114     | expr '-' expr
  115     | expr '/' expr
  116     | expr '<' expr
  117     | expr '>' expr
  118     | '!' expr
  119     | expr CONJUNCTION expr
  120     | '(' expr ')'
  121     | VVARIABLE '(' expr ')'
  122     | MVARIABLE '(' expr ',' expr ')'
  123     | error expr

  124 type: INT
  125     | CINT
  126     | VINT
  127     | MINT
  128     | CVINT
  129     | CMINT
  130     | BOOLEAN
  131     | CBOOLEAN
  132     | VBOOLEAN
  133     | MBOOLEAN
  134     | CVBOOLEAN
  135     | CMBOOLEAN

  136 const: INTEGER
  137      | BOOL


Терминальные символы с правилами, в которых они появляются

$end (0) 0
'!' (33) 118
'\'' (39) 64 67
'(' (40) 21 25 54 58 59 60 77 78 79 90 91 92 93 94 95 96 97 104 105
    106 120 121 122
')' (41) 21 25 54 58 59 60 77 78 79 90 91 92 93 94 95 96 97 104 105
    106 120 121 122
'*' (42) 62
'+' (43) 113
',' (44) 41 47 48 49 50 58 59 73 74 77 78 79 87 88 91 92 93 94 95 96
    122
'-' (45) 112 114
'/' (47) 115
'<' (60) 116
'>' (62) 117
'[' (91) 43 44 45 46 54 58 59 77 78 79 91 93 94 95 96
']' (93) 51 54 58 59 77 78 79 91 93 94 95 96
'{' (123) 57 76
'}' (125) 57 76
error (256) 3 7 8 22 42 52 53 55 70 71 72 75 85 86 89 123
END (258)
BOOL <boolPtr> (259) 137
INTEGER <intPtr> (260) 136
VARIABLE <varName> (261) 101 111
VVARIABLE <varName> (262) 77 80 90 91 102 105 121
MVARIABLE <varName> (263) 58 59 60 61 78 79 92 93 94 95 96 97 103 106
    122
VAR <varName> (264) 40 41 43 44 45 46 47 48 49 50 54 98 99 100
FVARIABLE <varName> (265)
CINT <vtype> (266) 125
VINT <vtype> (267) 126
MINT <vtype> (268) 127
INT <vtype> (269) 124
CVINT <vtype> (270) 128
CMINT <vtype> (271) 129
BOOLEAN <vtype> (272) 130
CBOOLEAN <vtype> (273) 131
VBOOLEAN <vtype> (274) 132
MBOOLEAN <vtype> (275) 133
CVBOOLEAN <vtype> (276) 134
CMBOOLEAN <vtype> (277) 135
NEWLINE (278) 9 10 11 12 13 14 15 16 17 18 19 20 22 30 39 56
PRINT (279) 104 105 106
CONJUNCTION (280) 119
ELEMMULT (281) 63 68 69 81 84
LEFTSHIFT (282) 66 83
RIGHTSHIFT (283) 65 82
IF (284) 30
FORR (285) 39
ER (286)
DOUBLEDOT (287) 39
B (288) 31 35 56
E (289) 33 37 56
FUNC (290) 54
MOVE (291) 25
RIGHT (292) 26
LEFT (293) 27
ROBEX (294) 29
WALL (295) 28
BEGFOR (296) 36
BEGIF (297) 32
ENDIF (298) 34
ENDFOR (299) 38
ASSIGN (300) 90 91 92 93 94 95 96 97 101 102 103
DECLARE (301) 44 45 46 48 49 50 54 98 99 100
UMINUS (302)


Нетерминальные символы с правилами, в которых они появляются

$accept (63)
    налево: 0
program (64)
    налево: 1, направо: 0
func (65)
    налево: 2 3 4, направо: 1 2 3
stmts <ptr> (66)
    налево: 5 6 7 8, направо: 2 6 7 21 30 39 56
stmt <ptr> (67)
    налево: 9 10 11 12 13 14 15 16 17 18 19 20 21 22, направо:
    5 6
robotactions <ptr> (68)
    налево: 23 24, направо: 20
robotmove <ptr> (69)
    налево: 25, направо: 109
robotright <ptr> (70)
    налево: 26, направо: 23
robotleft <ptr> (71)
    налево: 27, направо: 24
robotwall <ptr> (72)
    налево: 28, направо: 110
robotexit <ptr> (73)
    налево: 29, направо: 108
iff <ptr> (74)
    налево: 30, направо: 17
begif (75)
    налево: 31 32, направо: 30
endif (76)
    налево: 33 34, направо: 30
begfor (77)
    налево: 35 36, направо: 39
endfor (78)
    налево: 37 38, направо: 39
forr <ptr> (79)
    налево: 39, направо: 18
return_func <ptr> (80)
    налево: 40 41 42, направо: 41 42 54
args_func <ptr> (81)
    налево: 43 44 45 46 47 48 49 50 51 52 53, направо:
    47 48 49 50 51 52 54
function_head <ptr> (82)
    налево: 54 55, направо: 56
function <ptr> (83)
    налево: 56, направо: 19
matrix <ptr> (84)
    налево: 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72,
    направо: 12 46 50 60 62 63 64 65 66 68 69 70 95 96 97 100
    103
listexprs <ptr> (85)
    налево: 73 74 75, направо: 57 74 75
vector <ptr> (86)
    налево: 76 77 78 79 80 81 82 83 84 85 86, направо:
    11 45 49 58 59 67 68 71 73 74 77 81 82 83 84 85 91 93 94 95 96
    99 102
exprs <ptr> (87)
    налево: 87 88 89, направо: 76 88 89
vmdeclaration <ptr> (88)
    налево: 90 91 92 93 94 95 96 97, направо: 14
declaration <varOpPtr> (89)
    налево: 98 99 100, направо: 15 39
assignment <varOpPtr> (90)
    налево: 101 102 103, направо: 16
print <ptr> (91)
    налево: 104 105 106, направо: 13
expr <ptr> (92)
    налево: 107 108 109 110 111 112 113 114 115 116 117 118 119
    120 121 122 123, направо: 10 25 30 39 44 48 69 72 78 79
    84 86 87 88 90 92 93 94 98 101 104 112 113 114 115 116 117 118
    119 120 121 122 123
type <vtype> (93)
    налево: 124 125 126 127 128 129 130 131 132 133 134 135,
    направо: 40 41 43 44 45 46 47 48 49 50 98 99 100
const <ptr> (94)
    налево: 136 137, направо: 107


State 0

    0 $accept: . program $end
    1 program: . func
    2 func: . func stmts
    3     | . func error
    4     | . %empty

    $default  вывод с использованием правила 4 (func)

    program  переход в состояние 1
    func     переход в состояние 2


State 1

    0 $accept: program . $end

    $end  сдвиг, и переход в состояние 3


State 2

    1 program: func .  [$end]
    2 func: func . stmts
    3     | func . error
    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22     | . error NEWLINE
   23 robotactions: . robotright
   24             | . robotleft
   25 robotmove: . MOVE '(' expr ')'
   26 robotright: . RIGHT
   27 robotleft: . LEFT
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   30 iff: . IF expr NEWLINE begif stmts endif
   39 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   54 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   55              | . error
   56 function: . function_head B NEWLINE stmts E
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   90 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   91              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   92              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   93              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   94              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   95              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   96              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   97              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   98 declaration: . type VAR DECLARE expr
   99            | . type VAR DECLARE vector
  100            | . type VAR DECLARE matrix
  101 assignment: . VARIABLE ASSIGN expr
  102           | . VVARIABLE ASSIGN vector
  103           | . MVARIABLE ASSIGN matrix
  104 print: . PRINT '(' expr ')'
  105      | . PRINT '(' VVARIABLE ')'
  106      | . PRINT '(' MVARIABLE ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 4
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    $end  вывод с использованием правила 1 (program)

    stmts          переход в состояние 36
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function_head  переход в состояние 46
    function       переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 3

    0 $accept: program $end .

    $default  принять


State 4

    3 func: func error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    8 stmts: error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
   22 stmt: error . NEWLINE
   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   55 function_head: error .  [B]
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   70       | error . matrix
   71       | . error vector
   71       | error . vector
   72       | . error expr
   72       | error . expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   85       | error . vector
   86       | . error expr
   86       | error . expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  123     | error . expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 57
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 60
    NEWLINE    сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 35

    $end       вывод с использованием правила 3 (func)
    $end       [вывод с использованием правила 8 (stmts)]
    error      [вывод с использованием правила 3 (func)]
    error      [вывод с использованием правила 8 (stmts)]
    BOOL       [вывод с использованием правила 3 (func)]
    BOOL       [вывод с использованием правила 8 (stmts)]
    INTEGER    [вывод с использованием правила 3 (func)]
    INTEGER    [вывод с использованием правила 8 (stmts)]
    VARIABLE   [вывод с использованием правила 3 (func)]
    VARIABLE   [вывод с использованием правила 8 (stmts)]
    VVARIABLE  [вывод с использованием правила 3 (func)]
    VVARIABLE  [вывод с использованием правила 8 (stmts)]
    MVARIABLE  [вывод с использованием правила 3 (func)]
    MVARIABLE  [вывод с использованием правила 8 (stmts)]
    CINT       вывод с использованием правила 3 (func)
    CINT       [вывод с использованием правила 8 (stmts)]
    VINT       вывод с использованием правила 3 (func)
    VINT       [вывод с использованием правила 8 (stmts)]
    MINT       вывод с использованием правила 3 (func)
    MINT       [вывод с использованием правила 8 (stmts)]
    INT        вывод с использованием правила 3 (func)
    INT        [вывод с использованием правила 8 (stmts)]
    CVINT      вывод с использованием правила 3 (func)
    CVINT      [вывод с использованием правила 8 (stmts)]
    CMINT      вывод с использованием правила 3 (func)
    CMINT      [вывод с использованием правила 8 (stmts)]
    BOOLEAN    вывод с использованием правила 3 (func)
    BOOLEAN    [вывод с использованием правила 8 (stmts)]
    CBOOLEAN   вывод с использованием правила 3 (func)
    CBOOLEAN   [вывод с использованием правила 8 (stmts)]
    VBOOLEAN   вывод с использованием правила 3 (func)
    VBOOLEAN   [вывод с использованием правила 8 (stmts)]
    MBOOLEAN   вывод с использованием правила 3 (func)
    MBOOLEAN   [вывод с использованием правила 8 (stmts)]
    CVBOOLEAN  вывод с использованием правила 3 (func)
    CVBOOLEAN  [вывод с использованием правила 8 (stmts)]
    CMBOOLEAN  вывод с использованием правила 3 (func)
    CMBOOLEAN  [вывод с использованием правила 8 (stmts)]
    NEWLINE    [вывод с использованием правила 3 (func)]
    NEWLINE    [вывод с использованием правила 8 (stmts)]
    PRINT      вывод с использованием правила 3 (func)
    PRINT      [вывод с использованием правила 8 (stmts)]
    IF         вывод с использованием правила 3 (func)
    IF         [вывод с использованием правила 8 (stmts)]
    FORR       вывод с использованием правила 3 (func)
    FORR       [вывод с использованием правила 8 (stmts)]
    B          вывод с использованием правила 55 (function_head)
    MOVE       [вывод с использованием правила 3 (func)]
    MOVE       [вывод с использованием правила 8 (stmts)]
    RIGHT      вывод с использованием правила 3 (func)
    RIGHT      [вывод с использованием правила 8 (stmts)]
    LEFT       вывод с использованием правила 3 (func)
    LEFT       [вывод с использованием правила 8 (stmts)]
    ROBEX      [вывод с использованием правила 3 (func)]
    ROBEX      [вывод с использованием правила 8 (stmts)]
    WALL       [вывод с использованием правила 3 (func)]
    WALL       [вывод с использованием правила 8 (stmts)]
    '-'        [вывод с использованием правила 3 (func)]
    '-'        [вывод с использованием правила 8 (stmts)]
    '!'        [вывод с использованием правила 3 (func)]
    '!'        [вывод с использованием правила 8 (stmts)]
    '('        [вывод с использованием правила 3 (func)]
    '('        [вывод с использованием правила 8 (stmts)]
    '['        вывод с использованием правила 3 (func)
    '['        [вывод с использованием правила 8 (stmts)]
    '{'        [вывод с использованием правила 3 (func)]
    '{'        [вывод с использованием правила 8 (stmts)]

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 63
    vector     переход в состояние 64
    expr       переход в состояние 65
    const      переход в состояние 56


State 5

  137 const: BOOL .

    $default  вывод с использованием правила 137 (const)


State 6

  136 const: INTEGER .

    $default  вывод с использованием правила 136 (const)


State 7

  101 assignment: VARIABLE . ASSIGN expr
  111 expr: VARIABLE .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 66

    $default  вывод с использованием правила 111 (expr)


State 8

   77 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   80       | VVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   90 vmdeclaration: VVARIABLE . '(' expr ')' ASSIGN expr
   91              | VVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN vector
  102 assignment: VVARIABLE . ASSIGN vector
  121 expr: VVARIABLE . '(' expr ')'

    ASSIGN  сдвиг, и переход в состояние 67
    '('     сдвиг, и переход в состояние 68

    $default  вывод с использованием правила 80 (vector)


State 9

   58 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   59       | MVARIABLE . '(' '[' ']' ',' vector ')'
   60       | MVARIABLE . '(' matrix ')'
   61       | MVARIABLE .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   78 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   79       | MVARIABLE . '(' '[' ']' ',' expr ')'
   92 vmdeclaration: MVARIABLE . '(' expr ',' expr ')' ASSIGN expr
   93              | MVARIABLE . '(' expr ',' '[' ']' ')' ASSIGN vector
   94              | MVARIABLE . '(' '[' ']' ',' expr ')' ASSIGN vector
   95              | MVARIABLE . '(' vector ',' '[' ']' ')' ASSIGN matrix
   96              | MVARIABLE . '(' '[' ']' ',' vector ')' ASSIGN matrix
   97              | MVARIABLE . '(' matrix ')' ASSIGN matrix
  103 assignment: MVARIABLE . ASSIGN matrix
  122 expr: MVARIABLE . '(' expr ',' expr ')'

    ASSIGN  сдвиг, и переход в состояние 69
    '('     сдвиг, и переход в состояние 70

    $default  вывод с использованием правила 61 (matrix)


State 10

  125 type: CINT .

    $default  вывод с использованием правила 125 (type)


State 11

  126 type: VINT .

    $default  вывод с использованием правила 126 (type)


State 12

  127 type: MINT .

    $default  вывод с использованием правила 127 (type)


State 13

  124 type: INT .

    $default  вывод с использованием правила 124 (type)


State 14

  128 type: CVINT .

    $default  вывод с использованием правила 128 (type)


State 15

  129 type: CMINT .

    $default  вывод с использованием правила 129 (type)


State 16

  130 type: BOOLEAN .

    $default  вывод с использованием правила 130 (type)


State 17

  131 type: CBOOLEAN .

    $default  вывод с использованием правила 131 (type)


State 18

  132 type: VBOOLEAN .

    $default  вывод с использованием правила 132 (type)


State 19

  133 type: MBOOLEAN .

    $default  вывод с использованием правила 133 (type)


State 20

  134 type: CVBOOLEAN .

    $default  вывод с использованием правила 134 (type)


State 21

  135 type: CMBOOLEAN .

    $default  вывод с использованием правила 135 (type)


State 22

    9 stmt: NEWLINE .

    $default  вывод с использованием правила 9 (stmt)


State 23

  104 print: PRINT . '(' expr ')'
  105      | PRINT . '(' VVARIABLE ')'
  106      | PRINT . '(' MVARIABLE ')'

    '('  сдвиг, и переход в состояние 71


State 24

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   30 iff: IF . expr NEWLINE begif stmts endif
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 75
    const      переход в состояние 56


State 25

   39 forr: FORR . declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   98 declaration: . type VAR DECLARE expr
   99            | . type VAR DECLARE vector
  100            | . type VAR DECLARE matrix
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    declaration  переход в состояние 76
    type         переход в состояние 55


State 26

   25 robotmove: MOVE . '(' expr ')'

    '('  сдвиг, и переход в состояние 77


State 27

   26 robotright: RIGHT .

    $default  вывод с использованием правила 26 (robotright)


State 28

   27 robotleft: LEFT .

    $default  вывод с использованием правила 27 (robotleft)


State 29

   29 robotexit: ROBEX .

    $default  вывод с использованием правила 29 (robotexit)


State 30

   28 robotwall: WALL .

    $default  вывод с использованием правила 28 (robotwall)


State 31

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  112     | '-' . expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 78
    const      переход в состояние 56


State 32

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  118     | '!' . expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 79
    const      переход в состояние 56


State 33

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   21     | '(' . stmts ')'
   22     | . error NEWLINE
   23 robotactions: . robotright
   24             | . robotleft
   25 robotmove: . MOVE '(' expr ')'
   26 robotright: . RIGHT
   27 robotleft: . LEFT
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   30 iff: . IF expr NEWLINE begif stmts endif
   39 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   54 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   55              | . error
   56 function: . function_head B NEWLINE stmts E
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   90 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   91              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   92              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   93              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   94              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   95              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   96              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   97              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   98 declaration: . type VAR DECLARE expr
   99            | . type VAR DECLARE vector
  100            | . type VAR DECLARE matrix
  101 assignment: . VARIABLE ASSIGN expr
  102           | . VVARIABLE ASSIGN vector
  103           | . MVARIABLE ASSIGN matrix
  104 print: . PRINT '(' expr ')'
  105      | . PRINT '(' VVARIABLE ')'
  106      | . PRINT '(' MVARIABLE ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  120     | '(' . expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 80
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmts          переход в состояние 81
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function_head  переход в состояние 46
    function       переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 82
    type           переход в состояние 55
    const          переход в состояние 56


State 34

   40 return_func: . type VAR
   41            | . return_func ',' type VAR
   42            | . return_func error
   54 function_head: '[' . return_func ']' DECLARE FUNC VAR '(' args_func ')'
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    return_func  переход в состояние 83
    type         переход в состояние 84


State 35

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   57 matrix: '{' . listexprs '}'
   73 listexprs: . vector ',' vector
   74          | . listexprs ',' vector
   75          | . listexprs error
   76 vector: . '{' exprs '}'
   76       | '{' . exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   87 exprs: . expr ',' expr
   88      | . exprs ',' expr
   89      | . exprs error
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 85
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    listexprs  переход в состояние 88
    vector     переход в состояние 89
    exprs      переход в состояние 90
    expr       переход в состояние 91
    const      переход в состояние 56


State 36

    2 func: func stmts .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, MOVE, RIGHT, LEFT, ROBEX, WALL, '-', '!', '(', '[', '{']
    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22     | . error NEWLINE
   23 robotactions: . robotright
   24             | . robotleft
   25 robotmove: . MOVE '(' expr ')'
   26 robotright: . RIGHT
   27 robotleft: . LEFT
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   30 iff: . IF expr NEWLINE begif stmts endif
   39 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   54 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   55              | . error
   56 function: . function_head B NEWLINE stmts E
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   90 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   91              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   92              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   93              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   94              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   95              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   96              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   97              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   98 declaration: . type VAR DECLARE expr
   99            | . type VAR DECLARE vector
  100            | . type VAR DECLARE matrix
  101 assignment: . VARIABLE ASSIGN expr
  102           | . VVARIABLE ASSIGN vector
  103           | . MVARIABLE ASSIGN matrix
  104 print: . PRINT '(' expr ')'
  105      | . PRINT '(' VVARIABLE ')'
  106      | . PRINT '(' MVARIABLE ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 92
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    $end       вывод с использованием правила 2 (func)
    error      [вывод с использованием правила 2 (func)]
    BOOL       [вывод с использованием правила 2 (func)]
    INTEGER    [вывод с использованием правила 2 (func)]
    VARIABLE   [вывод с использованием правила 2 (func)]
    VVARIABLE  [вывод с использованием правила 2 (func)]
    MVARIABLE  [вывод с использованием правила 2 (func)]
    CINT       [вывод с использованием правила 2 (func)]
    VINT       [вывод с использованием правила 2 (func)]
    MINT       [вывод с использованием правила 2 (func)]
    INT        [вывод с использованием правила 2 (func)]
    CVINT      [вывод с использованием правила 2 (func)]
    CMINT      [вывод с использованием правила 2 (func)]
    BOOLEAN    [вывод с использованием правила 2 (func)]
    CBOOLEAN   [вывод с использованием правила 2 (func)]
    VBOOLEAN   [вывод с использованием правила 2 (func)]
    MBOOLEAN   [вывод с использованием правила 2 (func)]
    CVBOOLEAN  [вывод с использованием правила 2 (func)]
    CMBOOLEAN  [вывод с использованием правила 2 (func)]
    NEWLINE    [вывод с использованием правила 2 (func)]
    PRINT      [вывод с использованием правила 2 (func)]
    IF         [вывод с использованием правила 2 (func)]
    FORR       [вывод с использованием правила 2 (func)]
    MOVE       [вывод с использованием правила 2 (func)]
    RIGHT      [вывод с использованием правила 2 (func)]
    LEFT       [вывод с использованием правила 2 (func)]
    ROBEX      [вывод с использованием правила 2 (func)]
    WALL       [вывод с использованием правила 2 (func)]
    '-'        [вывод с использованием правила 2 (func)]
    '!'        [вывод с использованием правила 2 (func)]
    '('        [вывод с использованием правила 2 (func)]
    '['        [вывод с использованием правила 2 (func)]
    '{'        [вывод с использованием правила 2 (func)]

    stmt           переход в состояние 93
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function_head  переход в состояние 46
    function       переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 37

    5 stmts: stmt .

    $default  вывод с использованием правила 5 (stmts)


State 38

   20 stmt: robotactions . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 94


State 39

  109 expr: robotmove .

    $default  вывод с использованием правила 109 (expr)


State 40

   23 robotactions: robotright .

    $default  вывод с использованием правила 23 (robotactions)


State 41

   24 robotactions: robotleft .

    $default  вывод с использованием правила 24 (robotactions)


State 42

  110 expr: robotwall .

    $default  вывод с использованием правила 110 (expr)


State 43

  108 expr: robotexit .

    $default  вывод с использованием правила 108 (expr)


State 44

   17 stmt: iff . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 95


State 45

   18 stmt: forr . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 96


State 46

   56 function: function_head . B NEWLINE stmts E

    B  сдвиг, и переход в состояние 97


State 47

   19 stmt: function . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 98


State 48

   12 stmt: matrix . NEWLINE
   62 matrix: matrix . '*' matrix
   63       | matrix . ELEMMULT matrix
   64       | matrix . '\''
   65       | matrix . RIGHTSHIFT
   66       | matrix . LEFTSHIFT
   68       | matrix . ELEMMULT vector
   69       | matrix . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 99
    ELEMMULT    сдвиг, и переход в состояние 100
    '\''        сдвиг, и переход в состояние 101
    LEFTSHIFT   сдвиг, и переход в состояние 102
    RIGHTSHIFT  сдвиг, и переход в состояние 103
    '*'         сдвиг, и переход в состояние 104


State 49

   11 stmt: vector . NEWLINE
   67 matrix: vector . '\''
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr

    NEWLINE     сдвиг, и переход в состояние 105
    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109


State 50

   14 stmt: vmdeclaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 110


State 51

   15 stmt: declaration . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 111


State 52

   16 stmt: assignment . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 112


State 53

   13 stmt: print . NEWLINE

    NEWLINE  сдвиг, и переход в состояние 113


State 54

   10 stmt: expr . NEWLINE
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 114
    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120


State 55

   98 declaration: type . VAR DECLARE expr
   99            | type . VAR DECLARE vector
  100            | type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 121


State 56

  107 expr: const .

    $default  вывод с использованием правила 107 (expr)


State 57

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   70       | error . matrix
   71       | . error vector
   71       | error . vector
   72       | . error expr
   72       | error . expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   85       | error . vector
   86       | . error expr
   86       | error . expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  123     | error . expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 57
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 60
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 63
    vector     переход в состояние 64
    expr       переход в состояние 65
    const      переход в состояние 56


State 58

  111 expr: VARIABLE .

    $default  вывод с использованием правила 111 (expr)


State 59

   77 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   80       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  121 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 122

    $default  вывод с использованием правила 80 (vector)


State 60

   58 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   59       | MVARIABLE . '(' '[' ']' ',' vector ')'
   60       | MVARIABLE . '(' matrix ')'
   61       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   78 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   79       | MVARIABLE . '(' '[' ']' ',' expr ')'
  122 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 123

    $default  вывод с использованием правила 61 (matrix)


State 61

   22 stmt: error NEWLINE .

    $default  вывод с использованием правила 22 (stmt)


State 62

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  120     | '(' . expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 124
    const      переход в состояние 56


State 63

   62 matrix: matrix . '*' matrix
   63       | matrix . ELEMMULT matrix
   64       | matrix . '\''
   65       | matrix . RIGHTSHIFT
   66       | matrix . LEFTSHIFT
   68       | matrix . ELEMMULT vector
   69       | matrix . ELEMMULT expr
   70       | error matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']

    ELEMMULT    сдвиг, и переход в состояние 100
    '\''        сдвиг, и переход в состояние 101
    LEFTSHIFT   сдвиг, и переход в состояние 102
    RIGHTSHIFT  сдвиг, и переход в состояние 103
    '*'         сдвиг, и переход в состояние 104

    ELEMMULT    [вывод с использованием правила 70 (matrix)]
    '\''        [вывод с использованием правила 70 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 70 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 70 (matrix)]
    '*'         [вывод с использованием правила 70 (matrix)]
    $default    вывод с использованием правила 70 (matrix)


State 64

   67 matrix: vector . '\''
   71       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr
   85       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    error       вывод с использованием правила 71 (matrix)
    error       [вывод с использованием правила 85 (vector)]
    NEWLINE     вывод с использованием правила 71 (matrix)
    NEWLINE     [вывод с использованием правила 85 (vector)]
    ELEMMULT    [вывод с использованием правила 71 (matrix)]
    ELEMMULT    [вывод с использованием правила 85 (vector)]
    '\''        [вывод с использованием правила 71 (matrix)]
    '\''        [вывод с использованием правила 85 (vector)]
    LEFTSHIFT   [вывод с использованием правила 71 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 85 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 71 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 85 (vector)]
    ','         вывод с использованием правила 71 (matrix)
    ','         [вывод с использованием правила 85 (vector)]
    DOUBLEDOT   вывод с использованием правила 71 (matrix)
    DOUBLEDOT   [вывод с использованием правила 85 (vector)]
    '*'         вывод с использованием правила 71 (matrix)
    '*'         [вывод с использованием правила 85 (vector)]
    ')'         вывод с использованием правила 71 (matrix)
    ')'         [вывод с использованием правила 85 (vector)]
    ']'         вывод с использованием правила 71 (matrix)
    ']'         [вывод с использованием правила 85 (vector)]
    $default    вывод с использованием правила 71 (matrix)


State 65

   72 matrix: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   86 vector: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr
  123     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']']

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    error        вывод с использованием правила 72 (matrix)
    error        [вывод с использованием правила 86 (vector)]
    error        [вывод с использованием правила 123 (expr)]
    NEWLINE      вывод с использованием правила 72 (matrix)
    NEWLINE      [вывод с использованием правила 86 (vector)]
    NEWLINE      [вывод с использованием правила 123 (expr)]
    CONJUNCTION  [вывод с использованием правила 123 (expr)]
    ELEMMULT     вывод с использованием правила 72 (matrix)
    ELEMMULT     [вывод с использованием правила 86 (vector)]
    ELEMMULT     [вывод с использованием правила 123 (expr)]
    '\''         вывод с использованием правила 72 (matrix)
    '\''         [вывод с использованием правила 86 (vector)]
    '\''         [вывод с использованием правила 123 (expr)]
    LEFTSHIFT    вывод с использованием правила 72 (matrix)
    LEFTSHIFT    [вывод с использованием правила 86 (vector)]
    LEFTSHIFT    [вывод с использованием правила 123 (expr)]
    RIGHTSHIFT   вывод с использованием правила 72 (matrix)
    RIGHTSHIFT   [вывод с использованием правила 86 (vector)]
    RIGHTSHIFT   [вывод с использованием правила 123 (expr)]
    ','          вывод с использованием правила 72 (matrix)
    ','          [вывод с использованием правила 86 (vector)]
    ','          [вывод с использованием правила 123 (expr)]
    DOUBLEDOT    вывод с использованием правила 72 (matrix)
    DOUBLEDOT    [вывод с использованием правила 86 (vector)]
    DOUBLEDOT    [вывод с использованием правила 123 (expr)]
    '<'          [вывод с использованием правила 123 (expr)]
    '>'          [вывод с использованием правила 123 (expr)]
    '+'          [вывод с использованием правила 123 (expr)]
    '-'          [вывод с использованием правила 123 (expr)]
    '*'          вывод с использованием правила 72 (matrix)
    '*'          [вывод с использованием правила 86 (vector)]
    '*'          [вывод с использованием правила 123 (expr)]
    '/'          [вывод с использованием правила 123 (expr)]
    ')'          вывод с использованием правила 72 (matrix)
    ')'          [вывод с использованием правила 86 (vector)]
    ')'          [вывод с использованием правила 123 (expr)]
    ']'          вывод с использованием правила 72 (matrix)
    ']'          [вывод с использованием правила 86 (vector)]
    ']'          [вывод с использованием правила 123 (expr)]
    $default     вывод с использованием правила 72 (matrix)


State 66

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  101 assignment: VARIABLE ASSIGN . expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 125
    const      переход в состояние 56


State 67

   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
  102 assignment: VVARIABLE ASSIGN . vector

    error      сдвиг, и переход в состояние 126
    VVARIABLE  сдвиг, и переход в состояние 127
    MVARIABLE  сдвиг, и переход в состояние 128
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 129


State 68

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   77       | VVARIABLE '(' . vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   90 vmdeclaration: VVARIABLE '(' . expr ')' ASSIGN expr
   91              | VVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN vector
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  121     | VVARIABLE '(' . expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 85
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 130
    expr       переход в состояние 131
    const      переход в состояние 56


State 69

   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
  103 assignment: MVARIABLE ASSIGN . matrix

    error      сдвиг, и переход в состояние 132
    VVARIABLE  сдвиг, и переход в состояние 127
    MVARIABLE  сдвиг, и переход в состояние 133
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 134
    vector  переход в состояние 135


State 70

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   58       | MVARIABLE '(' . vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   59       | MVARIABLE '(' . '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   60       | MVARIABLE '(' . matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   78       | MVARIABLE '(' . expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   79       | MVARIABLE '(' . '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   92 vmdeclaration: MVARIABLE '(' . expr ',' expr ')' ASSIGN expr
   93              | MVARIABLE '(' . expr ',' '[' ']' ')' ASSIGN vector
   94              | MVARIABLE '(' . '[' ']' ',' expr ')' ASSIGN vector
   95              | MVARIABLE '(' . vector ',' '[' ']' ')' ASSIGN matrix
   96              | MVARIABLE '(' . '[' ']' ',' vector ')' ASSIGN matrix
   97              | MVARIABLE '(' . matrix ')' ASSIGN matrix
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  122     | MVARIABLE '(' . expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 57
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 60
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '['        сдвиг, и переход в состояние 136
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 137
    vector     переход в состояние 138
    expr       переход в состояние 139
    const      переход в состояние 56


State 71

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  104 print: PRINT '(' . expr ')'
  105      | PRINT '(' . VVARIABLE ')'
  106      | PRINT '(' . MVARIABLE ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 140
    MVARIABLE  сдвиг, и переход в состояние 141
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 142
    const      переход в состояние 56


State 72

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  123     | error . expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 143
    const      переход в состояние 56


State 73

  121 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 144


State 74

  122 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 145


State 75

   30 iff: IF expr . NEWLINE begif stmts endif
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 146
    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120


State 76

   39 forr: FORR declaration . DOUBLEDOT expr NEWLINE begfor stmts endfor

    DOUBLEDOT  сдвиг, и переход в состояние 147


State 77

   25 robotmove: . MOVE '(' expr ')'
   25          | MOVE '(' . expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 148
    const      переход в состояние 56


State 78

  112 expr: '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  113     | expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115

    CONJUNCTION  [вывод с использованием правила 112 (expr)]
    $default     вывод с использованием правила 112 (expr)

    Конфликт между правилом 112 и лексемой '<' разрешен выводом ('<' < UMINUS).
    Конфликт между правилом 112 и лексемой '>' разрешен выводом ('>' < UMINUS).
    Конфликт между правилом 112 и лексемой '+' разрешен выводом ('+' < UMINUS).
    Конфликт между правилом 112 и лексемой '-' разрешен выводом ('-' < UMINUS).
    Конфликт между правилом 112 и лексемой '/' разрешен выводом ('/' < UMINUS).


State 79

  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  118     | '!' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115

    CONJUNCTION  [вывод с использованием правила 118 (expr)]
    $default     вывод с использованием правила 118 (expr)

    Конфликт между правилом 118 и лексемой '<' разрешен выводом ('<' < '!').
    Конфликт между правилом 118 и лексемой '>' разрешен выводом ('>' < '!').
    Конфликт между правилом 118 и лексемой '+' разрешен выводом ('+' < '!').
    Конфликт между правилом 118 и лексемой '-' разрешен выводом ('-' < '!').
    Конфликт между правилом 118 и лексемой '/' разрешен выводом ('/' < '!').


State 80

    8 stmts: error .  [error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, E, MOVE, RIGHT, LEFT, ROBEX, WALL, ENDIF, ENDFOR, '-', '!', '(', ')', '[', '{']
   22 stmt: error . NEWLINE
   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   55 function_head: error .  [B]
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   70       | error . matrix
   71       | . error vector
   71       | error . vector
   72       | . error expr
   72       | error . expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   85       | error . vector
   86       | . error expr
   86       | error . expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  123     | error . expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 57
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 60
    NEWLINE    сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 35

    error      [вывод с использованием правила 8 (stmts)]
    BOOL       [вывод с использованием правила 8 (stmts)]
    INTEGER    [вывод с использованием правила 8 (stmts)]
    VARIABLE   [вывод с использованием правила 8 (stmts)]
    VVARIABLE  [вывод с использованием правила 8 (stmts)]
    MVARIABLE  [вывод с использованием правила 8 (stmts)]
    CINT       вывод с использованием правила 8 (stmts)
    VINT       вывод с использованием правила 8 (stmts)
    MINT       вывод с использованием правила 8 (stmts)
    INT        вывод с использованием правила 8 (stmts)
    CVINT      вывод с использованием правила 8 (stmts)
    CMINT      вывод с использованием правила 8 (stmts)
    BOOLEAN    вывод с использованием правила 8 (stmts)
    CBOOLEAN   вывод с использованием правила 8 (stmts)
    VBOOLEAN   вывод с использованием правила 8 (stmts)
    MBOOLEAN   вывод с использованием правила 8 (stmts)
    CVBOOLEAN  вывод с использованием правила 8 (stmts)
    CMBOOLEAN  вывод с использованием правила 8 (stmts)
    NEWLINE    [вывод с использованием правила 8 (stmts)]
    PRINT      вывод с использованием правила 8 (stmts)
    IF         вывод с использованием правила 8 (stmts)
    FORR       вывод с использованием правила 8 (stmts)
    B          вывод с использованием правила 55 (function_head)
    E          вывод с использованием правила 8 (stmts)
    MOVE       [вывод с использованием правила 8 (stmts)]
    RIGHT      вывод с использованием правила 8 (stmts)
    LEFT       вывод с использованием правила 8 (stmts)
    ROBEX      [вывод с использованием правила 8 (stmts)]
    WALL       [вывод с использованием правила 8 (stmts)]
    ENDIF      вывод с использованием правила 8 (stmts)
    ENDFOR     вывод с использованием правила 8 (stmts)
    '-'        [вывод с использованием правила 8 (stmts)]
    '!'        [вывод с использованием правила 8 (stmts)]
    '('        [вывод с использованием правила 8 (stmts)]
    ')'        вывод с использованием правила 8 (stmts)
    '['        вывод с использованием правила 8 (stmts)
    '{'        [вывод с использованием правила 8 (stmts)]

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 63
    vector     переход в состояние 64
    expr       переход в состояние 65
    const      переход в состояние 56


State 81

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   21     | '(' stmts . ')'
   22     | . error NEWLINE
   23 robotactions: . robotright
   24             | . robotleft
   25 robotmove: . MOVE '(' expr ')'
   26 robotright: . RIGHT
   27 robotleft: . LEFT
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   30 iff: . IF expr NEWLINE begif stmts endif
   39 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   54 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   55              | . error
   56 function: . function_head B NEWLINE stmts E
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   90 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   91              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   92              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   93              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   94              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   95              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   96              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   97              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   98 declaration: . type VAR DECLARE expr
   99            | . type VAR DECLARE vector
  100            | . type VAR DECLARE matrix
  101 assignment: . VARIABLE ASSIGN expr
  102           | . VVARIABLE ASSIGN vector
  103           | . MVARIABLE ASSIGN matrix
  104 print: . PRINT '(' expr ')'
  105      | . PRINT '(' VVARIABLE ')'
  106      | . PRINT '(' MVARIABLE ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 92
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    ')'        сдвиг, и переход в состояние 149
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmt           переход в состояние 93
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function_head  переход в состояние 46
    function       переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 82

   10 stmt: expr . NEWLINE
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr
  120     | '(' expr . ')'

    NEWLINE      сдвиг, и переход в состояние 114
    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120
    ')'          сдвиг, и переход в состояние 150


State 83

   41 return_func: return_func . ',' type VAR
   42            | return_func . error
   54 function_head: '[' return_func . ']' DECLARE FUNC VAR '(' args_func ')'

    error  сдвиг, и переход в состояние 151
    ','    сдвиг, и переход в состояние 152
    ']'    сдвиг, и переход в состояние 153


State 84

   40 return_func: type . VAR

    VAR  сдвиг, и переход в состояние 154


State 85

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   85       | error . vector
   86       | . error expr
   86       | error . expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  123     | error . expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 85
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 155
    expr       переход в состояние 156
    const      переход в состояние 56


State 86

   78 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   79       | MVARIABLE . '(' '[' ']' ',' expr ')'
  122 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 157


State 87

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   76 vector: '{' . exprs '}'
   87 exprs: . expr ',' expr
   88      | . exprs ',' expr
   89      | . exprs error
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    exprs      переход в состояние 90
    expr       переход в состояние 91
    const      переход в состояние 56


State 88

   57 matrix: '{' listexprs . '}'
   74 listexprs: listexprs . ',' vector
   75          | listexprs . error

    error  сдвиг, и переход в состояние 158
    ','    сдвиг, и переход в состояние 159
    '}'    сдвиг, и переход в состояние 160


State 89

   73 listexprs: vector . ',' vector
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    ','         сдвиг, и переход в состояние 161


State 90

   76 vector: '{' exprs . '}'
   88 exprs: exprs . ',' expr
   89      | exprs . error

    error  сдвиг, и переход в состояние 162
    ','    сдвиг, и переход в состояние 163
    '}'    сдвиг, и переход в состояние 164


State 91

   87 exprs: expr . ',' expr
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    ','          сдвиг, и переход в состояние 165
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120


State 92

    7 stmts: stmts error .  [$end, error, BOOL, INTEGER, VARIABLE, VVARIABLE, MVARIABLE, CINT, VINT, MINT, INT, CVINT, CMINT, BOOLEAN, CBOOLEAN, VBOOLEAN, MBOOLEAN, CVBOOLEAN, CMBOOLEAN, NEWLINE, PRINT, IF, FORR, E, MOVE, RIGHT, LEFT, ROBEX, WALL, ENDIF, ENDFOR, '-', '!', '(', ')', '[', '{']
   22 stmt: error . NEWLINE
   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   55 function_head: error .  [B]
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   70       | error . matrix
   71       | . error vector
   71       | error . vector
   72       | . error expr
   72       | error . expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   85       | error . vector
   86       | . error expr
   86       | error . expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  123     | error . expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 57
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 60
    NEWLINE    сдвиг, и переход в состояние 61
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 35

    $end       вывод с использованием правила 7 (stmts)
    error      [вывод с использованием правила 7 (stmts)]
    BOOL       [вывод с использованием правила 7 (stmts)]
    INTEGER    [вывод с использованием правила 7 (stmts)]
    VARIABLE   [вывод с использованием правила 7 (stmts)]
    VVARIABLE  [вывод с использованием правила 7 (stmts)]
    MVARIABLE  [вывод с использованием правила 7 (stmts)]
    CINT       вывод с использованием правила 7 (stmts)
    VINT       вывод с использованием правила 7 (stmts)
    MINT       вывод с использованием правила 7 (stmts)
    INT        вывод с использованием правила 7 (stmts)
    CVINT      вывод с использованием правила 7 (stmts)
    CMINT      вывод с использованием правила 7 (stmts)
    BOOLEAN    вывод с использованием правила 7 (stmts)
    CBOOLEAN   вывод с использованием правила 7 (stmts)
    VBOOLEAN   вывод с использованием правила 7 (stmts)
    MBOOLEAN   вывод с использованием правила 7 (stmts)
    CVBOOLEAN  вывод с использованием правила 7 (stmts)
    CMBOOLEAN  вывод с использованием правила 7 (stmts)
    NEWLINE    [вывод с использованием правила 7 (stmts)]
    PRINT      вывод с использованием правила 7 (stmts)
    IF         вывод с использованием правила 7 (stmts)
    FORR       вывод с использованием правила 7 (stmts)
    B          вывод с использованием правила 55 (function_head)
    E          вывод с использованием правила 7 (stmts)
    MOVE       [вывод с использованием правила 7 (stmts)]
    RIGHT      вывод с использованием правила 7 (stmts)
    LEFT       вывод с использованием правила 7 (stmts)
    ROBEX      [вывод с использованием правила 7 (stmts)]
    WALL       [вывод с использованием правила 7 (stmts)]
    ENDIF      вывод с использованием правила 7 (stmts)
    ENDFOR     вывод с использованием правила 7 (stmts)
    '-'        [вывод с использованием правила 7 (stmts)]
    '!'        [вывод с использованием правила 7 (stmts)]
    '('        [вывод с использованием правила 7 (stmts)]
    ')'        вывод с использованием правила 7 (stmts)
    '['        вывод с использованием правила 7 (stmts)
    '{'        [вывод с использованием правила 7 (stmts)]

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 63
    vector     переход в состояние 64
    expr       переход в состояние 65
    const      переход в состояние 56


State 93

    6 stmts: stmts stmt .

    $default  вывод с использованием правила 6 (stmts)


State 94

   20 stmt: robotactions NEWLINE .

    $default  вывод с использованием правила 20 (stmt)


State 95

   17 stmt: iff NEWLINE .

    $default  вывод с использованием правила 17 (stmt)


State 96

   18 stmt: forr NEWLINE .

    $default  вывод с использованием правила 18 (stmt)


State 97

   56 function: function_head B . NEWLINE stmts E

    NEWLINE  сдвиг, и переход в состояние 166


State 98

   19 stmt: function NEWLINE .

    $default  вывод с использованием правила 19 (stmt)


State 99

   12 stmt: matrix NEWLINE .

    $default  вывод с использованием правила 12 (stmt)


State 100

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   63       | matrix ELEMMULT . matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   68       | matrix ELEMMULT . vector
   69       | . matrix ELEMMULT expr
   69       | matrix ELEMMULT . expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 57
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 60
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 167
    vector     переход в состояние 168
    expr       переход в состояние 169
    const      переход в состояние 56


State 101

   64 matrix: matrix '\'' .

    $default  вывод с использованием правила 64 (matrix)


State 102

   66 matrix: matrix LEFTSHIFT .

    $default  вывод с использованием правила 66 (matrix)


State 103

   65 matrix: matrix RIGHTSHIFT .

    $default  вывод с использованием правила 65 (matrix)


State 104

   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   62       | matrix '*' . matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr

    error      сдвиг, и переход в состояние 132
    VVARIABLE  сдвиг, и переход в состояние 127
    MVARIABLE  сдвиг, и переход в состояние 133
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 170
    vector  переход в состояние 135


State 105

   11 stmt: vector NEWLINE .

    $default  вывод с использованием правила 11 (stmt)


State 106

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   81       | vector ELEMMULT . vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   84       | vector ELEMMULT . expr
   85       | . error vector
   86       | . error expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 85
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 171
    expr       переход в состояние 172
    const      переход в состояние 56


State 107

   67 matrix: vector '\'' .

    $default  вывод с использованием правила 67 (matrix)


State 108

   83 vector: vector LEFTSHIFT .

    $default  вывод с использованием правила 83 (vector)


State 109

   82 vector: vector RIGHTSHIFT .

    $default  вывод с использованием правила 82 (vector)


State 110

   14 stmt: vmdeclaration NEWLINE .

    $default  вывод с использованием правила 14 (stmt)


State 111

   15 stmt: declaration NEWLINE .

    $default  вывод с использованием правила 15 (stmt)


State 112

   16 stmt: assignment NEWLINE .

    $default  вывод с использованием правила 16 (stmt)


State 113

   13 stmt: print NEWLINE .

    $default  вывод с использованием правила 13 (stmt)


State 114

   10 stmt: expr NEWLINE .

    $default  вывод с использованием правила 10 (stmt)


State 115

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  119     | expr CONJUNCTION . expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 173
    const      переход в состояние 56


State 116

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  116     | expr '<' . expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 174
    const      переход в состояние 56


State 117

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  117     | expr '>' . expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 175
    const      переход в состояние 56


State 118

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  113     | expr '+' . expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 176
    const      переход в состояние 56


State 119

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  114     | expr '-' . expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 177
    const      переход в состояние 56


State 120

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  115     | expr '/' . expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 178
    const      переход в состояние 56


State 121

   98 declaration: type VAR . DECLARE expr
   99            | type VAR . DECLARE vector
  100            | type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 179


State 122

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   77       | VVARIABLE '(' . vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  121     | VVARIABLE '(' . expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 85
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 180
    expr       переход в состояние 181
    const      переход в состояние 56


State 123

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   58       | MVARIABLE '(' . vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   59       | MVARIABLE '(' . '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   60       | MVARIABLE '(' . matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   78       | MVARIABLE '(' . expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   79       | MVARIABLE '(' . '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  122     | MVARIABLE '(' . expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 57
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 60
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '['        сдвиг, и переход в состояние 182
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 183
    vector     переход в состояние 184
    expr       переход в состояние 185
    const      переход в состояние 56


State 124

  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr
  120     | '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120
    ')'          сдвиг, и переход в состояние 150


State 125

  101 assignment: VARIABLE ASSIGN expr .  [NEWLINE]
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    $default  вывод с использованием правила 101 (assignment)


State 126

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   85       | error . vector
   86       | . error expr
   86       | error . expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 85
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 155
    expr       переход в состояние 186
    const      переход в состояние 56


State 127

   77 vector: VVARIABLE . '(' vector ',' '[' ']' ')'
   80       | VVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', '}']

    '('  сдвиг, и переход в состояние 187

    $default  вывод с использованием правила 80 (vector)


State 128

   78 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   79       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 188


State 129

   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr
  102 assignment: VVARIABLE ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    $default  вывод с использованием правила 102 (assignment)


State 130

   77 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   81       | vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr
   91 vmdeclaration: VVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN vector

    ELEMMULT    сдвиг, и переход в состояние 106
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    ','         сдвиг, и переход в состояние 189


State 131

   90 vmdeclaration: VVARIABLE '(' expr . ')' ASSIGN expr
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr
  121     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120
    ')'          сдвиг, и переход в состояние 190


State 132

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   70       | error . matrix
   71       | . error vector
   71       | error . vector
   72       | . error expr
   72       | error . expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   85       | error . vector
   86       | . error expr
   86       | error . expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 57
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 60
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 63
    vector     переход в состояние 64
    expr       переход в состояние 191
    const      переход в состояние 56


State 133

   58 matrix: MVARIABLE . '(' vector ',' '[' ']' ')'
   59       | MVARIABLE . '(' '[' ']' ',' vector ')'
   60       | MVARIABLE . '(' matrix ')'
   61       | MVARIABLE .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   78 vector: MVARIABLE . '(' expr ',' '[' ']' ')'
   79       | MVARIABLE . '(' '[' ']' ',' expr ')'

    '('  сдвиг, и переход в состояние 192

    $default  вывод с использованием правила 61 (matrix)


State 134

   62 matrix: matrix . '*' matrix
   63       | matrix . ELEMMULT matrix
   64       | matrix . '\''
   65       | matrix . RIGHTSHIFT
   66       | matrix . LEFTSHIFT
   68       | matrix . ELEMMULT vector
   69       | matrix . ELEMMULT expr
  103 assignment: MVARIABLE ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 100
    '\''        сдвиг, и переход в состояние 101
    LEFTSHIFT   сдвиг, и переход в состояние 102
    RIGHTSHIFT  сдвиг, и переход в состояние 103
    '*'         сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 103 (assignment)


State 135

   67 matrix: vector . '\''
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109


State 136

   59 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   79 vector: MVARIABLE '(' '[' . ']' ',' expr ')'
   94 vmdeclaration: MVARIABLE '(' '[' . ']' ',' expr ')' ASSIGN vector
   96              | MVARIABLE '(' '[' . ']' ',' vector ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 193


State 137

   60 matrix: MVARIABLE '(' matrix . ')'
   62       | matrix . '*' matrix
   63       | matrix . ELEMMULT matrix
   64       | matrix . '\''
   65       | matrix . RIGHTSHIFT
   66       | matrix . LEFTSHIFT
   68       | matrix . ELEMMULT vector
   69       | matrix . ELEMMULT expr
   97 vmdeclaration: MVARIABLE '(' matrix . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 100
    '\''        сдвиг, и переход в состояние 101
    LEFTSHIFT   сдвиг, и переход в состояние 102
    RIGHTSHIFT  сдвиг, и переход в состояние 103
    '*'         сдвиг, и переход в состояние 104
    ')'         сдвиг, и переход в состояние 194


State 138

   58 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   67       | vector . '\''
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr
   95 vmdeclaration: MVARIABLE '(' vector . ',' '[' ']' ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    ','         сдвиг, и переход в состояние 195


State 139

   78 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
   92 vmdeclaration: MVARIABLE '(' expr . ',' expr ')' ASSIGN expr
   93              | MVARIABLE '(' expr . ',' '[' ']' ')' ASSIGN vector
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr
  122     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 115
    ','          сдвиг, и переход в состояние 196
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120


State 140

  105 print: PRINT '(' VVARIABLE . ')'
  121 expr: VVARIABLE . '(' expr ')'

    '('  сдвиг, и переход в состояние 144
    ')'  сдвиг, и переход в состояние 197


State 141

  106 print: PRINT '(' MVARIABLE . ')'
  122 expr: MVARIABLE . '(' expr ',' expr ')'

    '('  сдвиг, и переход в состояние 145
    ')'  сдвиг, и переход в состояние 198


State 142

  104 print: PRINT '(' expr . ')'
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120
    ')'          сдвиг, и переход в состояние 199


State 143

  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr
  123     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    CONJUNCTION  [вывод с использованием правила 123 (expr)]
    '<'          [вывод с использованием правила 123 (expr)]
    '>'          [вывод с использованием правила 123 (expr)]
    '+'          [вывод с использованием правила 123 (expr)]
    '-'          [вывод с использованием правила 123 (expr)]
    '/'          [вывод с использованием правила 123 (expr)]
    $default     вывод с использованием правила 123 (expr)


State 144

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  121     | VVARIABLE '(' . expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 181
    const      переход в состояние 56


State 145

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  122     | MVARIABLE '(' . expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 200
    const      переход в состояние 56


State 146

   30 iff: IF expr NEWLINE . begif stmts endif
   31 begif: . B
   32      | . BEGIF

    B      сдвиг, и переход в состояние 201
    BEGIF  сдвиг, и переход в состояние 202

    begif  переход в состояние 203


State 147

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   39 forr: FORR declaration DOUBLEDOT . expr NEWLINE begfor stmts endfor
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 204
    const      переход в состояние 56


State 148

   25 robotmove: MOVE '(' expr . ')'
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120
    ')'          сдвиг, и переход в состояние 205


State 149

   21 stmt: '(' stmts ')' .

    $default  вывод с использованием правила 21 (stmt)


State 150

  120 expr: '(' expr ')' .

    $default  вывод с использованием правила 120 (expr)


State 151

   42 return_func: return_func error .

    $default  вывод с использованием правила 42 (return_func)


State 152

   41 return_func: return_func ',' . type VAR
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    type  переход в состояние 206


State 153

   54 function_head: '[' return_func ']' . DECLARE FUNC VAR '(' args_func ')'

    DECLARE  сдвиг, и переход в состояние 207


State 154

   40 return_func: type VAR .

    $default  вывод с использованием правила 40 (return_func)


State 155

   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr
   85       | error vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']

    ELEMMULT    сдвиг, и переход в состояние 106
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    ELEMMULT    [вывод с использованием правила 85 (vector)]
    LEFTSHIFT   [вывод с использованием правила 85 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 85 (vector)]
    $default    вывод с использованием правила 85 (vector)


State 156

   86 vector: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr
  123     | error expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    error        вывод с использованием правила 86 (vector)
    error        [вывод с использованием правила 123 (expr)]
    NEWLINE      вывод с использованием правила 86 (vector)
    NEWLINE      [вывод с использованием правила 123 (expr)]
    CONJUNCTION  [вывод с использованием правила 123 (expr)]
    ELEMMULT     вывод с использованием правила 86 (vector)
    ELEMMULT     [вывод с использованием правила 123 (expr)]
    '\''         вывод с использованием правила 86 (vector)
    '\''         [вывод с использованием правила 123 (expr)]
    LEFTSHIFT    вывод с использованием правила 86 (vector)
    LEFTSHIFT    [вывод с использованием правила 123 (expr)]
    RIGHTSHIFT   вывод с использованием правила 86 (vector)
    RIGHTSHIFT   [вывод с использованием правила 123 (expr)]
    ','          вывод с использованием правила 86 (vector)
    ','          [вывод с использованием правила 123 (expr)]
    DOUBLEDOT    вывод с использованием правила 86 (vector)
    DOUBLEDOT    [вывод с использованием правила 123 (expr)]
    '<'          [вывод с использованием правила 123 (expr)]
    '>'          [вывод с использованием правила 123 (expr)]
    '+'          [вывод с использованием правила 123 (expr)]
    '-'          [вывод с использованием правила 123 (expr)]
    '*'          вывод с использованием правила 86 (vector)
    '*'          [вывод с использованием правила 123 (expr)]
    '/'          [вывод с использованием правила 123 (expr)]
    ')'          вывод с использованием правила 86 (vector)
    ')'          [вывод с использованием правила 123 (expr)]
    ']'          вывод с использованием правила 86 (vector)
    ']'          [вывод с использованием правила 123 (expr)]
    '}'          вывод с использованием правила 86 (vector)
    '}'          [вывод с использованием правила 123 (expr)]
    $default     вывод с использованием правила 86 (vector)


State 157

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   78 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   79       | MVARIABLE '(' . '[' ']' ',' expr ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  122     | MVARIABLE '(' . expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '['        сдвиг, и переход в состояние 208

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 185
    const      переход в состояние 56


State 158

   75 listexprs: listexprs error .

    $default  вывод с использованием правила 75 (listexprs)


State 159

   74 listexprs: listexprs ',' . vector
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr

    error      сдвиг, и переход в состояние 126
    VVARIABLE  сдвиг, и переход в состояние 127
    MVARIABLE  сдвиг, и переход в состояние 128
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 209


State 160

   57 matrix: '{' listexprs '}' .

    $default  вывод с использованием правила 57 (matrix)


State 161

   73 listexprs: vector ',' . vector
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr

    error      сдвиг, и переход в состояние 126
    VVARIABLE  сдвиг, и переход в состояние 127
    MVARIABLE  сдвиг, и переход в состояние 128
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 210


State 162

   89 exprs: exprs error .

    $default  вывод с использованием правила 89 (exprs)


State 163

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   88 exprs: exprs ',' . expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 211
    const      переход в состояние 56


State 164

   76 vector: '{' exprs '}' .

    $default  вывод с использованием правила 76 (vector)


State 165

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   87 exprs: expr ',' . expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 212
    const      переход в состояние 56


State 166

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22     | . error NEWLINE
   23 robotactions: . robotright
   24             | . robotleft
   25 robotmove: . MOVE '(' expr ')'
   26 robotright: . RIGHT
   27 robotleft: . LEFT
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   30 iff: . IF expr NEWLINE begif stmts endif
   39 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   54 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   55              | . error
   56 function: . function_head B NEWLINE stmts E
   56         | function_head B NEWLINE . stmts E
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   90 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   91              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   92              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   93              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   94              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   95              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   96              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   97              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   98 declaration: . type VAR DECLARE expr
   99            | . type VAR DECLARE vector
  100            | . type VAR DECLARE matrix
  101 assignment: . VARIABLE ASSIGN expr
  102           | . VVARIABLE ASSIGN vector
  103           | . MVARIABLE ASSIGN matrix
  104 print: . PRINT '(' expr ')'
  105      | . PRINT '(' VVARIABLE ')'
  106      | . PRINT '(' MVARIABLE ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 80
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmts          переход в состояние 213
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function_head  переход в состояние 46
    function       переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 167

   62 matrix: matrix . '*' matrix
   63       | matrix . ELEMMULT matrix
   63       | matrix ELEMMULT matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   64       | matrix . '\''
   65       | matrix . RIGHTSHIFT
   66       | matrix . LEFTSHIFT
   68       | matrix . ELEMMULT vector
   69       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 100
    '\''        сдвиг, и переход в состояние 101
    LEFTSHIFT   сдвиг, и переход в состояние 102
    RIGHTSHIFT  сдвиг, и переход в состояние 103
    '*'         сдвиг, и переход в состояние 104

    ELEMMULT    [вывод с использованием правила 63 (matrix)]
    '\''        [вывод с использованием правила 63 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 63 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 63 (matrix)]
    '*'         [вывод с использованием правила 63 (matrix)]
    $default    вывод с использованием правила 63 (matrix)


State 168

   67 matrix: vector . '\''
   68       | matrix ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    ELEMMULT    [вывод с использованием правила 68 (matrix)]
    '\''        [вывод с использованием правила 68 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 68 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 68 (matrix)]
    $default    вывод с использованием правила 68 (matrix)


State 169

   69 matrix: matrix ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    $default  вывод с использованием правила 69 (matrix)


State 170

   62 matrix: matrix . '*' matrix
   62       | matrix '*' matrix .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   63       | matrix . ELEMMULT matrix
   64       | matrix . '\''
   65       | matrix . RIGHTSHIFT
   66       | matrix . LEFTSHIFT
   68       | matrix . ELEMMULT vector
   69       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 100
    '\''        сдвиг, и переход в состояние 101
    LEFTSHIFT   сдвиг, и переход в состояние 102
    RIGHTSHIFT  сдвиг, и переход в состояние 103

    ELEMMULT    [вывод с использованием правила 62 (matrix)]
    '\''        [вывод с использованием правила 62 (matrix)]
    LEFTSHIFT   [вывод с использованием правила 62 (matrix)]
    RIGHTSHIFT  [вывод с использованием правила 62 (matrix)]
    $default    вывод с использованием правила 62 (matrix)

    Конфликт между правилом 62 и лексемой '*' разрешен выводом (%left '*').


State 171

   81 vector: vector . ELEMMULT vector
   81       | vector ELEMMULT vector .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    ELEMMULT    [вывод с использованием правила 81 (vector)]
    LEFTSHIFT   [вывод с использованием правила 81 (vector)]
    RIGHTSHIFT  [вывод с использованием правила 81 (vector)]
    $default    вывод с использованием правила 81 (vector)


State 172

   84 vector: vector ELEMMULT expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']', '}']
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    $default  вывод с использованием правила 84 (vector)


State 173

  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr
  119     | expr CONJUNCTION expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    CONJUNCTION  [вывод с использованием правила 119 (expr)]
    '<'          [вывод с использованием правила 119 (expr)]
    '>'          [вывод с использованием правила 119 (expr)]
    '+'          [вывод с использованием правила 119 (expr)]
    '-'          [вывод с использованием правила 119 (expr)]
    '/'          [вывод с использованием правила 119 (expr)]
    $default     вывод с использованием правила 119 (expr)


State 174

  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  116     | expr '<' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    CONJUNCTION  [вывод с использованием правила 116 (expr)]
    $default     вывод с использованием правила 116 (expr)

    Конфликт между правилом 116 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 116 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 116 и лексемой '+' разрешен сдвигом ('<' < '+').
    Конфликт между правилом 116 и лексемой '-' разрешен сдвигом ('<' < '-').
    Конфликт между правилом 116 и лексемой '/' разрешен сдвигом ('<' < '/').


State 175

  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  117     | expr '>' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '*', ')', ']', '}']
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    CONJUNCTION  [вывод с использованием правила 117 (expr)]
    $default     вывод с использованием правила 117 (expr)

    Конфликт между правилом 117 и лексемой '<' разрешен выводом (%left '<').
    Конфликт между правилом 117 и лексемой '>' разрешен выводом (%left '>').
    Конфликт между правилом 117 и лексемой '+' разрешен сдвигом ('>' < '+').
    Конфликт между правилом 117 и лексемой '-' разрешен сдвигом ('>' < '-').
    Конфликт между правилом 117 и лексемой '/' разрешен сдвигом ('>' < '/').


State 176

  113 expr: expr . '+' expr
  113     | expr '+' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '/'          сдвиг, и переход в состояние 120

    CONJUNCTION  [вывод с использованием правила 113 (expr)]
    $default     вывод с использованием правила 113 (expr)

    Конфликт между правилом 113 и лексемой '<' разрешен выводом ('<' < '+').
    Конфликт между правилом 113 и лексемой '>' разрешен выводом ('>' < '+').
    Конфликт между правилом 113 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 113 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 113 и лексемой '/' разрешен сдвигом ('+' < '/').


State 177

  113 expr: expr . '+' expr
  114     | expr . '-' expr
  114     | expr '-' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', ')', ']', '}']
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '/'          сдвиг, и переход в состояние 120

    CONJUNCTION  [вывод с использованием правила 114 (expr)]
    $default     вывод с использованием правила 114 (expr)

    Конфликт между правилом 114 и лексемой '<' разрешен выводом ('<' < '-').
    Конфликт между правилом 114 и лексемой '>' разрешен выводом ('>' < '-').
    Конфликт между правилом 114 и лексемой '+' разрешен выводом (%left '+').
    Конфликт между правилом 114 и лексемой '-' разрешен выводом (%left '-').
    Конфликт между правилом 114 и лексемой '/' разрешен сдвигом ('-' < '/').


State 178

  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  115     | expr '/' expr .  [error, NEWLINE, CONJUNCTION, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '<', '>', '+', '-', '*', '/', ')', ']', '}']
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115

    CONJUNCTION  [вывод с использованием правила 115 (expr)]
    $default     вывод с использованием правила 115 (expr)

    Конфликт между правилом 115 и лексемой '<' разрешен выводом ('<' < '/').
    Конфликт между правилом 115 и лексемой '>' разрешен выводом ('>' < '/').
    Конфликт между правилом 115 и лексемой '+' разрешен выводом ('+' < '/').
    Конфликт между правилом 115 и лексемой '-' разрешен выводом ('-' < '/').
    Конфликт между правилом 115 и лексемой '/' разрешен выводом (%left '/').


State 179

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   98 declaration: type VAR DECLARE . expr
   99            | type VAR DECLARE . vector
  100            | type VAR DECLARE . matrix
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 57
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 60
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 214
    vector     переход в состояние 215
    expr       переход в состояние 216
    const      переход в состояние 56


State 180

   77 vector: VVARIABLE '(' vector . ',' '[' ']' ')'
   81       | vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    ','         сдвиг, и переход в состояние 217


State 181

  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr
  121     | VVARIABLE '(' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120
    ')'          сдвиг, и переход в состояние 218


State 182

   59 matrix: MVARIABLE '(' '[' . ']' ',' vector ')'
   79 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 219


State 183

   60 matrix: MVARIABLE '(' matrix . ')'
   62       | matrix . '*' matrix
   63       | matrix . ELEMMULT matrix
   64       | matrix . '\''
   65       | matrix . RIGHTSHIFT
   66       | matrix . LEFTSHIFT
   68       | matrix . ELEMMULT vector
   69       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 100
    '\''        сдвиг, и переход в состояние 101
    LEFTSHIFT   сдвиг, и переход в состояние 102
    RIGHTSHIFT  сдвиг, и переход в состояние 103
    '*'         сдвиг, и переход в состояние 104
    ')'         сдвиг, и переход в состояние 220


State 184

   58 matrix: MVARIABLE '(' vector . ',' '[' ']' ')'
   67       | vector . '\''
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    ','         сдвиг, и переход в состояние 221


State 185

   78 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr
  122     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 115
    ','          сдвиг, и переход в состояние 222
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120


State 186

   86 vector: error expr .  [error, NEWLINE, ELEMMULT, LEFTSHIFT, RIGHTSHIFT, ',', '}']
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    $default  вывод с использованием правила 86 (vector)


State 187

   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   77       | VVARIABLE '(' . vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr

    error      сдвиг, и переход в состояние 126
    VVARIABLE  сдвиг, и переход в состояние 127
    MVARIABLE  сдвиг, и переход в состояние 128
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 180


State 188

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   78 vector: MVARIABLE '(' . expr ',' '[' ']' ')'
   79       | MVARIABLE '(' . '[' ']' ',' expr ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '['        сдвиг, и переход в состояние 208

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 223
    const      переход в состояние 56


State 189

   77 vector: VVARIABLE '(' vector ',' . '[' ']' ')'
   91 vmdeclaration: VVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN vector

    '['  сдвиг, и переход в состояние 224


State 190

   90 vmdeclaration: VVARIABLE '(' expr ')' . ASSIGN expr
  121 expr: VVARIABLE '(' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 225

    $default  вывод с использованием правила 121 (expr)


State 191

   72 matrix: error expr .  [error, NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, ',', DOUBLEDOT, '*', ')', ']']
   86 vector: error expr .  [ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    ELEMMULT    вывод с использованием правила 72 (matrix)
    ELEMMULT    [вывод с использованием правила 86 (vector)]
    '\''        вывод с использованием правила 72 (matrix)
    '\''        [вывод с использованием правила 86 (vector)]
    LEFTSHIFT   вывод с использованием правила 72 (matrix)
    LEFTSHIFT   [вывод с использованием правила 86 (vector)]
    RIGHTSHIFT  вывод с использованием правила 72 (matrix)
    RIGHTSHIFT  [вывод с использованием правила 86 (vector)]
    $default    вывод с использованием правила 72 (matrix)


State 192

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   58       | MVARIABLE '(' . vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   59       | MVARIABLE '(' . '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   60       | MVARIABLE '(' . matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   78       | MVARIABLE '(' . expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   79       | MVARIABLE '(' . '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 57
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 60
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '['        сдвиг, и переход в состояние 182
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 183
    vector     переход в состояние 184
    expr       переход в состояние 223
    const      переход в состояние 56


State 193

   59 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   79 vector: MVARIABLE '(' '[' ']' . ',' expr ')'
   94 vmdeclaration: MVARIABLE '(' '[' ']' . ',' expr ')' ASSIGN vector
   96              | MVARIABLE '(' '[' ']' . ',' vector ')' ASSIGN matrix

    ','  сдвиг, и переход в состояние 226


State 194

   60 matrix: MVARIABLE '(' matrix ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   97 vmdeclaration: MVARIABLE '(' matrix ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 227

    $default  вывод с использованием правила 60 (matrix)


State 195

   58 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'
   95 vmdeclaration: MVARIABLE '(' vector ',' . '[' ']' ')' ASSIGN matrix

    '['  сдвиг, и переход в состояние 228


State 196

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   78 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
   92 vmdeclaration: MVARIABLE '(' expr ',' . expr ')' ASSIGN expr
   93              | MVARIABLE '(' expr ',' . '[' ']' ')' ASSIGN vector
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  122     | MVARIABLE '(' expr ',' . expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '['        сдвиг, и переход в состояние 229

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 230
    const      переход в состояние 56


State 197

  105 print: PRINT '(' VVARIABLE ')' .

    $default  вывод с использованием правила 105 (print)


State 198

  106 print: PRINT '(' MVARIABLE ')' .

    $default  вывод с использованием правила 106 (print)


State 199

  104 print: PRINT '(' expr ')' .

    $default  вывод с использованием правила 104 (print)


State 200

  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr
  122     | MVARIABLE '(' expr . ',' expr ')'

    CONJUNCTION  сдвиг, и переход в состояние 115
    ','          сдвиг, и переход в состояние 231
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120


State 201

   31 begif: B .

    $default  вывод с использованием правила 31 (begif)


State 202

   32 begif: BEGIF .

    $default  вывод с использованием правила 32 (begif)


State 203

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22     | . error NEWLINE
   23 robotactions: . robotright
   24             | . robotleft
   25 robotmove: . MOVE '(' expr ')'
   26 robotright: . RIGHT
   27 robotleft: . LEFT
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   30 iff: . IF expr NEWLINE begif stmts endif
   30    | IF expr NEWLINE begif . stmts endif
   39 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   54 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   55              | . error
   56 function: . function_head B NEWLINE stmts E
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   90 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   91              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   92              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   93              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   94              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   95              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   96              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   97              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   98 declaration: . type VAR DECLARE expr
   99            | . type VAR DECLARE vector
  100            | . type VAR DECLARE matrix
  101 assignment: . VARIABLE ASSIGN expr
  102           | . VVARIABLE ASSIGN vector
  103           | . MVARIABLE ASSIGN matrix
  104 print: . PRINT '(' expr ')'
  105      | . PRINT '(' VVARIABLE ')'
  106      | . PRINT '(' MVARIABLE ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 80
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmts          переход в состояние 232
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function_head  переход в состояние 46
    function       переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 204

   39 forr: FORR declaration DOUBLEDOT expr . NEWLINE begfor stmts endfor
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    NEWLINE      сдвиг, и переход в состояние 233
    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120


State 205

   25 robotmove: MOVE '(' expr ')' .

    $default  вывод с использованием правила 25 (robotmove)


State 206

   41 return_func: return_func ',' type . VAR

    VAR  сдвиг, и переход в состояние 234


State 207

   54 function_head: '[' return_func ']' DECLARE . FUNC VAR '(' args_func ')'

    FUNC  сдвиг, и переход в состояние 235


State 208

   79 vector: MVARIABLE '(' '[' . ']' ',' expr ')'

    ']'  сдвиг, и переход в состояние 236


State 209

   74 listexprs: listexprs ',' vector .  [error, ',', '}']
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    $default  вывод с использованием правила 74 (listexprs)


State 210

   73 listexprs: vector ',' vector .  [error, ',', '}']
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    $default  вывод с использованием правила 73 (listexprs)


State 211

   88 exprs: exprs ',' expr .  [error, ',', '}']
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    $default  вывод с использованием правила 88 (exprs)


State 212

   87 exprs: expr ',' expr .  [error, ',', '}']
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    $default  вывод с использованием правила 87 (exprs)


State 213

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22     | . error NEWLINE
   23 robotactions: . robotright
   24             | . robotleft
   25 robotmove: . MOVE '(' expr ')'
   26 robotright: . RIGHT
   27 robotleft: . LEFT
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   30 iff: . IF expr NEWLINE begif stmts endif
   39 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   54 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   55              | . error
   56 function: . function_head B NEWLINE stmts E
   56         | function_head B NEWLINE stmts . E
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   90 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   91              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   92              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   93              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   94              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   95              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   96              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   97              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   98 declaration: . type VAR DECLARE expr
   99            | . type VAR DECLARE vector
  100            | . type VAR DECLARE matrix
  101 assignment: . VARIABLE ASSIGN expr
  102           | . VVARIABLE ASSIGN vector
  103           | . MVARIABLE ASSIGN matrix
  104 print: . PRINT '(' expr ')'
  105      | . PRINT '(' VVARIABLE ')'
  106      | . PRINT '(' MVARIABLE ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 92
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    E          сдвиг, и переход в состояние 237
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmt           переход в состояние 93
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function_head  переход в состояние 46
    function       переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 214

   62 matrix: matrix . '*' matrix
   63       | matrix . ELEMMULT matrix
   64       | matrix . '\''
   65       | matrix . RIGHTSHIFT
   66       | matrix . LEFTSHIFT
   68       | matrix . ELEMMULT vector
   69       | matrix . ELEMMULT expr
  100 declaration: type VAR DECLARE matrix .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 100
    '\''        сдвиг, и переход в состояние 101
    LEFTSHIFT   сдвиг, и переход в состояние 102
    RIGHTSHIFT  сдвиг, и переход в состояние 103
    '*'         сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 100 (declaration)


State 215

   67 matrix: vector . '\''
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr
   99 declaration: type VAR DECLARE vector .  [NEWLINE, DOUBLEDOT]

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    $default  вывод с использованием правила 99 (declaration)


State 216

   98 declaration: type VAR DECLARE expr .  [NEWLINE, DOUBLEDOT]
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    $default  вывод с использованием правила 98 (declaration)


State 217

   77 vector: VVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 238


State 218

  121 expr: VVARIABLE '(' expr ')' .

    $default  вывод с использованием правила 121 (expr)


State 219

   59 matrix: MVARIABLE '(' '[' ']' . ',' vector ')'
   79 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 239


State 220

   60 matrix: MVARIABLE '(' matrix ')' .

    $default  вывод с использованием правила 60 (matrix)


State 221

   58 matrix: MVARIABLE '(' vector ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 240


State 222

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   78 vector: MVARIABLE '(' expr ',' . '[' ']' ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  122     | MVARIABLE '(' expr ',' . expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '['        сдвиг, и переход в состояние 241

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 242
    const      переход в состояние 56


State 223

   78 vector: MVARIABLE '(' expr . ',' '[' ']' ')'
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    ','          сдвиг, и переход в состояние 243
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120


State 224

   77 vector: VVARIABLE '(' vector ',' '[' . ']' ')'
   91 vmdeclaration: VVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 244


State 225

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   90 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN . expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 245
    const      переход в состояние 56


State 226

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   59 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   79       | MVARIABLE '(' '[' ']' ',' . expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   94 vmdeclaration: MVARIABLE '(' '[' ']' ',' . expr ')' ASSIGN vector
   96              | MVARIABLE '(' '[' ']' ',' . vector ')' ASSIGN matrix
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 85
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 246
    expr       переход в состояние 247
    const      переход в состояние 56


State 227

   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   97 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 132
    VVARIABLE  сдвиг, и переход в состояние 127
    MVARIABLE  сдвиг, и переход в состояние 133
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 248
    vector  переход в состояние 135


State 228

   58 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'
   95 vmdeclaration: MVARIABLE '(' vector ',' '[' . ']' ')' ASSIGN matrix

    ']'  сдвиг, и переход в состояние 249


State 229

   78 vector: MVARIABLE '(' expr ',' '[' . ']' ')'
   93 vmdeclaration: MVARIABLE '(' expr ',' '[' . ']' ')' ASSIGN vector

    ']'  сдвиг, и переход в состояние 250


State 230

   92 vmdeclaration: MVARIABLE '(' expr ',' expr . ')' ASSIGN expr
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr
  122     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120
    ')'          сдвиг, и переход в состояние 251


State 231

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  122     | MVARIABLE '(' expr ',' . expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 242
    const      переход в состояние 56


State 232

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22     | . error NEWLINE
   23 robotactions: . robotright
   24             | . robotleft
   25 robotmove: . MOVE '(' expr ')'
   26 robotright: . RIGHT
   27 robotleft: . LEFT
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   30 iff: . IF expr NEWLINE begif stmts endif
   30    | IF expr NEWLINE begif stmts . endif
   33 endif: . E
   34      | . ENDIF
   39 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   54 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   55              | . error
   56 function: . function_head B NEWLINE stmts E
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   90 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   91              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   92              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   93              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   94              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   95              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   96              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   97              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   98 declaration: . type VAR DECLARE expr
   99            | . type VAR DECLARE vector
  100            | . type VAR DECLARE matrix
  101 assignment: . VARIABLE ASSIGN expr
  102           | . VVARIABLE ASSIGN vector
  103           | . MVARIABLE ASSIGN matrix
  104 print: . PRINT '(' expr ')'
  105      | . PRINT '(' VVARIABLE ')'
  106      | . PRINT '(' MVARIABLE ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 92
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    E          сдвиг, и переход в состояние 252
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    ENDIF      сдвиг, и переход в состояние 253
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmt           переход в состояние 93
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    endif          переход в состояние 254
    forr           переход в состояние 45
    function_head  переход в состояние 46
    function       переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 233

   35 begfor: . B
   36       | . BEGFOR
   39 forr: FORR declaration DOUBLEDOT expr NEWLINE . begfor stmts endfor

    B       сдвиг, и переход в состояние 255
    BEGFOR  сдвиг, и переход в состояние 256

    begfor  переход в состояние 257


State 234

   41 return_func: return_func ',' type VAR .

    $default  вывод с использованием правила 41 (return_func)


State 235

   54 function_head: '[' return_func ']' DECLARE FUNC . VAR '(' args_func ')'

    VAR  сдвиг, и переход в состояние 258


State 236

   79 vector: MVARIABLE '(' '[' ']' . ',' expr ')'

    ','  сдвиг, и переход в состояние 259


State 237

   56 function: function_head B NEWLINE stmts E .

    $default  вывод с использованием правила 56 (function)


State 238

   77 vector: VVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 260


State 239

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   59 matrix: MVARIABLE '(' '[' ']' ',' . vector ')'
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   79       | MVARIABLE '(' '[' ']' ',' . expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 85
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 86
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 87

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    vector     переход в состояние 261
    expr       переход в состояние 262
    const      переход в состояние 56


State 240

   58 matrix: MVARIABLE '(' vector ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 263


State 241

   78 vector: MVARIABLE '(' expr ',' '[' . ']' ')'

    ']'  сдвиг, и переход в состояние 264


State 242

  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr
  122     | MVARIABLE '(' expr ',' expr . ')'

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120
    ')'          сдвиг, и переход в состояние 265


State 243

   78 vector: MVARIABLE '(' expr ',' . '[' ']' ')'

    '['  сдвиг, и переход в состояние 241


State 244

   77 vector: VVARIABLE '(' vector ',' '[' ']' . ')'
   91 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 266


State 245

   90 vmdeclaration: VVARIABLE '(' expr ')' ASSIGN expr .  [NEWLINE]
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    $default  вывод с использованием правила 90 (vmdeclaration)


State 246

   59 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr
   96 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector . ')' ASSIGN matrix

    ELEMMULT    сдвиг, и переход в состояние 106
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    ')'         сдвиг, и переход в состояние 267


State 247

   79 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
   94 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr . ')' ASSIGN vector
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120
    ')'          сдвиг, и переход в состояние 268


State 248

   62 matrix: matrix . '*' matrix
   63       | matrix . ELEMMULT matrix
   64       | matrix . '\''
   65       | matrix . RIGHTSHIFT
   66       | matrix . LEFTSHIFT
   68       | matrix . ELEMMULT vector
   69       | matrix . ELEMMULT expr
   97 vmdeclaration: MVARIABLE '(' matrix ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 100
    '\''        сдвиг, и переход в состояние 101
    LEFTSHIFT   сдвиг, и переход в состояние 102
    RIGHTSHIFT  сдвиг, и переход в состояние 103
    '*'         сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 97 (vmdeclaration)


State 249

   58 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'
   95 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' . ')' ASSIGN matrix

    ')'  сдвиг, и переход в состояние 269


State 250

   78 vector: MVARIABLE '(' expr ',' '[' ']' . ')'
   93 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' . ')' ASSIGN vector

    ')'  сдвиг, и переход в состояние 270


State 251

   92 vmdeclaration: MVARIABLE '(' expr ',' expr ')' . ASSIGN expr
  122 expr: MVARIABLE '(' expr ',' expr ')' .  [NEWLINE, CONJUNCTION, '<', '>', '+', '-', '/', ')']

    ASSIGN  сдвиг, и переход в состояние 271

    $default  вывод с использованием правила 122 (expr)


State 252

   33 endif: E .

    $default  вывод с использованием правила 33 (endif)


State 253

   34 endif: ENDIF .

    $default  вывод с использованием правила 34 (endif)


State 254

   30 iff: IF expr NEWLINE begif stmts endif .

    $default  вывод с использованием правила 30 (iff)


State 255

   35 begfor: B .

    $default  вывод с использованием правила 35 (begfor)


State 256

   36 begfor: BEGFOR .

    $default  вывод с использованием правила 36 (begfor)


State 257

    5 stmts: . stmt
    6      | . stmts stmt
    7      | . stmts error
    8      | . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22     | . error NEWLINE
   23 robotactions: . robotright
   24             | . robotleft
   25 robotmove: . MOVE '(' expr ')'
   26 robotright: . RIGHT
   27 robotleft: . LEFT
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   30 iff: . IF expr NEWLINE begif stmts endif
   39 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   39     | FORR declaration DOUBLEDOT expr NEWLINE begfor . stmts endfor
   54 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   55              | . error
   56 function: . function_head B NEWLINE stmts E
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   90 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   91              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   92              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   93              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   94              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   95              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   96              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   97              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   98 declaration: . type VAR DECLARE expr
   99            | . type VAR DECLARE vector
  100            | . type VAR DECLARE matrix
  101 assignment: . VARIABLE ASSIGN expr
  102           | . VVARIABLE ASSIGN vector
  103           | . MVARIABLE ASSIGN matrix
  104 print: . PRINT '(' expr ')'
  105      | . PRINT '(' VVARIABLE ')'
  106      | . PRINT '(' MVARIABLE ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 80
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmts          переход в состояние 272
    stmt           переход в состояние 37
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    forr           переход в состояние 45
    function_head  переход в состояние 46
    function       переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 258

   54 function_head: '[' return_func ']' DECLARE FUNC VAR . '(' args_func ')'

    '('  сдвиг, и переход в состояние 273


State 259

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   79 vector: MVARIABLE '(' '[' ']' ',' . expr ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 262
    const      переход в состояние 56


State 260

   77 vector: VVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 274


State 261

   59 matrix: MVARIABLE '(' '[' ']' ',' vector . ')'
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109
    ')'         сдвиг, и переход в состояние 275


State 262

   79 vector: MVARIABLE '(' '[' ']' ',' expr . ')'
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120
    ')'          сдвиг, и переход в состояние 276


State 263

   58 matrix: MVARIABLE '(' vector ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 277


State 264

   78 vector: MVARIABLE '(' expr ',' '[' ']' . ')'

    ')'  сдвиг, и переход в состояние 278


State 265

  122 expr: MVARIABLE '(' expr ',' expr ')' .

    $default  вывод с использованием правила 122 (expr)


State 266

   77 vector: VVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   91 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 279

    $default  вывод с использованием правила 77 (vector)


State 267

   59 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   96 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 280

    $default  вывод с использованием правила 59 (matrix)


State 268

   79 vector: MVARIABLE '(' '[' ']' ',' expr ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   94 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 281

    $default  вывод с использованием правила 79 (vector)


State 269

   58 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT, '*']
   95 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' . ASSIGN matrix

    ASSIGN  сдвиг, и переход в состояние 282

    $default  вывод с использованием правила 58 (matrix)


State 270

   78 vector: MVARIABLE '(' expr ',' '[' ']' ')' .  [NEWLINE, ELEMMULT, '\'', LEFTSHIFT, RIGHTSHIFT]
   93 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' . ASSIGN vector

    ASSIGN  сдвиг, и переход в состояние 283

    $default  вывод с использованием правила 78 (vector)


State 271

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   92 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN . expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 72
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 73
    MVARIABLE  сдвиг, и переход в состояние 74
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    expr       переход в состояние 284
    const      переход в состояние 56


State 272

    6 stmts: stmts . stmt
    7      | stmts . error
    9 stmt: . NEWLINE
   10     | . expr NEWLINE
   11     | . vector NEWLINE
   12     | . matrix NEWLINE
   13     | . print NEWLINE
   14     | . vmdeclaration NEWLINE
   15     | . declaration NEWLINE
   16     | . assignment NEWLINE
   17     | . iff NEWLINE
   18     | . forr NEWLINE
   19     | . function NEWLINE
   20     | . robotactions NEWLINE
   21     | . '(' stmts ')'
   22     | . error NEWLINE
   23 robotactions: . robotright
   24             | . robotleft
   25 robotmove: . MOVE '(' expr ')'
   26 robotright: . RIGHT
   27 robotleft: . LEFT
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   30 iff: . IF expr NEWLINE begif stmts endif
   37 endfor: . E
   38       | . ENDFOR
   39 forr: . FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor
   39     | FORR declaration DOUBLEDOT expr NEWLINE begfor stmts . endfor
   54 function_head: . '[' return_func ']' DECLARE FUNC VAR '(' args_func ')'
   55              | . error
   56 function: . function_head B NEWLINE stmts E
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   90 vmdeclaration: . VVARIABLE '(' expr ')' ASSIGN expr
   91              | . VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector
   92              | . MVARIABLE '(' expr ',' expr ')' ASSIGN expr
   93              | . MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector
   94              | . MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector
   95              | . MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix
   96              | . MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix
   97              | . MVARIABLE '(' matrix ')' ASSIGN matrix
   98 declaration: . type VAR DECLARE expr
   99            | . type VAR DECLARE vector
  100            | . type VAR DECLARE matrix
  101 assignment: . VARIABLE ASSIGN expr
  102           | . VVARIABLE ASSIGN vector
  103           | . MVARIABLE ASSIGN matrix
  104 print: . PRINT '(' expr ')'
  105      | . PRINT '(' VVARIABLE ')'
  106      | . PRINT '(' MVARIABLE ')'
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 92
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 7
    VVARIABLE  сдвиг, и переход в состояние 8
    MVARIABLE  сдвиг, и переход в состояние 9
    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21
    NEWLINE    сдвиг, и переход в состояние 22
    PRINT      сдвиг, и переход в состояние 23
    IF         сдвиг, и переход в состояние 24
    FORR       сдвиг, и переход в состояние 25
    E          сдвиг, и переход в состояние 285
    MOVE       сдвиг, и переход в состояние 26
    RIGHT      сдвиг, и переход в состояние 27
    LEFT       сдвиг, и переход в состояние 28
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    ENDFOR     сдвиг, и переход в состояние 286
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 33
    '['        сдвиг, и переход в состояние 34
    '{'        сдвиг, и переход в состояние 35

    stmt           переход в состояние 93
    robotactions   переход в состояние 38
    robotmove      переход в состояние 39
    robotright     переход в состояние 40
    robotleft      переход в состояние 41
    robotwall      переход в состояние 42
    robotexit      переход в состояние 43
    iff            переход в состояние 44
    endfor         переход в состояние 287
    forr           переход в состояние 45
    function_head  переход в состояние 46
    function       переход в состояние 47
    matrix         переход в состояние 48
    vector         переход в состояние 49
    vmdeclaration  переход в состояние 50
    declaration    переход в состояние 51
    assignment     переход в состояние 52
    print          переход в состояние 53
    expr           переход в состояние 54
    type           переход в состояние 55
    const          переход в состояние 56


State 273

   43 args_func: . '[' type VAR
   44          | . '[' type VAR DECLARE expr
   45          | . '[' type VAR DECLARE vector
   46          | . '[' type VAR DECLARE matrix
   47          | . args_func ',' type VAR
   48          | . args_func ',' type VAR DECLARE expr
   49          | . args_func ',' type VAR DECLARE vector
   50          | . args_func ',' type VAR DECLARE matrix
   51          | . args_func ']'
   52          | . args_func error
   53          | . error
   54 function_head: '[' return_func ']' DECLARE FUNC VAR '(' . args_func ')'

    error  сдвиг, и переход в состояние 288
    '['    сдвиг, и переход в состояние 289

    args_func  переход в состояние 290


State 274

   77 vector: VVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 77 (vector)


State 275

   59 matrix: MVARIABLE '(' '[' ']' ',' vector ')' .

    $default  вывод с использованием правила 59 (matrix)


State 276

   79 vector: MVARIABLE '(' '[' ']' ',' expr ')' .

    $default  вывод с использованием правила 79 (vector)


State 277

   58 matrix: MVARIABLE '(' vector ',' '[' ']' ')' .

    $default  вывод с использованием правила 58 (matrix)


State 278

   78 vector: MVARIABLE '(' expr ',' '[' ']' ')' .

    $default  вывод с использованием правила 78 (vector)


State 279

   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   91 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 126
    VVARIABLE  сдвиг, и переход в состояние 127
    MVARIABLE  сдвиг, и переход в состояние 128
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 291


State 280

   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   96 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 132
    VVARIABLE  сдвиг, и переход в состояние 127
    MVARIABLE  сдвиг, и переход в состояние 133
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 292
    vector  переход в состояние 135


State 281

   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   94 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 126
    VVARIABLE  сдвиг, и переход в состояние 127
    MVARIABLE  сдвиг, и переход в состояние 128
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 293


State 282

   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   95 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN . matrix

    error      сдвиг, и переход в состояние 132
    VVARIABLE  сдвиг, и переход в состояние 127
    MVARIABLE  сдвиг, и переход в состояние 133
    '{'        сдвиг, и переход в состояние 35

    matrix  переход в состояние 294
    vector  переход в состояние 135


State 283

   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
   93 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN . vector

    error      сдвиг, и переход в состояние 126
    VVARIABLE  сдвиг, и переход в состояние 127
    MVARIABLE  сдвиг, и переход в состояние 128
    '{'        сдвиг, и переход в состояние 87

    vector  переход в состояние 295


State 284

   92 vmdeclaration: MVARIABLE '(' expr ',' expr ')' ASSIGN expr .  [NEWLINE]
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    $default  вывод с использованием правила 92 (vmdeclaration)


State 285

   37 endfor: E .

    $default  вывод с использованием правила 37 (endfor)


State 286

   38 endfor: ENDFOR .

    $default  вывод с использованием правила 38 (endfor)


State 287

   39 forr: FORR declaration DOUBLEDOT expr NEWLINE begfor stmts endfor .

    $default  вывод с использованием правила 39 (forr)


State 288

   53 args_func: error .

    $default  вывод с использованием правила 53 (args_func)


State 289

   43 args_func: '[' . type VAR
   44          | '[' . type VAR DECLARE expr
   45          | '[' . type VAR DECLARE vector
   46          | '[' . type VAR DECLARE matrix
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    type  переход в состояние 296


State 290

   47 args_func: args_func . ',' type VAR
   48          | args_func . ',' type VAR DECLARE expr
   49          | args_func . ',' type VAR DECLARE vector
   50          | args_func . ',' type VAR DECLARE matrix
   51          | args_func . ']'
   52          | args_func . error
   54 function_head: '[' return_func ']' DECLARE FUNC VAR '(' args_func . ')'

    error  сдвиг, и переход в состояние 297
    ','    сдвиг, и переход в состояние 298
    ')'    сдвиг, и переход в состояние 299
    ']'    сдвиг, и переход в состояние 300


State 291

   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr
   91 vmdeclaration: VVARIABLE '(' vector ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    $default  вывод с использованием правила 91 (vmdeclaration)


State 292

   62 matrix: matrix . '*' matrix
   63       | matrix . ELEMMULT matrix
   64       | matrix . '\''
   65       | matrix . RIGHTSHIFT
   66       | matrix . LEFTSHIFT
   68       | matrix . ELEMMULT vector
   69       | matrix . ELEMMULT expr
   96 vmdeclaration: MVARIABLE '(' '[' ']' ',' vector ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 100
    '\''        сдвиг, и переход в состояние 101
    LEFTSHIFT   сдвиг, и переход в состояние 102
    RIGHTSHIFT  сдвиг, и переход в состояние 103
    '*'         сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 96 (vmdeclaration)


State 293

   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr
   94 vmdeclaration: MVARIABLE '(' '[' ']' ',' expr ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    $default  вывод с использованием правила 94 (vmdeclaration)


State 294

   62 matrix: matrix . '*' matrix
   63       | matrix . ELEMMULT matrix
   64       | matrix . '\''
   65       | matrix . RIGHTSHIFT
   66       | matrix . LEFTSHIFT
   68       | matrix . ELEMMULT vector
   69       | matrix . ELEMMULT expr
   95 vmdeclaration: MVARIABLE '(' vector ',' '[' ']' ')' ASSIGN matrix .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 100
    '\''        сдвиг, и переход в состояние 101
    LEFTSHIFT   сдвиг, и переход в состояние 102
    RIGHTSHIFT  сдвиг, и переход в состояние 103
    '*'         сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 95 (vmdeclaration)


State 295

   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr
   93 vmdeclaration: MVARIABLE '(' expr ',' '[' ']' ')' ASSIGN vector .  [NEWLINE]

    ELEMMULT    сдвиг, и переход в состояние 106
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    $default  вывод с использованием правила 93 (vmdeclaration)


State 296

   43 args_func: '[' type . VAR
   44          | '[' type . VAR DECLARE expr
   45          | '[' type . VAR DECLARE vector
   46          | '[' type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 301


State 297

   52 args_func: args_func error .

    $default  вывод с использованием правила 52 (args_func)


State 298

   47 args_func: args_func ',' . type VAR
   48          | args_func ',' . type VAR DECLARE expr
   49          | args_func ',' . type VAR DECLARE vector
   50          | args_func ',' . type VAR DECLARE matrix
  124 type: . INT
  125     | . CINT
  126     | . VINT
  127     | . MINT
  128     | . CVINT
  129     | . CMINT
  130     | . BOOLEAN
  131     | . CBOOLEAN
  132     | . VBOOLEAN
  133     | . MBOOLEAN
  134     | . CVBOOLEAN
  135     | . CMBOOLEAN

    CINT       сдвиг, и переход в состояние 10
    VINT       сдвиг, и переход в состояние 11
    MINT       сдвиг, и переход в состояние 12
    INT        сдвиг, и переход в состояние 13
    CVINT      сдвиг, и переход в состояние 14
    CMINT      сдвиг, и переход в состояние 15
    BOOLEAN    сдвиг, и переход в состояние 16
    CBOOLEAN   сдвиг, и переход в состояние 17
    VBOOLEAN   сдвиг, и переход в состояние 18
    MBOOLEAN   сдвиг, и переход в состояние 19
    CVBOOLEAN  сдвиг, и переход в состояние 20
    CMBOOLEAN  сдвиг, и переход в состояние 21

    type  переход в состояние 302


State 299

   54 function_head: '[' return_func ']' DECLARE FUNC VAR '(' args_func ')' .

    $default  вывод с использованием правила 54 (function_head)


State 300

   51 args_func: args_func ']' .

    $default  вывод с использованием правила 51 (args_func)


State 301

   43 args_func: '[' type VAR .  [error, ',', ')', ']']
   44          | '[' type VAR . DECLARE expr
   45          | '[' type VAR . DECLARE vector
   46          | '[' type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 303

    $default  вывод с использованием правила 43 (args_func)


State 302

   47 args_func: args_func ',' type . VAR
   48          | args_func ',' type . VAR DECLARE expr
   49          | args_func ',' type . VAR DECLARE vector
   50          | args_func ',' type . VAR DECLARE matrix

    VAR  сдвиг, и переход в состояние 304


State 303

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   44 args_func: '[' type VAR DECLARE . expr
   45          | '[' type VAR DECLARE . vector
   46          | '[' type VAR DECLARE . matrix
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 57
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 60
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 305
    vector     переход в состояние 306
    expr       переход в состояние 307
    const      переход в состояние 56


State 304

   47 args_func: args_func ',' type VAR .  [error, ',', ')', ']']
   48          | args_func ',' type VAR . DECLARE expr
   49          | args_func ',' type VAR . DECLARE vector
   50          | args_func ',' type VAR . DECLARE matrix

    DECLARE  сдвиг, и переход в состояние 308

    $default  вывод с использованием правила 47 (args_func)


State 305

   46 args_func: '[' type VAR DECLARE matrix .  [error, ',', ')', ']']
   62 matrix: matrix . '*' matrix
   63       | matrix . ELEMMULT matrix
   64       | matrix . '\''
   65       | matrix . RIGHTSHIFT
   66       | matrix . LEFTSHIFT
   68       | matrix . ELEMMULT vector
   69       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 100
    '\''        сдвиг, и переход в состояние 101
    LEFTSHIFT   сдвиг, и переход в состояние 102
    RIGHTSHIFT  сдвиг, и переход в состояние 103
    '*'         сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 46 (args_func)


State 306

   45 args_func: '[' type VAR DECLARE vector .  [error, ',', ')', ']']
   67 matrix: vector . '\''
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    $default  вывод с использованием правила 45 (args_func)


State 307

   44 args_func: '[' type VAR DECLARE expr .  [error, ',', ')', ']']
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    $default  вывод с использованием правила 44 (args_func)


State 308

   25 robotmove: . MOVE '(' expr ')'
   28 robotwall: . WALL
   29 robotexit: . ROBEX
   48 args_func: args_func ',' type VAR DECLARE . expr
   49          | args_func ',' type VAR DECLARE . vector
   50          | args_func ',' type VAR DECLARE . matrix
   57 matrix: . '{' listexprs '}'
   58       | . MVARIABLE '(' vector ',' '[' ']' ')'
   59       | . MVARIABLE '(' '[' ']' ',' vector ')'
   60       | . MVARIABLE '(' matrix ')'
   61       | . MVARIABLE
   62       | . matrix '*' matrix
   63       | . matrix ELEMMULT matrix
   64       | . matrix '\''
   65       | . matrix RIGHTSHIFT
   66       | . matrix LEFTSHIFT
   67       | . vector '\''
   68       | . matrix ELEMMULT vector
   69       | . matrix ELEMMULT expr
   70       | . error matrix
   71       | . error vector
   72       | . error expr
   76 vector: . '{' exprs '}'
   77       | . VVARIABLE '(' vector ',' '[' ']' ')'
   78       | . MVARIABLE '(' expr ',' '[' ']' ')'
   79       | . MVARIABLE '(' '[' ']' ',' expr ')'
   80       | . VVARIABLE
   81       | . vector ELEMMULT vector
   82       | . vector RIGHTSHIFT
   83       | . vector LEFTSHIFT
   84       | . vector ELEMMULT expr
   85       | . error vector
   86       | . error expr
  107 expr: . const
  108     | . robotexit
  109     | . robotmove
  110     | . robotwall
  111     | . VARIABLE
  112     | . '-' expr
  113     | . expr '+' expr
  114     | . expr '-' expr
  115     | . expr '/' expr
  116     | . expr '<' expr
  117     | . expr '>' expr
  118     | . '!' expr
  119     | . expr CONJUNCTION expr
  120     | . '(' expr ')'
  121     | . VVARIABLE '(' expr ')'
  122     | . MVARIABLE '(' expr ',' expr ')'
  123     | . error expr
  136 const: . INTEGER
  137      | . BOOL

    error      сдвиг, и переход в состояние 57
    BOOL       сдвиг, и переход в состояние 5
    INTEGER    сдвиг, и переход в состояние 6
    VARIABLE   сдвиг, и переход в состояние 58
    VVARIABLE  сдвиг, и переход в состояние 59
    MVARIABLE  сдвиг, и переход в состояние 60
    MOVE       сдвиг, и переход в состояние 26
    ROBEX      сдвиг, и переход в состояние 29
    WALL       сдвиг, и переход в состояние 30
    '-'        сдвиг, и переход в состояние 31
    '!'        сдвиг, и переход в состояние 32
    '('        сдвиг, и переход в состояние 62
    '{'        сдвиг, и переход в состояние 35

    robotmove  переход в состояние 39
    robotwall  переход в состояние 42
    robotexit  переход в состояние 43
    matrix     переход в состояние 309
    vector     переход в состояние 310
    expr       переход в состояние 311
    const      переход в состояние 56


State 309

   50 args_func: args_func ',' type VAR DECLARE matrix .  [error, ',', ')', ']']
   62 matrix: matrix . '*' matrix
   63       | matrix . ELEMMULT matrix
   64       | matrix . '\''
   65       | matrix . RIGHTSHIFT
   66       | matrix . LEFTSHIFT
   68       | matrix . ELEMMULT vector
   69       | matrix . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 100
    '\''        сдвиг, и переход в состояние 101
    LEFTSHIFT   сдвиг, и переход в состояние 102
    RIGHTSHIFT  сдвиг, и переход в состояние 103
    '*'         сдвиг, и переход в состояние 104

    $default  вывод с использованием правила 50 (args_func)


State 310

   49 args_func: args_func ',' type VAR DECLARE vector .  [error, ',', ')', ']']
   67 matrix: vector . '\''
   81 vector: vector . ELEMMULT vector
   82       | vector . RIGHTSHIFT
   83       | vector . LEFTSHIFT
   84       | vector . ELEMMULT expr

    ELEMMULT    сдвиг, и переход в состояние 106
    '\''        сдвиг, и переход в состояние 107
    LEFTSHIFT   сдвиг, и переход в состояние 108
    RIGHTSHIFT  сдвиг, и переход в состояние 109

    $default  вывод с использованием правила 49 (args_func)


State 311

   48 args_func: args_func ',' type VAR DECLARE expr .  [error, ',', ')', ']']
  113 expr: expr . '+' expr
  114     | expr . '-' expr
  115     | expr . '/' expr
  116     | expr . '<' expr
  117     | expr . '>' expr
  119     | expr . CONJUNCTION expr

    CONJUNCTION  сдвиг, и переход в состояние 115
    '<'          сдвиг, и переход в состояние 116
    '>'          сдвиг, и переход в состояние 117
    '+'          сдвиг, и переход в состояние 118
    '-'          сдвиг, и переход в состояние 119
    '/'          сдвиг, и переход в состояние 120

    $default  вывод с использованием правила 48 (args_func)
